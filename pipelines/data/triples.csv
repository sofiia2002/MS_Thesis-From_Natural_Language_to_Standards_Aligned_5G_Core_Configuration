Factoid,Triplet,Object 1,Relationship,Object 2,
5G Core Network is a introduced in 3GPP Release 15.,<object> 5G Core Network <relationship> is introduced in <object> 3GPP Release 15.,5GCoreNetwork,isIntroducedIn,3GPPRelease15,
Service-Based Architecture (SBA) enables dynamic service discovery.,<object> Service-Based Architecture (SBA) <relationship> enables <object> dynamic service discovery.,ServiceBasedArchitectureSBA,enables,DynamicServiceDiscovery,
SBA model decouples service consumer,<object> SBA model <relationship> decouples <object> service consumer,SBAModel,decouples,ServiceConsumer,
Service consumer is decoupled from service provider,<object> Service consumer <relationship> is decoupled from <object> service provider.,ServiceConsumer,isDecoupledFrom,ServiceProvider,
SBA model achieves decoupling via Network Repository Function (NRF),<object> SBA model <relationship> achieves decoupling via <object> Network Repository Function (NRF).,SBAModel,achievesDecouplingVia,NetworkRepositoryFunctionNRF,
Network Repository Function (NRF) mediates interaction between service provider.,<object> Network Repository Function (NRF) <relationship> mediates interaction between <object> service consumer.,NetworkRepositoryFunctionNRF,mediatesInteractionBetween,ServiceConsumer,
Service-Based Architecture (SBA) supports horizontal scalability.,<object> Service-Based Architecture (SBA) <relationship> supports <object> horizontal scalability.,ServiceBasedArchitectureSBA,supports,HorizontalScalability,
5G core functions is a designed as cloud-native components.,<object> 5G core functions <relationship> is_a <object> designed as cloud-native components.,5GCoreFunctions,isA,DesignedAsCloudNativeComponents,
Network Functions (NFs) is a implemented as microservices.,<object> Network Functions (NFs) <relationship> is_a <object> implemented as microservices.,NetworkFunctionsNFs,isA,ImplementedAsMicroservices,
Network Function (NF) runs in isolated execution environments,<object> Network Function (NF) <relationship> runs in <object> isolated execution environments,NetworkFunctionNF,runsIn,IsolatedExecutionEnvironments,
Isolated execution environments is a typically realized as containers.,<object> Isolated execution environment <relationship> typically realized as <object> container.,IsolatedExecutionEnvironment,typicallyRealizedAs,Container,
Microservices support vendor-agnostic deployments,<object> Microservices <relationship> support <object> vendor-agnostic deployments.,Microservices,support,VendorAgnosticDeployments,
Microservices support hardware-agnostic deployments,<object> Microservices <relationship> support <object> hardware-agnostic deployments.,Microservices,support,HardwareAgnosticDeployments,
Container platforms support vendor-agnostic deployments,<object> Container platforms <relationship> support <object> vendor-agnostic deployments.,ContainerPlatforms,support,VendorAgnosticDeployments,
Container platforms support hardware-agnostic deployments,<object> Container platforms <relationship> support <object> hardware-agnostic deployments.,ContainerPlatforms,support,HardwareAgnosticDeployments,
Vendor-agnostic deployments occur in hybrid cloud environments,<object> Vendor-agnostic deployments <relationship> occur in <object> hybrid cloud environments.,VendorAgnosticDeployments,occurIn,HybridCloudEnvironments,
Hardware-agnostic deployments occur in hybrid cloud environments,<object> Hardware-agnostic deployments <relationship> occur in <object> hybrid cloud environments.,HardwareAgnosticDeployments,occurIn,HybridCloudEnvironments,
Cloud-native features allow slicing,<object> Cloud-native features <relationship> allow <object> slicing.,CloudNativeFeatures,allow,Slicing,
Cloud-native features allow multi-tenancy,<object> Cloud-native features <relationship> allow <object> multi-tenancy.,CloudNativeFeatures,allow,MultiTenancy,
Cloud-native features allow elasticity,<object> Cloud-native features <relationship> allow <object> elasticity.,CloudNativeFeatures,allow,Elasticity,
Slicing is a used in managing network resources,<object> Slicing <relationship> is used in <object> managing network resources.,Slicing,isUsedIn,ManagingNetworkResources,
5G continues Control and User Plane Separation (CUPS) principle,<object> 5G <relationship> continues <object> Control and User Plane Separation (CUPS) principle,5G,continues,ControlAndUserPlaneSeparationCUPSPrinciple,
Control and User Plane Separation (CUPS) principle was introduced in 3GPP Release 14,<object> Control and User Plane Separation (CUPS) principle <relationship> was introduced in <object> 3GPP Release 14,ControlAndUserPlaneSeparationCUPSPrinciple,wasIntroducedIn,3GPPRelease14,
 CUPS principle allows independent placement of control-plane functions,<object> CUPS principle <relationship> allows <object> independent placement of control-plane functions,CUPSPrinciple,allows,IndependentPlacementOfControlPlaneFunctions,
CUPS enables UPF deployment close to the network edge,<object> CUPS <relationship> enables <object> UPF deployment close to the network edge,CUPS,enables,UPFDeploymentCloseToTheNetworkEdge,
UPF close to the network edge supports latency-sensitive services.,<object> UPF deployment close to the network edge <relationship> supports <object> latency-sensitive services.,UPFDeploymentCloseToTheNetworkEdge,supports,LatencySensitiveServices,
Separation of control and user planes (CUPS) enhances fault isolation.,<object> Separation of control and user planes (CUPS) <relationship> enhances <object> fault isolation.,SeparationOfControlAndUserPlanesCUPS,enhances,FaultIsolation,
CUPS is a prerequisite for flexible network slicing.,<object> CUPS <relationship> is a prerequisite for  <object> flexible network slicing.,CUPS,isAPrerequisiteFor,FlexibleNetworkSlicing,
5G SBA enables stateless operation of AMF.,<object> 5G SBA <relationship> enables <object> stateless operation of AMF.,5GSBA,enables,StatelessOperationOfAMF,
Stateless NFs gain elasticity,<object> Stateless NFs <relationship> gain <object> elasticity,StatelessNFs,gain,Elasticity,
Stateless NFs gain failure resilience,<object> Stateless NFs <relationship> gain <object> failure resilience,StatelessNFs,gain,FailureResilience,
Stateless NFs enable container-based deployments,<object> Stateless NFs <relationship> enable <object> container-based deployments,StatelessNFs,enable,ContainerBasedDeployments,
Stateless NFs enable fast restarts,<object> Stateless NFs <relationship> enable <object> fast restarts,StatelessNFs,enable,FastRestarts,
Fast restarts occur without local state loss,<object> Fast restarts <relationship> occur without <object> local state loss,FastRestarts,occurWithout,LocalStateLoss,
UDSF acts as centralized non-relational key-value store,"<object> UDSF acts as centralized non-relational key-value store, ""UDSF <relationship> enables <object> fast read/write of UE-related state.",UDSF,enables,FastReadWriteOfUERelatedState,
"UDSF acts as centralized non-relational key-value store, ""UDSF enables fast read/write of UE-related state.",<object> UDSF <relationship> acts as <object> centralized non-relational key-value store,UDSF,actsAs,CentralizedNonRelationalKeyValueStore,
Stateful NFs is a tightly coupled with internal UE context.,<object> Stateful NFs <relationship> is a <object> tightly coupled with internal UE context,StatefulNFs,isA,TightlyCoupledWithInternalUEContext,
NG-RAN is a split into gNB-DU.,<object> NG-RAN <relationship> is a <object> split into gNB-DU.,NGRAN,isA,SplitIntoGNBDU,
gNB-CU is a functionally divided into CU-CP.,<object> gNB-CU <relationship> is a <object> functionally divided into CU-CP.,GNBCU,isA,FunctionallyDividedIntoCUCP,
CU-CP connects to AMF.,<object> CU-CP <relationship> connects to <object> AMF.,CUCP,connectsTo,AMF,
CUPS architecture enables horizontal scaling.,<object> CUPS architecture <relationship> enables <object> horizontal scaling.,CUPSArchitecture,enables,HorizontalScaling,
5G NR uses scalable OFDM numerology.,<object> 5G NR <relationship> uses <object> scalable OFDM numerology.,5GNR,uses,ScalableOFDMNumerology,
Separation of control and data functions allows independent edge deployment,<object> Separation of control and data functions <relationship> allows <object> independent edge deployment,SeparationOfControlAndDataFunctions,allows,IndependentEdgeDeployment,
Separation of control and data functions allows CU-UP edge deployment,<object> Separation of control and data functions <relationship> allows <object> CU-UP edge deployment,SeparationOfControlAndDataFunctions,allows,CUUPEdgeDeployment,
Separation of control and data functions allows CU-CP centralization,<object> Separation of control and data functions <relationship> allows <object> CU-CP centralization,SeparationOfControlAndDataFunctions,allows,CUCPCentralization,
CU-UP at the edge reduces latency,<object> CU-UP at the edge <relationship> reduces <object> latency,CUUPAtTheEdge,reduces,Latency,
Independent edge deployment enables low latency,<object> Independent edge deployment <relationship> enables <object> low latency,IndependentEdgeDeployment,enables,LowLatency,
Functional splits enhance vendor diversity,<object> Functional splits <relationship> enhance <object> vendor diversity,FunctionalSplits,enhance,VendorDiversity,
Functional splits enhance network slicing,<object> Functional splits <relationship> enhance <object> network slicing,FunctionalSplits,enhance,NetworkSlicing,
Functional splits enhance multi-tenant orchestration,<object> Functional splits <relationship> enhance <object> multi-tenant orchestration,FunctionalSplits,enhance,MultiTenantOrchestration,
Multi-tenant orchestration occurs in cloud-native environments,<object> Multi-tenant orchestration <relationship> occurs in <object> cloud-native environments,MultiTenantOrchestration,occursIn,CloudNativeEnvironments,
NRF centralizes service registry,<object> NRF <relationship> centralizes <object> service registry,NRF,centralizes,ServiceRegistry,
NRF centralizes service discovery,<object> NRF <relationship> centralizes <object> service discovery,NRF,centralizes,ServiceDiscovery,
Control plane security must encompass confidentiality,<object> Control plane security <relationship> must encompass <object> confidentiality.,ControlPlaneSecurity,mustEncompass,Confidentiality,
Control plane security must encompass integrity,<object> Control plane security <relationship> must encompass <object> integrity.,ControlPlaneSecurity,mustEncompass,Integrity,
Control plane security must encompass authentication,<object> Control plane security <relationship> must encompass <object> authentication.,ControlPlaneSecurity,mustEncompass,Authentication,
Control plane security must encompass segmentation,<object> Control plane security <relationship> must encompass <object> segmentation.,ControlPlaneSecurity,mustEncompass,Segmentation,
Control plane security must encompass runtime monitoring,<object> Control plane security <relationship> must encompass <object> runtime monitoring.,ControlPlaneSecurity,mustEncompass,RuntimeMonitoring,
Confidentiality must apply across all NF interfaces,<object> Confidentiality <relationship> must apply across <object> all NF interfaces.,Confidentiality,mustApplyAcross,AllNFInterfaces,
Integrity must apply across all NF interfaces,<object> Integrity <relationship> must apply across <object> all NF interfaces.,Integrity,mustApplyAcross,AllNFInterfaces,
Authentication must apply across all NF interfaces,<object> Authentication <relationship> must apply across <object> all NF interfaces.,Authentication,mustApplyAcross,AllNFInterfaces,
Segmentation must apply across all NF interfaces,<object> Segmentation <relationship> must apply across <object> all NF interfaces.,Segmentation,mustApplyAcross,AllNFInterfaces,
Runtime monitoring must apply across all NF interfaces,<object> Runtime monitoring <relationship> must apply across <object> all NF interfaces.,RuntimeMonitoring,mustApplyAcross,AllNFInterfaces,
AMF manages UE registration,<object> AMF <relationship> manages <object> UE registration.,AMF,manages,UERegistration,
AMF manages mobility,<object> AMF <relationship> manages <object> mobility.,AMF,manages,Mobility,
AMF manages NAS signaling,<object> AMF <relationship> manages <object> NAS signaling.,AMF,manages,NASSignaling,
AMF authenticates UE using NAS,<object> AMF <relationship> authenticates <object> UE using NAS.,AMF,authenticates,UEUsingNAS,
AMF passes session control to SMF,<object> AMF <relationship> passes session control to <object> SMF.,AMF,passesSessionControlTo,SMF,
AMF is a control-plane only.,<object> AMF <relationship> is_a <object> control-plane only.,AMF,isA,ControlPlaneOnly,
AMF redirects UEs to appropriate SMF/UPF combinations,<object> AMF <relationship> redirects UEs to <object> appropriate SMF/UPF combinations,AMF,redirectsUEsTo,AppropriateSMFUPFCombinations,
AMF selects SMF/UPF combinations based on policies,<object> AMF <relationship> selects SMF/UPF combinations based on <object> policies,AMF,selectsSMFUPFCombinationsBasedOn,Policies,
AMF depends on UDM for subscription,<object> AMF <relationship> depends on UDM for <object> subscription,AMF,dependsOnUDMFor,Subscription,
AMF depends on AUSF for authentication,<object> AMF <relationship> depends on AUSF for <object> authentication,AMF,dependsOnAUSFFor,Authentication,
AMF depends on SMF for session setup,<object> AMF <relationship> depends on SMF for <object> session setup,AMF,dependsOnSMFFor,SessionSetup,
AMF uses N1 interface.,<object> AMF <relationship> uses <object> N1 interface.,AMF,uses,N1Interface,
SMF handles PDU session lifecycle,<object> SMF <relationship> handles <object> PDU session lifecycle,SMF,handles,PDUSessionLifecycle,
SMF handles PDU session setup,<object> SMF <relationship> handles <object> PDU session setup,SMF,handles,PDUSessionSetup,
SMF handles PDU session modification,<object> SMF <relationship> handles <object> PDU session modification,SMF,handles,PDUSessionModification,
SMF handles PDU session release,<object> SMF <relationship> handles <object> PDU session release,SMF,handles,PDUSessionRelease,
SMF allocates IP addresses,<object> SMF <relationship> allocates <object> IP addresses,SMF,allocates,IPAddresses,
SMF installs traffic steering rules,<object> SMF <relationship> installs <object> traffic steering rules,SMF,installs,TrafficSteeringRules,
Traffic steering rules installed in UPFs,<object> Traffic steering rules <relationship> installed in <object> UPFs,TrafficSteeringRules,installedIn,UPFs,
SMF enforces QoS,<object> SMF <relationship> enforces <object> QoS,SMF,enforces,QoS,
SMF uses PCF policies to enforce QoS,<object> SMF <relationship> uses PCF policies to enforce <object> QoS,SMF,usesPCFPoliciesToEnforce,QoS,
SMF connects to UPFs,<object> SMF <relationship> connects to <object> UPFs,SMF,connectsTo,UPFs,
SMF–UPF connection uses PFCP,<object> SMF–UPF connection <relationship> uses <object> PFCP,SMFUPFConnection,uses,PFCP,
PFCP is a designed for fast user-plane control,<object> PFCP <relationship> is a designed for <object> fast user-plane control,PFCP,isADesignedFor,FastUserPlaneControl,
SMF uses N11 interface.,<object> SMF <relationship> uses <object> N11 interface.,SMF,uses,N11Interface,
SMF depends on AMF,<object> SMF <relationship> depends on <object> AMF,SMF,dependsOn,AMF,
SMF depends on UPF,<object> SMF <relationship> depends on <object> UPF,SMF,dependsOn,UPF,
SMF depends on PCF,<object> SMF <relationship> depends on <object> PCF,SMF,dependsOn,PCF,
SMF exchanges session context.,<object> SMF <relationship> exchanges <object> session context.,SMF,exchanges,SessionContext,
SMF uses HTTP/2.,<object> SMF <relationship> uses <object> HTTP/2.,SMF,uses,HTTP2,
UPF handles user traffic forwarding,<object> UPF <relationship> handles <object> user traffic forwarding,UPF,handles,UserTrafficForwarding,
UPF handles QoS enforcement,<object> UPF <relationship> handles <object> QoS enforcement,UPF,handles,QoSEnforcement,
UPF forwards traffic between RAN.,<object> UPF forwards traffic <relationship> between <object> RAN.,UPFForwardsTraffic,between,RAN,
UPF forwards traffic between external data networks.,<object> UPF forwards traffic <relationship> between <object> external data networks.,UPFForwardsTraffic,between,ExternalDataNetworks,
UPF supports data buffering.,<object> UPF <relationship> supports <object> data buffering.,UPF,supports,DataBuffering,
Multiple UPFs can be deployed regionally,<object> Multiple UPFs <relationship> can be deployed per <object> region.,MultipleUPFs,canBeDeployedPer,Region,
Multiple UPFs support multi-access edge computing (MEC),<object> Multiple UPFs <relationship> support <object> multi-access edge computing (MEC),MultipleUPFs,support,MultiAccessEdgeComputingMEC,
Multiple UPFs support network slicing,<object> Multiple UPFs <relationship> support <object> network slicing,MultipleUPFs,support,NetworkSlicing,
UPF uses N3 interface.,<object> UPF <relationship> uses <object> N3 interface.,UPF,uses,N3Interface,
UPF depends on SMF,<object> UPF <relationship> depends on <object> SMF.,UPF,dependsOn,SMF,
UPF manages PDU sessions,<object> UPF <relationship> manages <object> PDU sessions.,UPF,manages,PDUSessions,
UPF manages QoS enforcement rules,<object> UPF <relationship> manages <object> QoS enforcement rules.,UPF,manages,QoSEnforcementRules,
UPF uses PFCP.,<object> UPF <relationship> uses <object> PFCP.,UPF,uses,PFCP,
AUSF performs challenge–response procedures,<object> AUSF <relationship> performs <object> challenge–response procedures.,AUSF,performs,ChallengeResponseProcedures,
Challenge–response procedures involve UEs,<object> Challenge–response procedures <relationship> involve <object> UEs.,ChallengeResponseProcedures,involve,UEs,
Challenge–response procedures occur during registration,<object> Challenge–response procedures <relationship> occur during <object> registration.,ChallengeResponseProcedures,occurDuring,Registration,
AUSF is stateless by design,<object> AUSF <relationship> is <object> stateless by design.,AUSF,is,StatelessByDesign,
AUSF uses N12 interface,<object> AUSF <relationship> uses <object> N12 interface.,AUSF,uses,N12Interface,
AUSF depends on UDM,<object> AUSF <relationship> depends on <object> UDM.,AUSF,dependsOn,UDM,
AUSF obtains subscription credentials from UDM,<object> AUSF <relationship> obtains <object> subscription credentials from UDM.,AUSF,obtains,SubscriptionCredentialsFromUDM,
AUSF processes authentication vectors,<object> AUSF <relationship> processes <object> authentication vectors.,AUSF,processes,AuthenticationVectors,
Authentication vectors are part of AUSF data handling,<object> Authentication vectors <relationship> are part of <object> AUSF data handling.,AuthenticationVectors,arePartOf,AUSFDataHandling,
UDM serves as central database,<object> UDM <relationship> serves as <object> central database.,UDM,servesAs,CentralDatabase,
Central database stores subscriber profiles,<object> Central database <relationship> stores <object> subscriber profiles.,CentralDatabase,stores,SubscriberProfiles,
Central database stores policies,<object> Central database <relationship> stores <object> policies.,CentralDatabase,stores,Policies,
UDM provides authentication data to AUSF,<object> UDM <relationship> provides <object> authentication data to AUSF.,UDM,provides,AuthenticationDataToAUSF,
UDM stores SUPI,<object> UDM <relationship> stores <object> SUPI.,UDM,stores,SUPI,
UDM stores subscription profiles,<object> UDM <relationship> stores <object> subscription profiles.,UDM,stores,SubscriptionProfiles,
UDM stores AM Policy Association,<object> UDM <relationship> stores <object> AM Policy Association.,UDM,stores,AMPolicyAssociation,
UDM uses N8 interface,<object> UDM <relationship> uses <object> N8 interface.,UDM,uses,N8Interface,
UDM manages subscription data,<object> UDM <relationship> manages <object> subscription data.,UDM,manages,SubscriptionData,
UDM manages access profiles,<object> UDM <relationship> manages <object> access profiles.,UDM,manages,AccessProfiles,
UDM manages authentication keys,<object> UDM <relationship> manages <object> authentication keys.,UDM,manages,AuthenticationKeys,
UDM may link with HSS,<object> UDM <relationship> may link with <object> HSS.,UDM,mayLinkWith,HSS,
UDM–HSS linking occurs in interworking scenarios,<object> UDM–HSS linking <relationship> occurs in <object> interworking scenarios.,UDMHSSLinking,occursIn,InterworkingScenarios,
UDM–HSS linking provides backward compatibility,<object> UDM–HSS linking <relationship> provides <object> backward compatibility.,UDMHSSLinking,provides,BackwardCompatibility,
PCF provides policy decisions,<object> PCF <relationship> provides <object> policy decisions.,PCF,provides,PolicyDecisions,
PCF enforces subscriber-specific policies,<object> PCF <relationship> enforces <object> subscriber-specific policies.,PCF,enforces,SubscriberSpecificPolicies,
PCF enforces subscriber-specific policies via SMF,<object> PCF <relationship> enforces via <object> SMF.,PCF,enforcesVia,SMF,
PCF works with AF (Application Function),<object> PCF <relationship> works with <object> AF (Application Function).,PCF,worksWith,AFApplicationFunction,
PCF and AF enforce application-level QoS,<object> PCF and AF <relationship> enforce <object> application-level QoS.,PCFAndAF,enforce,ApplicationLevelQoS,
PCF uses N7 interface,<object> PCF <relationship> uses <object> N7 interface.,PCF,uses,N7Interface,
PCF manages policy rules,<object> PCF <relationship> manages <object> policy rules.,PCF,manages,PolicyRules,
PCF manages network slicing information,<object> PCF <relationship> manages <object> network slicing information.,PCF,manages,NetworkSlicingInformation,
PCF manages QoS profiles,<object> PCF <relationship> manages <object> QoS profiles.,PCF,manages,QoSProfiles,
PCF may connect to UDR,<object> PCF <relationship> may connect to <object> UDR.,PCF,mayConnectTo,UDR,
UDR stores policy rules,<object> UDR <relationship> stores <object> policy rules.,UDR,stores,PolicyRules,
NRF provides service discovery,<object> NRF <relationship> provides <object> service discovery.,NRF,provides,ServiceDiscovery,
NRF enables dynamic discovery of NF services,<object> NRF <relationship> enables <object> dynamic discovery of NF services.,NRF,enables,DynamicDiscoveryOfNFServices,
Dynamic discovery of NF services uses API lookup,<object> Dynamic discovery of NF services <relationship> uses <object> API lookup.,DynamicDiscoveryOfNFServices,uses,APILookup,
NRF ensures service-level routing,<object> NRF <relationship> ensures <object> service-level routing.,NRF,ensures,ServiceLevelRouting,
NRF uses Nnrf interface,<object> NRF <relationship> uses <object> Nnrf interface.,NRF,uses,NnrfInterface,
NRF manages NF profiles,<object> NRF <relationship> manages <object> NF profiles.,NRF,manages,NFProfiles,
NRF manages service status,<object> NRF <relationship> manages <object> service status.,NRF,manages,ServiceStatus,
NRF manages availability,<object> NRF <relationship> manages <object> availability.,NRF,manages,Availability,
NRF is a dependency for SBA-based network functions,<object> NRF <relationship> is a dependency for <object> SBA-based network functions.,NRF,isADependencyFor,SBABasedNetworkFunctions,
UDR acts as centralized database backend,<object> UDR <relationship> acts as <object> centralized database backend.,UDR,actsAs,CentralizedDatabaseBackend,
UDR serves as backend for UDM,<object> UDR <relationship> serves as <object> backend for UDM.,UDR,servesAs,BackendForUDM,
UDR serves as backend for PCF,<object> UDR <relationship> serves as <object> backend for PCF.,UDR,servesAs,BackendForPCF,
UDR decouples business logic from persistent storage,<object> UDR <relationship> decouples <object> business logic from persistent storage.,UDR,decouples,BusinessLogicFromPersistentStorage,
Business logic includes UDM,<object> Business logic <relationship> includes <object> UDM.,BusinessLogic,includes,UDM,
UDR improves fault tolerance,<object> UDR <relationship> improves <object> fault tolerance.,UDR,improves,FaultTolerance,
UDR improves scaling,<object> UDR <relationship> improves <object> scaling.,UDR,improves,Scaling,
Fault tolerance applies to data-centric functions,<object> Fault tolerance <relationship> applies to <object> data-centric functions.,FaultTolerance,appliesTo,DataCentricFunctions,
Scaling applies to data-centric functions,<object> Scaling <relationship> applies to <object> data-centric functions.,Scaling,appliesTo,DataCentricFunctions,
UDR uses N5 interface,<object> UDR <relationship> uses <object> N5 interface.,UDR,uses,N5Interface,
UDR manages subscriber data,<object> UDR <relationship> manages <object> subscriber data.,UDR,manages,SubscriberData,
UDR manages policy data,<object> UDR <relationship> manages <object> policy data.,UDR,manages,PolicyData,
UDR manages configuration values,<object> UDR <relationship> manages <object> configuration values.,UDR,manages,ConfigurationValues,
PFCP is a standardized protocol for SMF-to-UPF control,<object> PFCP <relationship> is <object> standardized protocol for SMF-to-UPF control.,PFCP,is,StandardizedProtocolForSMFToUPFControl,
SMF uses PFCP,<object> SMF <relationship> uses <object> PFCP.,SMF,uses,PFCP,
PFCP is fundamental for enabling Control-User Plane Separation (CUPS),<object> PFCP <relationship> is <object> fundamental for enabling Control-User Plane Separation (CUPS).,PFCP,is,FundamentalForEnablingControlUserPlaneSeparationCUPS,
PFCP includes Keepalive mechanism,<object> PFCP <relationship> includes <object> Keepalive mechanism.,PFCP,includes,KeepaliveMechanism,
PFCP enables dynamic session lifecycle control,<object> PFCP <relationship> enables <object> dynamic session lifecycle control.,PFCP,enables,DynamicSessionLifecycleControl,
PFCP sessions maintain stateful associations between SMF,<object> PFCP sessions maintain stateful associations <relationship> between <object> SMF.,PFCPSessionsMaintainStatefulAssociations,between,SMF,
PFCP sessions maintain stateful associations between UPF,<object> PFCP sessions maintain stateful associations <relationship> between <object> UPF.,PFCPSessionsMaintainStatefulAssociations,between,UPF,
PFCP protocol supports heartbeats,<object> PFCP protocol <relationship> supports <object> heartbeats.,PFCPProtocol,supports,Heartbeats,
PFCP allows central management of distributed UPF instances,<object> PFCP <relationship> allows <object> central management of distributed UPF instances.,PFCP,allows,CentralManagementOfDistributedUPFInstances,
Central management of distributed UPF instances is performed by fewer SMF nodes,<object> Central management of distributed UPF instances <relationship> is performed by <object> fewer SMF nodes.,CentralManagementOfDistributedUPFInstances,isPerformedBy,FewerSMFNodes,
Advanced rule types in PFCP include QER,<object> Advanced rule types in PFCP <relationship> include <object> QER.,AdvancedRuleTypesInPFCP,include,QER,
Advanced rule types in PFCP include BAR,<object> Advanced rule types in PFCP <relationship> include <object> BAR.,AdvancedRuleTypesInPFCP,include,BAR,
Advanced rule types in PFCP enable precise QoS enforcement,<object> Advanced rule types in PFCP <relationship> enable <object> precise QoS enforcement.,AdvancedRuleTypesInPFCP,enable,PreciseQoSEnforcement,
Advanced rule types in PFCP enable packet buffering,<object> Advanced rule types in PFCP <relationship> enable <object> packet buffering.,AdvancedRuleTypesInPFCP,enable,PacketBuffering,
Precise QoS enforcement is tailored to per-session policy,<object> Precise QoS enforcement <relationship> is tailored to <object> per-session policy.,PreciseQoSEnforcement,isTailoredTo,PerSessionPolicy,
PFCP supports scalable deployment,<object> PFCP <relationship> supports <object> scalable deployment.,PFCP,supports,ScalableDeployment,
PFCP minimizes control overhead,<object> PFCP <relationship> minimizes <object> control overhead.,PFCP,minimizes,ControlOverhead,
Control overhead is minimized using compact rule structures,<object> Control overhead <relationship> is minimized using <object> compact rule structures.,ControlOverhead,isMinimizedUsing,CompactRuleStructures,
PFCP is specified in 3GPP TS 29.244,<object> PFCP <relationship> is specified in <object> 3GPP TS 29.244.,PFCP,isSpecifiedIn,3GPPTS29244,
SEPP encrypts inter-PLMN control signaling,<object> SEPP <relationship> encrypts <object> inter-PLMN control signaling.,SEPP,encrypts,InterPLMNControlSignaling,
SEPP proxies inter-PLMN control signaling,<object> SEPP <relationship> proxies <object> inter-PLMN control signaling.,SEPP,proxies,InterPLMNControlSignaling,
Inter-PLMN control signaling crosses roaming borders,<object> Inter-PLMN control signaling <relationship> crosses <object> roaming borders.,InterPLMNControlSignaling,crosses,RoamingBorders,
SEPP ensures end-to-end control-plane security,<object> SEPP <relationship> ensures <object> end-to-end control-plane security.,SEPP,ensures,EndToEndControlPlaneSecurity,
SEPP uses TLS/IPsec tunnels,<object> SEPP <relationship> uses <object> TLS/IPsec tunnels.,SEPP,uses,TLSIPsecTunnels,
N3IWF acts as gateway for non-3GPP access,<object> N3IWF <relationship> acts as <object> gateway for non-3GPP access.,N3IWF,actsAs,GatewayForNon3GPPAccess,
Non-3GPP access includes Wi-Fi,<object> Non-3GPP access <relationship> includes <object> Wi-Fi.,Non3GPPAccess,includes,WiFi,
N3IWF uses IKEv2 tunnels,<object> N3IWF <relationship> uses <object> IKEv2 tunnels.,N3IWF,uses,IKEv2Tunnels,
N3IWF bridges Wi-Fi clients to AMF securely,<object> N3IWF <relationship> bridges <object> Wi-Fi clients to AMF securely.,N3IWF,bridges,WiFiClientsToAMFSecurely,
N3IWF-mediated Wi-Fi–AMF connection does not require native RAN,<object> N3IWF-mediated Wi-Fi–AMF connection <relationship> does not require <object> native RAN.,N3IWFMediatedWiFiAMFConnection,doesNotRequire,NativeRAN,
W-AGF is a Wireline Access Gateway Function,<object> W-AGF <relationship> is <object> Wireline Access Gateway Function.,WAGF,is,WirelineAccessGatewayFunction,
W-AGF enables fixed wireless access (FWA),<object> W-AGF <relationship> enables <object> fixed wireless access (FWA).,WAGF,enables,FixedWirelessAccessFWA,
W-AGF enables fixed-line services,<object> W-AGF <relationship> enables <object> fixed-line services.,WAGF,enables,FixedLineServices,
Fixed wireless access (FWA) connects to 5G Core (5GC),<object> Fixed wireless access (FWA) <relationship> connects to <object> 5G Core (5GC).,FixedWirelessAccessFWA,connectsTo,5GCore5GC,
5G core employs Service-Based Architecture (SBA),<object> 5G core <relationship> employs <object> Service-Based Architecture (SBA).,5GCore,employs,ServiceBasedArchitectureSBA,
NFs register services via NRF,<object> NFs <relationship> register services via <object> NRF.,NFs,registerServicesVia,NRF,
NFs discover services via NRF,<object> NFs <relationship> discover services via <object> NRF.,NFs,discoverServicesVia,NRF,
Service registration and discovery via NRF use HTTP/2 + REST,<object> Service registration and discovery via NRF <relationship> use <object> HTTP/2 + REST.,ServiceRegistrationAndDiscoveryViaNRF,use,HTTP2REST,
Service-Based Architecture (SBA) provides modularity,<object> Service-Based Architecture (SBA) <relationship> provides <object> modularity.,ServiceBasedArchitectureSBA,provides,Modularity,
NSA (Non-Standalone) includes 5G NR radio,<object> NSA (Non-Standalone) <relationship> includes <object> 5G NR radio.,NSA,includes,5GNRRadio,
NSA (Non-Standalone) includes 4G EPC core,<object> NSA (Non-Standalone) <relationship> includes <object> 4G EPC core.,NSA,includes,4GEPCCore,
SA (Standalone) uses 5GC,<object> SA (Standalone) <relationship> uses <object> 5GC.,SA,uses,5GC,
Service-Based Architecture (SBA) includes AMF,<object> Service-Based Architecture (SBA) <relationship> includes <object> AMF.,ServiceBasedArchitectureSBA,includes,AMF,
Service-Based Architecture (SBA) includes SMF,<object> Service-Based Architecture (SBA) <relationship> includes <object> SMF.,ServiceBasedArchitectureSBA,includes,SMF,
Service-Based Architecture (SBA) includes UPF,<object> Service-Based Architecture (SBA) <relationship> includes <object> UPF.,ServiceBasedArchitectureSBA,includes,UPF,
Service-Based Architecture (SBA) includes UDM,<object> Service-Based Architecture (SBA) <relationship> includes <object> UDM.,ServiceBasedArchitectureSBA,includes,UDM,
Service-Based Architecture (SBA) includes PCF,<object> Service-Based Architecture (SBA) <relationship> includes <object> PCF.,ServiceBasedArchitectureSBA,includes,PCF,
Service-Based Architecture (SBA) includes SEPP,<object> Service-Based Architecture (SBA) <relationship> includes <object> SEPP.,ServiceBasedArchitectureSBA,includes,SEPP,
Service-Based Architecture (SBA) includes N3IWF,<object> Service-Based Architecture (SBA) <relationship> includes <object> N3IWF.,ServiceBasedArchitectureSBA,includes,N3IWF,
Service-Based Architecture (SBA) includes W-AGF,<object> Service-Based Architecture (SBA) <relationship> includes <object> W-AGF.,ServiceBasedArchitectureSBA,includes,WAGF,
SEPP is a roaming entity,<object> SEPP <relationship> is <object> roaming entity.,SEPP,is,RoamingEntity,
AMF can operate statelessly,<object> AMF <relationship> can operate <object> statelessly.,AMF,canOperate,Statelessly,
AMF externalizes UE context to UDSF,<object> AMF <relationship> externalizes <object> UE context to UDSF.,AMF,externalizes,UEContextToUDSF,
Externalizing UE context to UDSF enhances horizontal scalability,<object> Externalizing UE context to UDSF <relationship> enhances <object> horizontal scalability.,ExternalizingUEContextToUDSF,enhances,HorizontalScalability,
SMF uses N7 interface,<object> SMF <relationship> uses <object> N7 interface.,SMF,uses,N7Interface,
UPF maintains stateful session information,<object> UPF <relationship> maintains <object> stateful session information.,UPF,maintains,StatefulSessionInformation,
Stateful session information enables precise flow routing,<object> Stateful session information <relationship> enables <object> precise flow routing.,StatefulSessionInformation,enables,PreciseFlowRouting,
NRF supports load-aware NF instance selection,<object> NRF <relationship> supports <object> load-aware NF instance selection.,NRF,supports,LoadAwareNFInstanceSelection,
AUSF leverages HTTP/2 interfaces,<object> AUSF <relationship> leverages <object> HTTP/2 interfaces.,AUSF,leverages,HTTP2Interfaces,
AUSF securely interacts with UDM,<object> AUSF <relationship> securely interacts with <object> UDM.,AUSF,securelyInteractsWith,UDM,
Secure interaction with UDM retrieves authentication keys and vectors,<object> Secure interaction with UDM <relationship> retrieves <object> authentication keys and vectors.,SecureInteractionWithUDM,retrieves,AuthenticationKeysAndVectors,
UDM is a stateful front-end to subscriber data,<object> UDM <relationship> is <object> stateful front-end to subscriber data.,UDM,is,StatefulFrontEndToSubscriberData,
UDR acts as persistent central repository,<object> UDR <relationship> acts as <object> persistent central repository.,UDR,actsAs,PersistentCentralRepository,
UDR supports subscriber data for UDM,<object> UDR <relationship> supports <object> subscriber data for UDM.,UDR,supports,SubscriberDataForUDM,
PCF is inherently stateless,<object> PCF <relationship> is <object> inherently stateless.,PCF,is,InherentlyStateless,
NSSF enables network slicing,<object> NSSF <relationship> enables <object> network slicing.,NSSF,enables,NetworkSlicing,
NSSF selects slice instances,<object> NSSF <relationship> selects <object> slice instances.,NSSF,selects,SliceInstances,
Slice instance selection is based on policies,<object> Slice instance selection <relationship> is based on <object> policies.,SliceInstanceSelection,isBasedOn,Policies,
SEPP enforces inter-PLMN security,<object> SEPP <relationship> enforces <object> inter-PLMN security.,SEPP,enforces,InterPLMNSecurity,
SEPP encrypts control-plane messages,<object> SEPP <relationship> encrypts <object> control-plane messages.,SEPP,encrypts,ControlPlaneMessages,
N3IWF provides secure IPsec tunnels,<object> N3IWF <relationship> provides <object> secure IPsec tunnels.,N3IWF,provides,SecureIPsecTunnels,
Service-Based Architecture (SBA) enables control-plane NFs to expose RESTful APIs,<object> Service-Based Architecture (SBA) <relationship> enables <object> control-plane NFs to expose RESTful APIs.,ServiceBasedArchitectureSBA,enables,ControlPlaneNFsToExposeRESTfulAPIs,
Stateful NF design impacts context management,<object> Stateful NF design <relationship> impacts <object> context management.,StatefulNFDesign,impacts,ContextManagement,
Stateless NF design impacts context management,<object> Stateless NF design <relationship> impacts <object> context management.,StatelessNFDesign,impacts,ContextManagement,
Stateless NF design enables container-based scaling,<object> Stateless NF design <relationship> enables <object> container-based scaling.,StatelessNFDesign,enables,ContainerBasedScaling,
Stateless core NFs require external state repositories,<object> Stateless core NFs <relationship> require <object> external state repositories.,StatelessCoreNFs,require,ExternalStateRepositories,
AMF requires external state repositories,<object> AMF <relationship> requires <object> external state repositories.,AMF,requires,ExternalStateRepositories,
NRF is stateless,<object> NRF <relationship> is <object> stateless.,NRF,is,Stateless,
UDSF functions as shared key-value store,<object> UDSF <relationship> functions as <object> shared key-value store.,UDSF,functionsAs,SharedKeyValueStore,
Shared key-value store holds UE session context,<object> Shared key-value store <relationship> holds <object> UE session context.,SharedKeyValueStore,holds,UESessionContext,
Shared key-value store holds security credentials,<object> Shared key-value store <relationship> holds <object> security credentials.,SharedKeyValueStore,holds,SecurityCredentials,
Container-based stateless deployment enables robust horizontal scaling,<object> Container-based stateless deployment <relationship> enables <object> robust horizontal scaling.,ContainerBasedStatelessDeployment,enables,RobustHorizontalScaling,
Stateless architecture maintains 3GPP compliance,<object> Stateless architecture <relationship> maintains <object> 3GPP compliance.,StatelessArchitecture,maintains,3GPPCompliance,
Stateless architecture preserves standard SBI interfaces,<object> Stateless architecture <relationship> preserves <object> standard SBI interfaces.,StatelessArchitecture,preserves,StandardSBIInterfaces,
Stateless architecture requires only new UDSF endpoints,<object> Stateless architecture <relationship> requires <object> only new UDSF endpoints.,StatelessArchitecture,requires,OnlyNewUDSFEndpoints,
AMF offloads internal memory to UDSF,<object> AMF <relationship> offloads <object> internal memory to UDSF.,AMF,offloads,InternalMemoryToUDSF,
SMF offloads internal memory to UDSF,<object> SMF <relationship> offloads <object> internal memory to UDSF.,SMF,offloads,InternalMemoryToUDSF,
Offloading internal memory to UDSF enables externally state-managed operation,<object> Offloading internal memory to UDSF <relationship> enables <object> externally state-managed operation.,OffloadingInternalMemoryToUDSF,enables,ExternallyStateManagedOperation,
UDSF is optimized for UE-specific metadata,<object> UDSF <relationship> is <object> optimized for UE-specific metadata.,UDSF,is,OptimizedForUESpecificMetadata,
Proactive state push allows AMF to transmit UE context,<object> Proactive state push <relationship> allows <object> AMF to transmit UE context.,ProactiveStatePush,allows,AMFToTransmitUEContext,
AMF transmits UE context to dependent NFs,<object> AMF <relationship> transmits <object> UE context to dependent NFs.,AMF,transmits,UEContextToDependentNFs,
Transmitting UE context to dependent NFs before procedure involvement enables smoother control-plane flow,<object> Transmitting UE context to dependent NFs before procedure involvement <relationship> enables <object> smoother control-plane flow.,TransmittingUEContextToDependentNFsBeforeProcedureInvolvement,enables,SmootherControlPlaneFlow,
Stateless NF deployment reduces operational burden of state synchronization across instances,<object> Stateless NF deployment <relationship> reduces <object> operational burden of state synchronization across instances.,StatelessNFDeployment,reduces,OperationalBurdenOfStateSynchronizationAcrossInstances,
Operational burden of state synchronization occurs during autoscaling,<object> Operational burden of state synchronization <relationship> occurs during <object> autoscaling.,OperationalBurdenOfStateSynchronization,occursDuring,Autoscaling,
Operational burden of state synchronization occurs during rolling updates,<object> Operational burden of state synchronization <relationship> occurs during <object> rolling updates.,OperationalBurdenOfStateSynchronization,occursDuring,RollingUpdates,
Kubernetes-based control-plane orchestration benefits from stateless NF design,<object> Kubernetes-based control-plane orchestration <relationship> benefits from <object> stateless NF design.,KubernetesBasedControlPlaneOrchestration,benefitsFrom,StatelessNFDesign,
Stateless NF design enables auto-replacement of crashed pods,<object> Stateless NF design <relationship> enables <object> auto-replacement of crashed pods.,StatelessNFDesign,enables,AutoReplacementOfCrashedPods,
"Stateless control requires no changes to 3GPP signaling protocols (NAS, NGAP)","<object> Stateless control <relationship> requires <object> no changes to 3GPP signaling protocols (NAS, NGAP).",StatelessControl,requires,NoChangesTo3GPPSignalingProtocolsNASNGAP,
UDSF enables centralized state storage strategies,<object> UDSF <relationship> enables <object> centralized state storage strategies.,UDSF,enables,CentralizedStateStorageStrategies,
Stateless NF instances exhibit lower average CPU usage than stateful NF instances,<object> Stateless NF instances <relationship> exhibit lower average CPU usage than <object> stateful NF instances.,StatelessNFInstances,exhibitLowerAverageCPUUsageThan,StatefulNFInstances,
Lower average CPU usage is due to wait periods during external state retrieval,<object> Lower average CPU usage <relationship> is due to <object> wait periods during external state retrieval.,LowerAverageCPUUsage,isDueTo,WaitPeriodsDuringExternalStateRetrieval,
Queue buildup in AMF propagates to SMF,<object> Queue buildup in AMF <relationship> propagates to <object> SMF.,QueueBuildupInAMF,propagatesTo,SMF,
Queue buildup in AMF propagates to UPF,<object> Queue buildup in AMF <relationship> propagates to <object> UPF.,QueueBuildupInAMF,propagatesTo,UPF,
SMF experiences CPU spikes once state responses are processed,<object> SMF <relationship> experiences <object> CPU spikes once state responses are processed.,SMF,experiences,CPUSpikesOnceStateResponsesAreProcessed,
Transactional stateless NFs increase latency,<object> Transactional stateless NFs <relationship> increase <object> latency.,TransactionalStatelessNFs,increase,Latency,
Transactional stateless NFs increase cost,<object> Transactional stateless NFs <relationship> increase <object> cost.,TransactionalStatelessNFs,increase,Cost,
Transactional stateless NFs perform synchronous state fetches,<object> Transactional stateless NFs <relationship> perform <object> synchronous state fetches.,TransactionalStatelessNFs,perform,SynchronousStateFetches,
Transactional stateless NFs perform JSON deserialization,<object> Transactional stateless NFs <relationship> perform <object> JSON deserialization.,TransactionalStatelessNFs,perform,JSONDeserialization,
Non-blocking stateless strategies improve latency,<object> Non-blocking stateless strategies <relationship> improve <object> latency.,NonBlockingStatelessStrategies,improve,Latency,
Non-blocking stateless strategies improve throughput,<object> Non-blocking stateless strategies <relationship> improve <object> throughput.,NonBlockingStatelessStrategies,improve,Throughput,
Non-blocking stateless strategies use asynchronous state access,<object> Non-blocking stateless strategies <relationship> use <object> asynchronous state access.,NonBlockingStatelessStrategies,use,AsynchronousStateAccess,
Stateless NF designs increase billing costs,<object> Stateless NF designs <relationship> increase <object> billing costs.,StatelessNFDesigns,increase,BillingCosts,
Stateless NF designs operate in cloud environments,<object> Stateless NF designs <relationship> operate in <object> cloud environments.,StatelessNFDesigns,operateIn,CloudEnvironments,
Stateless NF designs cause longer request times,<object> Stateless NF designs <relationship> cause <object> longer request times.,StatelessNFDesigns,cause,LongerRequestTimes,
Longer request times increase runtime charges,<object> Longer request times <relationship> increase <object> runtime charges.,LongerRequestTimes,increase,RuntimeCharges,
Increased runtime charges lead to higher billing costs,<object> Increased runtime charges <relationship> lead to <object> higher billing costs.,IncreasedRuntimeCharges,leadTo,HigherBillingCosts,
Stateless NFs allow container-based scaling,<object> Stateless NFs <relationship> allow <object> container-based scaling.,StatelessNFs,allow,ContainerBasedScaling,
Stateless NFs require optimized caching strategies,<object> Stateless NFs <relationship> require <object> optimized caching strategies.,StatelessNFs,require,OptimizedCachingStrategies,
Optimized caching strategies avoid latency penalties,<object> Optimized caching strategies <relationship> avoid <object> latency penalties.,OptimizedCachingStrategies,avoid,LatencyPenalties,
Optimized caching strategies avoid cost penalties,<object> Optimized caching strategies <relationship> avoid <object> cost penalties.,OptimizedCachingStrategies,avoid,CostPenalties,
Latency spikes occur in stateless control chains,<object> Latency spikes <relationship> occur in <object> stateless control chains.,LatencySpikes,occurIn,StatelessControlChains,
Latency spikes correlate with batched state-response arrivals,<object> Latency spikes <relationship> correlate with <object> batched state-response arrivals.,LatencySpikes,correlateWith,BatchedStateResponseArrivals,
Batched state-response arrivals lead to temporary CPU contention,<object> Batched state-response arrivals <relationship> lead to <object> temporary CPU contention.,BatchedStateResponseArrivals,leadTo,TemporaryCPUContention,
Temporary CPU contention occurs across NF tiers,<object> Temporary CPU contention <relationship> occurs across <object> NF tiers.,TemporaryCPUContention,occursAcross,NFTiers,
Quasi-local model uses fetch-and-cache strategy,<object> Quasi-local model <relationship> uses <object> fetch-and-cache strategy.,QuasiLocalModel,uses,FetchAndCacheStrategy,
Fetch-and-cache strategy stores UE state locally,<object> Fetch-and-cache strategy <relationship> stores <object> UE state locally.,FetchAndCacheStrategy,stores,UEStateLocally,
UE state is stored after initial procedures,<object> UE state <relationship> is stored after <object> initial procedures.,UEState,isStoredAfter,InitialProcedures,
State metrics include volume,<object> State metrics <relationship> include <object> volume.,StateMetrics,include,Volume,
State metrics include size,<object> State metrics <relationship> include <object> size.,StateMetrics,include,Size,
State metrics include frequency of operations,<object> State metrics <relationship> include <object> frequency of operations.,StateMetrics,include,FrequencyOfOperations,
State metrics help dimension datastore loads,<object> State metrics <relationship> help dimension <object> datastore loads.,StateMetrics,helpDimension,DatastoreLoads,
Quasi-local caching reduces network-wide datastore interactions,<object> Quasi-local caching <relationship> reduces <object> network-wide datastore interactions.,QuasiLocalCaching,reduces,NetworkWideDatastoreInteractions,
Network-wide datastore interactions occur during user-plane processing,<object> Network-wide datastore interactions <relationship> occur during <object> user-plane processing.,NetworkWideDatastoreInteractions,occurDuring,UserPlaneProcessing,
Quasi-local model maintains session-scoped cache,<object> Quasi-local model <relationship> maintains <object> session-scoped cache.,QuasiLocalModel,maintains,SessionScopedCache,
Session-scoped cache reduces repeated external lookups,<object> Session-scoped cache <relationship> reduces <object> repeated external lookups.,SessionScopedCache,reduces,RepeatedExternalLookups,
Repeated external lookups occur during registration procedures,<object> Repeated external lookups <relationship> occur during <object> registration procedures.,RepeatedExternalLookups,occurDuring,RegistrationProcedures,
Repeated external lookups occur during handover procedures,<object> Repeated external lookups <relationship> occur during <object> handover procedures.,RepeatedExternalLookups,occurDuring,HandoverProcedures,
Caching state at well-defined checkpoints ensures immediate access to necessary context,<object> Caching state at well-defined checkpoints <relationship> ensures <object> immediate access to necessary context.,CachingStateAtWellDefinedCheckpoints,ensures,ImmediateAccessToNecessaryContext,
Immediate access to necessary context is provided to NFs during bursty signaling events,<object> Immediate access to necessary context <relationship> is provided to <object> NFs during bursty signaling events.,ImmediateAccessToNecessaryContext,isProvidedTo,NFsDuringBurstySignalingEvents,
Fetch-and-cache model minimizes control-plane latency variance,<object> Fetch-and-cache model <relationship> minimizes <object> control-plane latency variance.,FetchAndCacheModel,minimizes,ControlPlaneLatencyVariance,
Fetch-and-cache model reduces dependency on synchronous state-store reads,<object> Fetch-and-cache model <relationship> reduces <object> dependency on synchronous state-store reads.,FetchAndCacheModel,reduces,DependencyOnSynchronousStateStoreReads,
Dependency on synchronous state-store reads occurs during critical flows,<object> Dependency on synchronous state-store reads <relationship> occurs during <object> critical flows.,DependencyOnSynchronousStateStoreReads,occursDuring,CriticalFlows,
Tailored cache lifetimes allow NFs to meet reliability requirements,<object> Tailored cache lifetimes <relationship> allow <object> NFs to meet reliability requirements.,TailoredCacheLifetimes,allow,NFsToMeetReliabilityRequirements,
Eviction policies allow NFs to meet reliability requirements,<object> Eviction policies <relationship> allow <object> NFs to meet reliability requirements.,EvictionPolicies,allow,NFsToMeetReliabilityRequirements,
Reliability requirements apply across diverse traffic types,<object> Reliability requirements <relationship> apply across <object> diverse traffic types.,ReliabilityRequirements,applyAcross,DiverseTrafficTypes,
Diverse traffic types include eMBB,<object> Diverse traffic types <relationship> include <object> eMBB.,DiverseTrafficTypes,include,EMBB,
Diverse traffic types include IoT,<object> Diverse traffic types <relationship> include <object> IoT.,DiverseTrafficTypes,include,IoT,
N1 interface is a control-plane interface,<object> N1 interface <relationship> is <object> control-plane interface.,N1Interface,is,ControlPlaneInterface,
gNB transparently forwards N1 NAS messages,<object> gNB <relationship> transparently forwards <object> N1 NAS messages.,GNB,transparentlyForwards,N1NASMessages,
gNB does not process N1 NAS messages,<object> gNB <relationship> does not process <object> N1 NAS messages.,GNB,doesNotProcess,N1NASMessages,
N1 interface uses RRC,<object> N1 interface <relationship> uses <object> RRC.,N1Interface,uses,RRC,
N1 interface includes IPsec tunnel (NWu),<object> N1 interface <relationship> includes <object> IPsec tunnel (NWu).,N1Interface,includes,IPsecTunnelNWu,
N1 interface uses IPsec tunnel (NWu) in non-3GPP access,<object> N1 interface <relationship> uses <object> IPsec tunnel (NWu) in non-3GPP access.,N1Interface,uses,IPsecTunnelNWuInNon3GPPAccess,
IPsec tunnel (NWu) links UE and AMF securely,<object> IPsec tunnel (NWu) <relationship> links <object> UE and AMF securely.,IPsecTunnelNWu,links,UEAndAMFSecurely,
IPsec tunnel (NWu) is used in non-3GPP access,<object> IPsec tunnel (NWu) <relationship> is used in <object> non-3GPP access.,IPsecTunnelNWu,isUsedIn,Non3GPPAccess,
N1 mode denotes Standalone (SA) deployment,<object> N1 mode <relationship> denotes <object> Standalone (SA) deployment.,N1Mode,denotes,StandaloneSADeployment,
Standalone (SA) deployment connects UE to 5G Core,<object> Standalone (SA) deployment <relationship> connects <object> UE to 5G Core.,StandaloneSADeployment,connects,UETo5GCore,
S1 mode uses Non-Standalone (NSA) deployment,<object> S1 mode <relationship> uses <object> Non-Standalone (NSA) deployment.,S1Mode,uses,NonStandaloneNSADeployment,
N1 interface carries NAS signaling,<object> N1 interface <relationship> carries <object> NAS signaling.,N1Interface,carries,NASSignaling,
NAS signaling is carried transparently via gNB,<object> NAS signaling <relationship> is carried transparently via <object> gNB.,NASSignaling,isCarriedTransparentlyVia,GNB,
Control-plane interfaces use HTTP/2 REST,<object> Control-plane interfaces <relationship> use <object> HTTP/2 REST.,ControlPlaneInterfaces,use,HTTP2REST,
N2 is a Control-plane interface,<object> N2 <relationship> is <object> Control-plane interface.,N2,is,ControlPlaneInterface,
N4 interface connects SMF and UPF,<object> N4 interface <relationship> connects <object> SMF and UPF.,N4Interface,connects,SMFAndUPF,
N4 interface employs PFCP,<object> N4 interface <relationship> employs <object> PFCP.,N4Interface,employs,PFCP,
PFCP manages user-plane sessions,<object> PFCP <relationship> manages <object> user-plane sessions.,PFCP,manages,UserPlaneSessions,
PFCP manages forwarding behavior,<object> PFCP <relationship> manages <object> forwarding behavior.,PFCP,manages,ForwardingBehavior,
Inter-NF service calls enable SMB workload routing,<object> Inter-NF service calls <relationship> enable <object> SMB workload routing.,InterNFServiceCalls,enable,SMBWorkloadRouting,
Inter-NF service calls allow dynamic policy management,<object> Inter-NF service calls <relationship> allow <object> dynamic policy management.,InterNFServiceCalls,allow,DynamicPolicyManagement,
Inter-NF service calls allow dynamic data flow management,<object> Inter-NF service calls <relationship> allow <object> dynamic data flow management.,InterNFServiceCalls,allow,DynamicDataFlowManagement,
N7 interface is an Inter-NF service call,<object> N7 interface <relationship> is <object> Inter-NF service call.,N7Interface,is,InterNFServiceCall,
Roaming-related interfaces facilitate control-plane continuity across administrative domains,<object> Roaming-related interfaces <relationship> facilitate <object> control-plane continuity across administrative domains.,RoamingRelatedInterfaces,facilitate,ControlPlaneContinuityAcrossAdministrativeDomains,
N16 interface is a roaming-related interface,<object> N16 interface <relationship> is <object> roaming-related interface.,N16Interface,is,RoamingRelatedInterface,
NSSF selects network slices,<object> NSSF <relationship> selects <object> network slices.,NSSF,selects,NetworkSlices,
NSSF uses N22 interface,<object> NSSF <relationship> uses <object> N22 interface.,NSSF,uses,N22Interface,
N9 interface supports cascading of UPFs,<object> N9 interface <relationship> supports <object> cascading of UPFs.,N9Interface,supports,CascadingOfUPFs,
Security features across interfaces include TLS for HTTP/2 SBA,<object> Security features across interfaces <relationship> include <object> TLS for HTTP/2 SBA.,SecurityFeaturesAcrossInterfaces,include,TLSForHTTP2SBA,
Security features across interfaces include IPsec tunneling for non-3GPP access paths,<object> Security features across interfaces <relationship> include <object> IPsec tunneling for non-3GPP access paths.,SecurityFeaturesAcrossInterfaces,include,IPsecTunnelingForNon3GPPAccessPaths,
Security features across interfaces include IPsec tunneling for RAN access paths,<object> Security features across interfaces <relationship> include <object> IPsec tunneling for RAN access paths.,SecurityFeaturesAcrossInterfaces,include,IPsecTunnelingForRANAccessPaths,
N1 carries NAS signaling,<object> N1 <relationship> carries <object> NAS signaling.,N1,carries,NASSignaling,
NAS signaling flows between UE and AMF,<object> NAS signaling <relationship> flows between <object> UE and AMF.,NASSignaling,flowsBetween,UEAndAMF,
NAS signaling is transparent through gNB,<object> NAS signaling <relationship> is transparent through <object> gNB.,NASSignaling,isTransparentThrough,GNB,
N2 connects gNB to AMF,<object> N2 <relationship> connects <object> gNB to AMF.,N2,connects,GNBToAMF,
N2 uses NGAP over SCTP,<object> N2 <relationship> uses <object> NGAP over SCTP.,N2,uses,NGAPOverSCTP,
N3 transports user-plane traffic between gNB and UPF,<object> N3 <relationship> transports <object> user-plane traffic between gNB and UPF.,N3,transports,UserPlaneTrafficBetweenGNBAndUPF,
N3 uses GTP-U over UDP,<object> N3 <relationship> uses <object> GTP-U over UDP.,N3,uses,GTPUOverUDP,
N4 allows SMF to control UPF behavior,<object> N4 <relationship> allows <object> SMF to control UPF behavior.,N4,allows,SMFToControlUPFBehavior,
SMF uses PFCP to set up forwarding rules,<object> SMF <relationship> uses <object> PFCP to set up forwarding rules.,SMF,uses,PFCPToSetUpForwardingRules,
N5 interface enables application functions (AF),<object> N5 interface <relationship> enables <object> application functions (AF).,N5Interface,enables,ApplicationFunctionsAF,
N6 links UPF to external data networks (DN) over IP,<object> N6 <relationship> links <object> UPF to external data networks (DN) over IP.,N6,links,UPFToExternalDataNetworksDNOverIP,
N7 interface is used by SMF,<object> N7 interface <relationship> is used by <object> SMF.,N7Interface,isUsedBy,SMF,
N8 interface provides AMF access to subscriber data,<object> N8 interface <relationship> provides <object> AMF access to subscriber data.,N8Interface,provides,AMFAccessToSubscriberData,
N8 interface provides AMF access to authentication data,<object> N8 interface <relationship> provides <object> AMF access to authentication data.,N8Interface,provides,AMFAccessToAuthenticationData,
AMF access to subscriber and authentication data occurs by querying UDM,<object> AMF access to subscriber and authentication data <relationship> occurs by querying <object> UDM.,AMFAccessToSubscriberAndAuthenticationData,occursByQuerying,UDM,
Querying UDM uses HTTP/2,<object> Querying UDM <relationship> uses <object> HTTP/2.,QueryingUDM,uses,HTTP2,
N9 interface enables inter-UPF communication,<object> N9 interface <relationship> enables <object> inter-UPF communication.,N9Interface,enables,InterUPFCommunication,
N9 interface uses GTP-U,<object> N9 interface <relationship> uses <object> GTP-U.,N9Interface,uses,GTPU,
N10 interface allows SMF to obtain subscriber policy data,<object> N10 interface <relationship> allows <object> SMF to obtain subscriber policy data.,N10Interface,allows,SMFToObtainSubscriberPolicyData,
SMF obtains subscriber policy data from UDM,<object> SMF <relationship> obtains <object> subscriber policy data from UDM.,SMF,obtains,SubscriberPolicyDataFromUDM,
Subscriber policy data includes PDU session authorization,<object> Subscriber policy data <relationship> includes <object> PDU session authorization.,SubscriberPolicyData,includes,PDUSessionAuthorization,
N11 interface connects AMF and SMF,<object> N11 interface <relationship> connects <object> AMF and SMF.,N11Interface,connects,AMFAndSMF,
N11 interface enables control-plane interactions,<object> N11 interface <relationship> enables <object> control-plane interactions.,N11Interface,enables,ControlPlaneInteractions,
N12 interface allows AMF to forward authentication requests to AUSF,<object> N12 interface <relationship> allows <object> AMF to forward authentication requests to AUSF.,N12Interface,allows,AMFToForwardAuthenticationRequestsToAUSF,
N13 interface connects AUSF and UDM,<object> N13 interface <relationship> connects <object> AUSF and UDM.,N13Interface,connects,AUSFAndUDM,
AUSF obtains authentication vectors from UDM,<object> AUSF <relationship> obtains <object> authentication vectors from UDM.,AUSF,obtains,AuthenticationVectorsFromUDM,
Authentication vectors include AV,<object> Authentication vectors <relationship> include <object> AV.,AuthenticationVectors,include,AV,
Authentication vectors include EAP,<object> Authentication vectors <relationship> include <object> EAP.,AuthenticationVectors,include,EAP,
Authentication vectors are used for 5G-AKA procedures,<object> Authentication vectors <relationship> are used for <object> 5G-AKA procedures.,AuthenticationVectors,areUsedFor,5GAKAProcedures,
N14 supports AMF-to-AMF communication,<object> N14 <relationship> supports <object> AMF-to-AMF communication.,N14,supports,AMFToAMFCommunication,
N15 interface is used by PCF,<object> N15 interface <relationship> is used by <object> PCF.,N15Interface,isUsedBy,PCF,
N16 links two SMFs,<object> N16 <relationship> links <object> two SMFs.,N16,links,TwoSMFs,
Linking two SMFs occurs in roaming scenarios,<object> Linking two SMFs <relationship> occurs in <object> roaming scenarios.,LinkingTwoSMFs,occursIn,RoamingScenarios,
N16 coordinates session continuity across PLMN boundaries,<object> N16 <relationship> coordinates <object> session continuity across PLMN boundaries.,N16,coordinates,SessionContinuityAcrossPLMNBoundaries,
N16 coordinates policy across PLMN boundaries,<object> N16 <relationship> coordinates <object> policy across PLMN boundaries.,N16,coordinates,PolicyAcrossPLMNBoundaries,
N1 interface carries NAS signaling between UE and AMF,<object> N1 interface <relationship> carries <object> NAS signaling between UE and AMF.,N1Interface,carries,NASSignalingBetweenUEAndAMF,
N1 interface is used for registration procedures,<object> N1 interface <relationship> is used for <object> registration procedures.,N1Interface,isUsedFor,RegistrationProcedures,
N1 signaling is bidirectional,<object> N1 signaling <relationship> is <object> bidirectional.,N1Signaling,is,Bidirectional,
N2 connects gNB and AMF,<object> N2 <relationship> connects <object> gNB and AMF.,N2,connects,GNBAndAMF,
N2 uses NGAP over SCTP,<object> N2 <relationship> uses <object> NGAP over SCTP.,N2,uses,NGAPOverSCTP,
NGAP over SCTP handles UE context,<object> NGAP over SCTP <relationship> handles <object> UE context.,NGAPOverSCTP,handles,UEContext,
NGAP over SCTP handles handover signaling,<object> NGAP over SCTP <relationship> handles <object> handover signaling.,NGAPOverSCTP,handles,HandoverSignaling,
N2 transmits messages such as Initial UE Message,<object> N2 <relationship> transmits <object> messages such as Initial UE Message.,N2,transmits,MessagesSuchAsInitialUEMessage,
N2 transmits messages such as UE Context Release,<object> N2 <relationship> transmits <object> messages such as UE Context Release.,N2,transmits,MessagesSuchAsUEContextRelease,
Initial UE Message is transmitted between RAN,<object> Initial UE Message <relationship> is transmitted between <object> RAN.,InitialUEMessage,isTransmittedBetween,RAN,
Initial UE Message is Core,<object> Initial UE Message <relationship> is <object> Core.,InitialUEMessage,is,Core,
N3 uses GTP-U over UDP,<object> N3 <relationship> uses <object> GTP-U over UDP.,N3,uses,GTPUOverUDP,
N3 is unidirectional for uplink data flow,<object> N3 <relationship> is <object> unidirectional for uplink data flow.,N3,is,UnidirectionalForUplinkDataFlow,
N4 is a control interface between SMF,<object> N4 <relationship> is <object> control interface between SMF.,N4,is,ControlInterfaceBetweenSMF,
N4 is a UPF,<object> N4 <relationship> is <object> UPF.,N4,is,UPF,
N4 manages forwarding rules,<object> N4 <relationship> manages <object> forwarding rules.,N4,manages,ForwardingRules,
N4 uses PFCP message FAR,<object> N4 <relationship> uses <object> PFCP message FAR.,N4,uses,PFCPMessageFAR,
5G supports simultaneous NAS sessions over cellular and Wi-Fi,<object> 5G <relationship> supports <object> simultaneous NAS sessions over cellular and Wi-Fi.,FiveG,supports,SimultaneousNASSessionsOverCellularAndWiFi,
Simultaneous NAS sessions over cellular and Wi-Fi are established by multiple N1 control-plane connections,<object> Simultaneous NAS sessions over cellular and Wi-Fi <relationship> are established by <object> multiple N1 control-plane connections.,SimultaneousNASSessionsOverCellularAndWiFi,areEstablishedBy,MultipleN1ControlPlaneConnections,
IPsec tunnels use IKEv2,<object> IPsec tunnels <relationship> use <object> IKEv2.,IPsecTunnels,use,IKEv2,
IPsec tunnels use EAP-5G,<object> IPsec tunnels <relationship> use <object> EAP-5G.,IPsecTunnels,use,EAP5G,
IPsec tunnels secure NAS traffic to N3IWF gateways,<object> IPsec tunnels <relationship> secure <object> NAS traffic to N3IWF gateways.,IPsecTunnels,secure,NASTrafficToN3IWFGateways,
IPsec tunnels secure NAS traffic to TNGF gateways,<object> IPsec tunnels <relationship> secure <object> NAS traffic to TNGF gateways.,IPsecTunnels,secure,NASTrafficToTNGFGateways,
NWu is an IPsec tunnel,<object> NWu <relationship> is <object> IPsec tunnel.,NWu,is,IPsecTunnel,
N1 over trusted Wi-Fi uses IPsec with NULL encryption,<object> N1 over trusted Wi-Fi <relationship> uses <object> IPsec with NULL encryption.,N1OverTrustedWiFi,uses,IPsecWithNULLEncryption,
N2 control-plane messages occur over non-3GPP access,<object> N2 control-plane messages <relationship> occur over <object> non-3GPP access.,N2ControlPlaneMessages,occurOver,Non3GPPAccess,
TWIF enables NAS signaling for legacy Wi-Fi devices lacking EAP-5G support,<object> TWIF <relationship> enables <object> NAS signaling for legacy Wi-Fi devices lacking EAP-5G support.,TWIF,enables,NASSignalingForLegacyWiFiDevicesLackingEAP5GSupport,
N3 user-plane traffic between Wi-Fi gateways and UPF uses GTP-U over UDP,<object> N3 user-plane traffic between Wi-Fi gateways and UPF <relationship> uses <object> GTP-U over UDP.,N3UserPlaneTrafficBetweenWiFiGatewaysAndUPF,uses,GTPUOverUDP,
Service-Based Architecture (SBA) exists only between 5GC control-plane NFs,<object> Service-Based Architecture (SBA) <relationship> exists only between <object> 5GC control-plane NFs.,ServiceBasedArchitectureSBA,existsOnlyBetween,FiveGCControlPlaneNFs,
N1 interface is executed outside SBA domain,<object> N1 interface <relationship> is executed outside <object> SBA domain.,N1Interface,isExecutedOutside,SBADomain,
AMF represents a separate functional domain in the control-plane,<object> AMF <relationship> represents <object> separate functional domain in the control-plane.,AMF,represents,SeparateFunctionalDomainInTheControlPlane,
SMF represents a separate functional domain in the control-plane,<object> SMF <relationship> represents <object> separate functional domain in the control-plane.,SMF,represents,SeparateFunctionalDomainInTheControlPlane,
Separate functional domains in the control-plane enable independent scaling,<object> Separate functional domains in the control-plane <relationship> enable <object> independent scaling.,SeparateFunctionalDomainsInTheControlPlane,enable,IndependentScaling,
Separate functional domains in the control-plane enable specialization,<object> Separate functional domains in the control-plane <relationship> enable <object> specialization.,SeparateFunctionalDomainsInTheControlPlane,enable,Specialization,
CUPS design separates control gateways and user gateways,<object> CUPS design <relationship> separates <object> control gateways and user gateways.,CUPSDesign,separates,ControlGatewaysAndUserGateways,
CUPS design enables flexible placement in the 5G core,<object> CUPS design <relationship> enables <object> flexible placement in the 5G core.,CUPSDesign,enables,FlexiblePlacementInThe5GCore,
SBA-capable NFs are cloud-native microservices,<object> SBA-capable NFs <relationship> are <object> cloud-native microservices.,SBACapableNFs,are,CloudNativeMicroservices,
Control-plane APIs include Nsmf,<object> Control-plane APIs <relationship> include <object> Nsmf.,ControlPlaneAPIs,include,Nsmf,
Control-plane APIs include Namf,<object> Control-plane APIs <relationship> include <object> Namf.,ControlPlaneAPIs,include,Namf,
Control-plane APIs are secured via TLS,<object> Control-plane APIs <relationship> are secured via <object> TLS.,ControlPlaneAPIs,areSecuredVia,TLS,
SBA’s RESTful interfaces cannot directly carry UE control messages,<object> SBA’s RESTful interfaces <relationship> cannot directly carry <object> UE control messages.,SBAsRESTfulInterfaces,cannotDirectlyCarry,UEControlMessages,
SBA’s RESTful interfaces cannot directly carry user-data-bound control messages,<object> SBA’s RESTful interfaces <relationship> cannot directly carry <object> user-data-bound control messages.,SBAsRESTfulInterfaces,cannotDirectlyCarry,UserDataBoundControlMessages,
UE control messages include RRC,<object> UE control messages <relationship> include <object> RRC.,UEControlMessages,include,RRC,
User-data-bound control messages include NAS,<object> User-data-bound control messages <relationship> include <object> NAS.,UserDataBoundControlMessages,include,NAS,
UPF scales separately from SMF,<object> UPF <relationship> scales separately from <object> SMF.,UPF,scalesSeparatelyFrom,SMF,
UPF deploys separately from SMF,<object> UPF <relationship> deploys separately from <object> SMF.,UPF,deploysSeparatelyFrom,SMF,
UPF scales separately from PCF,<object> UPF <relationship> scales separately from <object> PCF.,UPF,scalesSeparatelyFrom,PCF,
UPF deploys separately from PCF,<object> UPF <relationship> deploys separately from <object> PCF.,UPF,deploysSeparatelyFrom,PCF,
Open5GS NF is configured via its own YAML file in /etc/open5gs/,<object> Open5GS NF <relationship> is configured via <object> its own YAML file in /etc/open5gs/.,Open5GSNF,isConfiguredVia,OwnYAMLFileInEtcOpen5gs,
Changing bind addresses in NF YAML requires consistent updates across RAN configurations,<object> Changing bind addresses in NF YAML <relationship> requires <object> consistent updates across RAN configurations.,ChangingBindAddressesInNFYAML,requires,ConsistentUpdatesAcrossRANConfigurations,
AMF listens on NGAP SCTP port 38412,<object> AMF <relationship> listens on <object> NGAP SCTP port 38412.,AMF,listensOn,NGAPSCTPPort38412,
UPF listens for GTP-U on PFCP-assigned port,<object> UPF <relationship> listens for <object> GTP-U on PFCP-assigned port.,UPF,listensFor,GTPUOnPFCFAssignedPort,
Port listening events are reflected in NF logs,<object> Port listening events <relationship> are reflected in <object> NF logs.,PortListeningEvents,areReflectedIn,NFLogs,
ngap_server() log entry confirms NF’s protocol stack initialization,<object> ngap_server() log entry <relationship> confirms <object> NF’s protocol stack initialization.,NgapServerLogEntry,confirms,NFsProtocolStackInitialization,
ngap_server() log entry confirms port bindings,<object> ngap_server() log entry <relationship> confirms <object> port bindings.,NgapServerLogEntry,confirms,PortBindings,
gtp_server() log entry confirms NF’s protocol stack initialization,<object> gtp_server() log entry <relationship> confirms <object> NF’s protocol stack initialization.,GtpServerLogEntry,confirms,NFsProtocolStackInitialization,
gtp_server() log entry confirms port bindings,<object> gtp_server() log entry <relationship> confirms <object> port bindings.,GtpServerLogEntry,confirms,PortBindings,
SCTP INIT/ABORT messages occur in logs,<object> SCTP INIT/ABORT messages <relationship> occur in <object> logs.,SCTPInitAbortMessages,occurIn,Logs,
SCTP INIT/ABORT messages reveal SCTP handshake status,<object> SCTP INIT/ABORT messages <relationship> reveal <object> SCTP handshake status.,SCTPInitAbortMessages,reveal,SCTPHandshakeStatus,
SCTP handshake status is between gNB,<object> SCTP handshake status <relationship> is between <object> gNB.,SCTPHandshakeStatus,isBetween,GNB,
SCTP handshake status is AMF,<object> SCTP handshake status <relationship> is <object> AMF.,SCTPHandshakeStatus,is,AMF,
Core setup creates ogstun TUN interface,<object> Core setup <relationship> creates <object> ogstun TUN interface.,CoreSetup,creates,OgstunTUNInterface,
ogstun TUN interface provides IPv4 subnets,<object> ogstun TUN interface <relationship> provides <object> IPv4 subnets.,OgstunTUNInterface,provides,IPv4Subnets,
ogstun TUN interface provides IPv6 subnets,<object> ogstun TUN interface <relationship> provides <object> IPv6 subnets.,OgstunTUNInterface,provides,IPv6Subnets,
ogstun TUN interface supports UPF operations,<object> ogstun TUN interface <relationship> supports <object> UPF operations.,OgstunTUNInterface,supports,UPFOperations,
IP forwarding must be enabled to allow UE-originated packets,<object> IP forwarding <relationship> must be enabled to allow <object> UE-originated packets.,IPForwarding,mustBeEnabledToAllow,UEOriginatedPackets,
IP forwarding is set using net.ipv4.ip_forward,<object> IP forwarding <relationship> is set using <object> net.ipv4.ip_forward.,IPForwarding,isSetUsing,NetIpv4IpForward,
Firewall rules enforce subnet isolation,<object> Firewall rules <relationship> enforce <object> subnet isolation.,FirewallRules,enforce,SubnetIsolation,
Subnet isolation applies to 10.45.0.0/16,<object> Subnet isolation <relationship> applies to <object> 10.45.0.0/16.,SubnetIsolation,appliesTo,104500016,
Subnet isolation blocks unauthorized access to NF services,<object> Subnet isolation <relationship> blocks <object> unauthorized access to NF services.,SubnetIsolation,blocks,UnauthorizedAccessToNFServices,
Open5GS NFs run as systemd services,<object> Open5GS NFs <relationship> run as <object> systemd services.,Open5GSNFs,runAs,SystemdServices,
Systemd services can be stopped or disabled individually,<object> Systemd services <relationship> can be stopped or disabled <object> individually.,SystemdServices,canBeStoppedOrDisabled,Individually,
open5gs-amfd is an example of a systemd service for an Open5GS NF,<object> open5gs-amfd <relationship> is <object> example of a systemd service for an Open5GS NF.,Open5gsAmfd,is,ExampleOfASystemdServiceForAnOpen5GSNF,
Running only subsets of NFs is supported by stopping irrelevant services,<object> Running only subsets of NFs <relationship> is supported by <object> stopping irrelevant services.,RunningOnlySubsetsOfNFs,isSupportedBy,StoppingIrrelevantServices,
NF bind addresses must align with core network settings,<object> NF bind addresses <relationship> must align with <object> core network settings.,NFBindAddresses,mustAlignWith,CoreNetworkSettings,
NF bind addresses must align with RAN network settings,<object> NF bind addresses <relationship> must align with <object> RAN network settings.,NFBindAddresses,mustAlignWith,RANNetworkSettings,
Kubernetes service IPs must align with core network settings,<object> Kubernetes service IPs <relationship> must align with <object> core network settings.,KubernetesServiceIPs,mustAlignWith,CoreNetworkSettings,
Kubernetes service IPs must align with RAN network settings,<object> Kubernetes service IPs <relationship> must align with <object> RAN network settings.,KubernetesServiceIPs,mustAlignWith,RANNetworkSettings,
Port mappings must align with core network settings,<object> Port mappings <relationship> must align with <object> core network settings.,PortMappings,mustAlignWith,CoreNetworkSettings,
Port mappings must align with RAN network settings,<object> Port mappings <relationship> must align with <object> RAN network settings.,PortMappings,mustAlignWith,RANNetworkSettings,
Open5GS uses Docker manifests,<object> Open5GS <relationship> uses <object> Docker manifests.,Open5GS,uses,DockerManifests,
Open5GS uses MongoDB,<object> Open5GS <relationship> uses <object> MongoDB.,Open5GS,uses,MongoDB,
Open5GS PCF includes dbi configuration,<object> Open5GS PCF <relationship> includes <object> dbi configuration.,Open5GSPCF,includes,DbiConfiguration,
dbi configuration points to MongoDB URI,<object> dbi configuration <relationship> points to <object> MongoDB URI.,DbiConfiguration,pointsTo,MongoDBURI,
dbi configuration supports service discovery,<object> dbi configuration <relationship> supports <object> service discovery.,DbiConfiguration,supports,ServiceDiscovery,
AMF can expose Prometheus metrics via an HTTP server,<object> AMF <relationship> can expose <object> Prometheus metrics via an HTTP server.,AMF,canExpose,PrometheusMetricsViaAnHTTPServer,
PCF can expose Prometheus metrics via an HTTP server,<object> PCF <relationship> can expose <object> Prometheus metrics via an HTTP server.,PCF,canExpose,PrometheusMetricsViaAnHTTPServer,
SMF can expose Prometheus metrics via an HTTP server,<object> SMF <relationship> can expose <object> Prometheus metrics via an HTTP server.,SMF,canExpose,PrometheusMetricsViaAnHTTPServer,
UPF can expose Prometheus metrics via an HTTP server,<object> UPF <relationship> can expose <object> Prometheus metrics via an HTTP server.,UPF,canExpose,PrometheusMetricsViaAnHTTPServer,
Prometheus metrics are exposed via an HTTP server,<object> Prometheus metrics <relationship> are exposed via <object> an HTTP server.,PrometheusMetrics,areExposedVia,AnHTTPServer,
Metrics endpoints are individually defined per NF instance,<object> Metrics endpoints <relationship> are individually defined per <object> NF instance.,MetricsEndpoints,areIndividuallyDefinedPer,NFInstance,
Prometheus scrapes /metrics endpoints every 10 seconds,<object> Prometheus <relationship> scrapes <object> /metrics endpoints every 10 seconds.,Prometheus,scrapes,MetricsEndpointsEvery10Seconds,
Prometheus uses job definitions in prometheus.yml,<object> Prometheus <relationship> uses <object> job definitions in prometheus.yml.,Prometheus,uses,JobDefinitionsInPrometheusYml,
Grafana connects to Prometheus as a data source,<object> Grafana <relationship> connects to <object> Prometheus as a data source.,Grafana,connectsTo,PrometheusAsADataSource,
Multiple SMF and UPF instances can be monitored in parallel,<object> Multiple SMF and UPF instances <relationship> can be monitored in <object> parallel.,MultipleSMFAndUPFInstances,canBeMonitoredIn,Parallel,
Parallel monitoring supports slice-specific deployments,<object> Parallel monitoring <relationship> supports <object> slice-specific deployments.,ParallelMonitoring,supports,SliceSpecificDeployments,
Open5GS’s build process includes libogsmetrics,<object> Open5GS’s build process <relationship> includes <object> libogsmetrics.,Open5GSBuildProcess,includes,Libogsmetrics,
Example metrics include counters for NAS registration requests (rm_reginitreq),<object> Example metrics <relationship> include <object> counters for NAS registration requests (rm_reginitreq).,ExampleMetrics,include,CountersForNASRegistrationRequestsRmReginitreq,
Example metrics include memory/resource usage (process_resident_memory_bytes),<object> Example metrics <relationship> include <object> memory/resource usage (process_resident_memory_bytes).,ExampleMetrics,include,MemoryResourceUsageProcessResidentMemoryBytes,
Distinct job_name entries in Prometheus enable selective scraping,<object> Distinct job_name entries in Prometheus <relationship> enable <object> selective scraping.,DistinctJobNameEntriesInPrometheus,enable,SelectiveScraping,
Distinct job_name entries in Prometheus enable dashboarding per NF type,<object> Distinct job_name entries in Prometheus <relationship> enable <object> dashboarding per NF type.,DistinctJobNameEntriesInPrometheus,enable,DashboardingPerNFType,
Sample config binds metrics HTTP servers to host IPs,<object> Sample config <relationship> binds <object> metrics HTTP servers to host IPs.,SampleConfig,binds,MetricsHTTPServersToHostIPs,
Binding metrics HTTP servers to host IPs facilitates external observability,<object> Binding metrics HTTP servers to host IPs <relationship> facilitates <object> external observability.,BindingMetricsHTTPServersToHostIPs,facilitates,ExternalObservability,
External observability applies to containerized NFs,<object> External observability <relationship> applies to <object> containerized NFs.,ExternalObservability,appliesTo,ContainerizedNFs,
Metrics integration demonstrates Open5GS operating as 'Prometheus-enabled' microservices,<object> Metrics integration <relationship> demonstrates <object> Open5GS operating as 'Prometheus-enabled' microservices.,MetricsIntegration,demonstrates,Open5GSOperatingAsPrometheusEnabledMicroservices,
Open5GS operates as 'Prometheus-enabled' microservices,<object> Open5GS <relationship> operates as <object> 'Prometheus-enabled' microservices.,Open5GS,operatesAs,PrometheusEnabledMicroservices,
Prometheus-enabled' microservices run in Kubernetes environments,<object> 'Prometheus-enabled' microservices <relationship> run in <object> Kubernetes environments.,PrometheusEnabledMicroservices,runIn,KubernetesEnvironments,
Prometheus-enabled' microservices run in Docker environments,<object> 'Prometheus-enabled' microservices <relationship> run in <object> Docker environments.,PrometheusEnabledMicroservices,runIn,DockerEnvironments,
Open5GS is installed via Ubuntu PPA,<object> Open5GS <relationship> is installed via <object> Ubuntu PPA.,Open5GS,isInstalledVia,UbuntuPPA,
Hardware with Intel i5 is preferred for MongoDB compatibility,<object> Hardware with Intel i5 <relationship> is preferred for <object> MongoDB compatibility.,HardwareWithIntelI5,isPreferredFor,MongoDBCompatibility,
Default Open5GS configs use loopback IPs,<object> Default Open5GS configs <relationship> use <object> loopback IPs.,DefaultOpen5GSConfigs,use,LoopbackIPs,
Integration with external RAN simulators requires replacing loopback addresses in NF YAML,<object> Integration with external RAN simulators <relationship> requires <object> replacing loopback addresses in NF YAML.,IntegrationWithExternalRANSimulators,requires,ReplacingLoopbackAddressesInNFYAML,
Replacing loopback addresses in NF YAML uses host LAN IPs,<object> Replacing loopback addresses in NF YAML <relationship> uses <object> host LAN IPs.,ReplacingLoopbackAddressesInNFYAML,uses,HostLANIPs,
PLMN ID must match Open5GS core configuration,<object> PLMN ID <relationship> must match <object> Open5GS core configuration.,PLMNID,mustMatch,Open5GSCoreConfiguration,
PLMN ID must match UERANSIM/gNB RAN configuration,<object> PLMN ID <relationship> must match <object> UERANSIM/gNB RAN configuration.,PLMNID,mustMatch,UERANSIMgNBRANConfiguration,
TAC must match Open5GS core configuration,<object> TAC <relationship> must match <object> Open5GS core configuration.,TAC,mustMatch,Open5GSCoreConfiguration,
TAC must match UERANSIM/gNB RAN configuration,<object> TAC <relationship> must match <object> UERANSIM/gNB RAN configuration.,TAC,mustMatch,UERANSIMgNBRANConfiguration,
Matching PLMN ID and TAC across configurations ensures successful connectivity,<object> Matching PLMN ID and TAC across configurations <relationship> ensures <object> successful connectivity.,MatchingPLMNIDAndTACAcrossConfigurations,ensures,SuccessfulConnectivity,
UERANSIM open5gs-gnb.yaml must specify linkIp,<object> UERANSIM open5gs-gnb.yaml <relationship> must specify <object> linkIp.,UERANSIMOpen5gsGnbYaml,mustSpecify,LinkIp,
UERANSIM open5gs-gnb.yaml must specify ngapIp,<object> UERANSIM open5gs-gnb.yaml <relationship> must specify <object> ngapIp.,UERANSIMOpen5gsGnbYaml,mustSpecify,NgapIp,
UERANSIM open5gs-gnb.yaml must specify gtpIp,<object> UERANSIM open5gs-gnb.yaml <relationship> must specify <object> gtpIp.,UERANSIMOpen5gsGnbYaml,mustSpecify,GtpIp,
UERANSIM open5gs-gnb.yaml must specify core AMF address,<object> UERANSIM open5gs-gnb.yaml <relationship> must specify <object> core AMF address.,UERANSIMOpen5gsGnbYaml,mustSpecify,CoreAMFAddress,
"Specifying linkIp, ngapIp, gtpIp, and core AMF address enables N2 connectivity","<object> Specifying linkIp, ngapIp, gtpIp, and core AMF address <relationship> enables <object> N2 connectivity.",SpecifyingLinkIpNgapIpGtpIpAndCoreAMFAddress,enables,N2Connectivity,
UE uses gnbSearchList,<object> UE <relationship> uses <object> gnbSearchList.,UE,uses,GnbSearchList,
gnbSearchList is defined in UERANSIM config,<object> gnbSearchList <relationship> is defined in <object> UERANSIM config.,GnbSearchList,isDefinedIn,UERANSIMConfig,
"UE forms TUN interface (e.g., uesimtun0)","<object> UE <relationship> forms <object> TUN interface (e.g., uesimtun0).",UE,forms,TUNInterfaceEgUesimtun0,
TUN interface (uesimtun0) receives IP routes,<object> TUN interface (uesimtun0) <relationship> receives <object> IP routes.,TUNInterfaceUesimtun0,receives,IPRoutes,
IP routes are delivered via UPF,<object> IP routes <relationship> are delivered via <object> UPF.,IPRoutes,areDeliveredVia,UPF,
UE external Internet access can be validated using curl,<object> UE external Internet access <relationship> can be validated using <object> curl.,UEExternalInternetAccess,canBeValidatedUsing,Curl,
UE external Internet access can be validated using ping,<object> UE external Internet access <relationship> can be validated using <object> ping.,UEExternalInternetAccess,canBeValidatedUsing,Ping,
curl operates over TUN interface,<object> curl <relationship> operates over <object> TUN interface.,Curl,operatesOver,TUNInterface,
Test environments employ TCP proxies,<object> Test environments <relationship> employ <object> TCP proxies.,TestEnvironments,employ,TCPProxies,
TCP proxies operate on public IPs,<object> TCP proxies <relationship> operate on <object> public IPs.,TCPProxies,operateOn,PublicIPs,
TCP proxies on public IPs support multi-machine end-to-end network validation,<object> TCP proxies on public IPs <relationship> support <object> multi-machine end-to-end network validation.,TCPProxiesOnPublicIPs,support,MultiMachineEndToEndNetworkValidation,
Open5GS core services integrate with RAN simulators,<object> Open5GS core services <relationship> integrate with <object> RAN simulators.,Open5GScoreServices,integrateWith,RANSimulators,
Integration occurs through manual IP alignment,<object> Integration <relationship> occurs through <object> manual IP alignment.,Integration,occursThrough,ManualIPAlignment,
Manual IP alignment is done in core YAML configurations,<object> Manual IP alignment <relationship> is done in <object> core YAML configurations.,ManualIPAlignment,isDoneIn,CoreYAMLConfigurations,
Open5GS AMF binds NGAP/SCTP to loopback by default,<object> Open5GS AMF <relationship> binds <object> NGAP/SCTP to loopback by default.,Open5GSAMF,binds,NGAPSCTPToLoopbackByDefault,
Open5GS AMF must set ngap.addr in amf.yaml to LAN IP,<object> Open5GS AMF <relationship> must set <object> ngap.addr in amf.yaml to LAN IP.,Open5GSAMF,mustSet,NgapAddrInAmfYamlToLANIP,
Setting ngap.addr in amf.yaml to LAN IP enables RAN connectivity,<object> Setting ngap.addr in amf.yaml to LAN IP <relationship> enables <object> RAN connectivity.,SettingNgapAddrInAmfYamlToLANIP,enables,RANConnectivity,
N2 interface uses NGAP over SCTP,<object> N2 interface <relationship> uses <object> NGAP over SCTP.,N2Interface,uses,NGAPOverSCTP,
Multi-host setups involve Core on separate servers,<object> Multi-host setups <relationship> involve <object> Core on separate servers.,MultiHostSetups,involve,CoreOnSeparateServers,
Multi-host setups involve RAN on separate servers,<object> Multi-host setups <relationship> involve <object> RAN on separate servers.,MultiHostSetups,involve,RANOnSeparateServers,
Explicit IP binding is required for N2 to function across hosts,<object> Explicit IP binding <relationship> is required for <object> N2 to function across hosts.,ExplicitIPBinding,isRequiredFor,N2ToFunctionAcrossHosts,
sudo systemctl restart open5gs-amfd applies ngap.addr binding change,<object> sudo systemctl restart open5gs-amfd <relationship> applies <object> ngap.addr binding change.,SudoSystemctlRestartOpen5gsAmfd,applies,NgapAddrBindingChange,
ngap.addr binding change affects AMF service,<object> ngap.addr binding change <relationship> affects <object> AMF service.,NgapAddrBindingChange,affects,AMFService,
UE RAN simulation with UERANSIM requires libsctp-dev,<object> UE RAN simulation with UERANSIM <relationship> requires <object> libsctp-dev.,UERANSimulationWithUERANSIM,requires,LibsctpDev,
UE RAN simulation with UERANSIM requires CMake,<object> UE RAN simulation with UERANSIM <relationship> requires <object> CMake.,UERANSimulationWithUERANSIM,requires,CMake,
libsctp-dev provides SCTP libraries,<object> libsctp-dev <relationship> provides <object> SCTP libraries.,LibsctpDev,provides,SCTPLibraries,
CMake is used for building the gNB module,<object> CMake <relationship> is used for <object> building the gNB module.,CMake,isUsedFor,BuildingTheGNBModule,
Proper AMF binding allows remote UERANSIM-created gNB to successfully attach,<object> Proper AMF binding <relationship> allows <object> remote UERANSIM-created gNB to successfully attach.,ProperAMFBinding,allows,RemoteUERANSIMCreatedGNBToSuccessfullyAttach,
N2 SCTP handshake logs confirm successful gNB-AMF connectivity,<object> N2 SCTP handshake logs <relationship> confirm <object> successful gNB-AMF connectivity.,N2SCTPHandshakeLogs,confirm,SuccessfulGNBAMFConnectivity,
Successful gNB-AMF connectivity validates multi-host network setup,<object> Successful gNB-AMF connectivity <relationship> validates <object> multi-host network setup.,SuccessfulGNBAMFConnectivity,validates,MultiHostNetworkSetup,
Open5GS metrics system exports performance counters,<object> Open5GS metrics system <relationship> exports <object> performance counters.,Open5GSMetricsSystem,exports,PerformanceCounters,
Open5GS metrics system exports gauges,<object> Open5GS metrics system <relationship> exports <object> gauges.,Open5GSMetricsSystem,exports,Gauges,
Performance counters monitor active PDP contexts,<object> Performance counters <relationship> monitor <object> active PDP contexts.,PerformanceCounters,monitor,ActivePDPContexts,
Gauges monitor NF activity,<object> Gauges <relationship> monitor <object> NF activity.,Gauges,monitor,NFActivity,
Metrics in Open5GS is implemented via libprom,<object> Metrics in Open5GS <relationship> is implemented via <object> libprom.,MetricsInOpen5GS,isImplementedVia,Libprom,
Metrics subsystem uses generic API in lib/metrics/,<object> Metrics subsystem <relationship> uses <object> generic API in lib/metrics/.,MetricsSubsystem,uses,GenericAPIInLibMetrics,
Each NF hosts its own /metrics endpoint,<object> Each NF <relationship> hosts <object> its own /metrics endpoint.,EachNF,hosts,ItsOwnMetricsEndpoint,
SMF hosts its own /metrics endpoint,<object> SMF <relationship> hosts <object> its own /metrics endpoint.,SMF,hosts,ItsOwnMetricsEndpoint,
AMF hosts its own /metrics endpoint,<object> AMF <relationship> hosts <object> its own /metrics endpoint.,AMF,hosts,ItsOwnMetricsEndpoint,
UPF hosts its own /metrics endpoint,<object> UPF <relationship> hosts <object> its own /metrics endpoint.,UPF,hosts,ItsOwnMetricsEndpoint,
Hosting its own /metrics endpoint allows individual scraping by Prometheus,<object> Hosting its own /metrics endpoint <relationship> allows <object> individual scraping by Prometheus.,HostingItsOwnMetricsEndpoint,allows,IndividualScrapingByPrometheus,
Metrics definitions include counters,<object> Metrics definitions <relationship> include <object> counters.,MetricsDefinitions,include,Counters,
Metrics definitions include gauges,<object> Metrics definitions <relationship> include <object> gauges.,MetricsDefinitions,include,Gauges,
Metrics definitions include histograms,<object> Metrics definitions <relationship> include <object> histograms.,MetricsDefinitions,include,Histograms,
"Counters, gauges, and histograms capture NF performance and load","<object> Counters, gauges, and histograms <relationship> capture <object> NF performance and load.",CountersGaugesAndHistograms,capture,NFPerformanceAndLoad,
HTTP metrics server is embedded in NF process,<object> HTTP metrics server <relationship> is embedded in <object> NF process.,HTTPMetricsServer,isEmbeddedIn,NFProcess,
Prometheus scraping is enabled by building Open5GS with the Prometheus backend,<object> Prometheus scraping <relationship> is enabled by <object> building Open5GS with the Prometheus backend.,PrometheusScraping,isEnabledBy,BuildingOpen5GSWithThePrometheusBackend,
Metrics API is a stub without the Prometheus backend,<object> Metrics API <relationship> is <object> stub without the Prometheus backend.,MetricsAPI,is,StubWithoutThePrometheusBackend,
Example metrics include active session counts,<object> Example metrics <relationship> include <object> active session counts.,ExampleMetrics,include,ActiveSessionCounts,
Example metrics include internal NF resource telemetry,<object> Example metrics <relationship> include <object> internal NF resource telemetry.,ExampleMetrics,include,InternalNFResourceTelemetry,
Conditional build approach allows operators to disable metrics support,<object> Conditional build approach <relationship> allows <object> operators to disable metrics support.,ConditionalBuildApproach,allows,OperatorsToDisableMetricsSupport,
The architecture supports containerized deployments,<object> The architecture <relationship> supports <object> containerized deployments.,TheArchitecture,supports,ContainerizedDeployments,
CSPs transition from PNFs to CNFs,<object> CSPs <relationship> transition from <object> PNFs to CNFs.,CSPs,transitionFrom,PNFSToCNFs,
Transition to CNFs uses Kubernetes,<object> Transition to CNFs <relationship> uses <object> Kubernetes.,TransitionToCNFs,uses,Kubernetes,
Disaggregated network functions run at the edge,<object> Disaggregated network functions <relationship> run at <object> the edge.,DisaggregatedNetworkFunctions,runAt,TheEdge,
Disaggregated network functions run under 5 ms RTT,<object> Disaggregated network functions <relationship> run under <object> 5 ms RTT.,DisaggregatedNetworkFunctions,runUnder,FiveMsRTT,
RU is a disaggregated network function,<object> RU <relationship> is <object> disaggregated network function.,RU,is,DisaggregatedNetworkFunction,
AMF is deployed in centralized cloud regions,<object> AMF <relationship> is deployed in <object> centralized cloud regions.,AMF,isDeployedIn,CentralizedCloudRegions,
SMF is deployed in centralized cloud regions,<object> SMF <relationship> is deployed in <object> centralized cloud regions.,SMF,isDeployedIn,CentralizedCloudRegions,
Control-plane NFs deployed in centralized cloud regions are not latency-critical,<object> Control-plane NFs deployed in centralized cloud regions <relationship> are not <object> latency-critical.,ControlPlaneNFsDeployedInCentralizedCloudRegions,areNot,LatencyCritical,
Anthos/GDC provides unified orchestration,<object> Anthos/GDC <relationship> provides <object> unified orchestration.,AnthosGDC,provides,UnifiedOrchestration,
Anthos/GDC provides policy,<object> Anthos/GDC <relationship> provides <object> policy.,AnthosGDC,provides,Policy,
CNFs adhere to microservice design,<object> CNFs <relationship> adhere to <object> microservice design.,CNFs,adhereTo,MicroserviceDesign,
CNFs adhere to CI/CD lifecycle models,<object> CNFs <relationship> adhere to <object> CI/CD lifecycle models.,CNFs,adhereTo,CICDLifecycleModels,
Microservice design and CI/CD lifecycle models enable fast feature deployment,<object> Microservice design and CI/CD lifecycle models <relationship> enable <object> fast feature deployment.,MicroserviceDesignAndCICDLifecycleModels,enable,FastFeatureDeployment,
Microservice design and CI/CD lifecycle models enable upgrades,<object> Microservice design and CI/CD lifecycle models <relationship> enable <object> upgrades.,MicroserviceDesignAndCICDLifecycleModels,enable,Upgrades,
Edge deployment enables CSPs to host 5G-CNFs on shared infrastructure,<object> Edge deployment <relationship> enables <object> CSPs to host 5G-CNFs on shared infrastructure.,EdgeDeployment,enables,CSPsToHost5GCNFsOnSharedInfrastructure,
Hybrid clouds allow dynamic workload placement,<object> Hybrid clouds <relationship> allow <object> dynamic workload placement.,HybridClouds,allow,DynamicWorkloadPlacement,
Dynamic workload placement assigns edge to real-time tasks,<object> Dynamic workload placement <relationship> assigns <object> edge to real-time tasks.,DynamicWorkloadPlacement,assigns,EdgeToRealTimeTasks,
Dynamic workload placement assigns cloud to batch tasks,<object> Dynamic workload placement <relationship> assigns <object> cloud to batch tasks.,DynamicWorkloadPlacement,assigns,CloudToBatchTasks,
Dynamic workload placement assigns cloud to training tasks,<object> Dynamic workload placement <relationship> assigns <object> cloud to training tasks.,DynamicWorkloadPlacement,assigns,CloudToTrainingTasks,
Telco workloads use Infrastructure-as-Code pipelines,<object> Telco workloads <relationship> use <object> Infrastructure-as-Code pipelines.,TelcoWorkloads,use,InfrastructureAsCodePipelines,
Infrastructure-as-Code pipelines enable security across distributed sites,<object> Infrastructure-as-Code pipelines <relationship> enable <object> security across distributed sites.,InfrastructureAsCodePipelines,enable,SecurityAcrossDistributedSites,
Infrastructure-as-Code pipelines enable scaling across distributed sites,<object> Infrastructure-as-Code pipelines <relationship> enable <object> scaling across distributed sites.,InfrastructureAsCodePipelines,enable,ScalingAcrossDistributedSites,
Infrastructure-as-Code pipelines enable orchestration across distributed sites,<object> Infrastructure-as-Code pipelines <relationship> enable <object> orchestration across distributed sites.,InfrastructureAsCodePipelines,enable,OrchestrationAcrossDistributedSites,
Latency-aware deployment ensures UPF/CU-UP services are co-located near users,<object> Latency-aware deployment <relationship> ensures <object> UPF/CU-UP services are co-located near users.,LatencyAwareDeployment,ensures,UPFCUUPServicesAreCoLocatedNearUsers,
Container-based CNF approach enables feature-rich experiences,<object> Container-based CNF approach <relationship> enables <object> feature-rich experiences.,ContainerBasedCNFApproach,enables,FeatureRichExperiences,
Telco workloads are migrating from VNFs in VMs,<object> Telco workloads <relationship> are migrating from <object> VNFs in VMs.,TelcoWorkloads,areMigratingFrom,VNFsInVMs,
Kubernetes Operators use Custom Resource Definitions (CRDs),<object> Kubernetes Operators <relationship> use <object> Custom Resource Definitions (CRDs).,KubernetesOperators,use,CustomResourceDefinitionsCRDs,
Kubernetes Operators support complex lifecycle tasks for CNFs,<object> Kubernetes Operators <relationship> support <object> complex lifecycle tasks for CNFs.,KubernetesOperators,support,ComplexLifecycleTasksForCNFs,
Complex lifecycle tasks include upgrades,<object> Complex lifecycle tasks <relationship> include <object> upgrades.,ComplexLifecycleTasks,include,Upgrades,
Complex lifecycle tasks include scaling,<object> Complex lifecycle tasks <relationship> include <object> scaling.,ComplexLifecycleTasks,include,Scaling,
Custom Resource Definitions (CRDs) enable upgrades of CNFs,<object> Custom Resource Definitions (CRDs) <relationship> enable <object> upgrades of CNFs.,CustomResourceDefinitionsCRDs,enable,UpgradesOfCNFs,
Custom Resource Definitions (CRDs) enable scaling of CNFs,<object> Custom Resource Definitions (CRDs) <relationship> enable <object> scaling of CNFs.,CustomResourceDefinitionsCRDs,enable,ScalingOfCNFs,
Microservice-based CNFs run each function in separate Pods,<object> Microservice-based CNFs <relationship> run each function in <object> separate Pods.,MicroserviceBasedCNFs,runEachFunctionIn,SeparatePods,
Separate Pods enable independent scaling,<object> Separate Pods <relationship> enable <object> independent scaling.,SeparatePods,enable,IndependentScaling,
Separate Pods enable failure isolation,<object> Separate Pods <relationship> enable <object> failure isolation.,SeparatePods,enable,FailureIsolation,
Monolithic CNFs simplify deployment,<object> Monolithic CNFs <relationship> simplify <object> deployment.,MonolithicCNFs,simplify,Deployment,
Monolithic CNFs lack scalability granularity,<object> Monolithic CNFs <relationship> lack <object> scalability granularity.,MonolithicCNFs,lack,ScalabilityGranularity,
Scalability granularity is offered by microservice designs,<object> Scalability granularity <relationship> is offered by <object> microservice designs.,ScalabilityGranularity,isOfferedBy,MicroserviceDesigns,
KNI combines Kubernetes,<object> KNI <relationship> combines <object> Kubernetes.,KNI,combines,Kubernetes,
KNI combines DPDK,<object> KNI <relationship> combines <object> DPDK.,KNI,combines,DPDK,
KNI combines SR-IOV,<object> KNI <relationship> combines <object> SR-IOV.,KNI,combines,SRIOV,
KNI combines GPU networking,<object> KNI <relationship> combines <object> GPU networking.,KNI,combines,GPUNetworking,
KNI supports telco-grade performance,<object> KNI <relationship> supports <object> telco-grade performance.,KNI,supports,TelcoGradePerformance,
Istio secures APIs between control-plane CNFs in SBA,<object> Istio <relationship> secures <object> APIs between control-plane CNFs in SBA.,Istio,secures,APIsBetweenControlPlaneCNFsInSBA,
Operators enable Site Reliability Engineering for CNFs,<object> Operators <relationship> enable <object> Site Reliability Engineering for CNFs.,Operators,enable,SiteReliabilityEngineeringForCNFs,
Site Reliability Engineering for CNFs involves automating observability,<object> Site Reliability Engineering for CNFs <relationship> involves <object> automating observability.,SiteReliabilityEngineeringForCNFs,involves,AutomatingObservability,
Site Reliability Engineering for CNFs involves self-healing,<object> Site Reliability Engineering for CNFs <relationship> involves <object> self-healing.,SiteReliabilityEngineeringForCNFs,involves,SelfHealing,
Site Reliability Engineering for CNFs involves dynamic scaling,<object> Site Reliability Engineering for CNFs <relationship> involves <object> dynamic scaling.,SiteReliabilityEngineeringForCNFs,involves,DynamicScaling,
KNI supports edge deployments,<object> KNI <relationship> supports <object> edge deployments.,KNI,supports,EdgeDeployments,
5G core CNFs are deployed in multi-tier hub-and-spoke architecture,<object> 5G core CNFs <relationship> are deployed in <object> multi-tier hub-and-spoke architecture.,FiveGCoreCNFs,areDeployedIn,MultiTierHubAndSpokeArchitecture,
UPF is co-located with RAN,<object> UPF <relationship> is <object> co-located with RAN.,UPF,is,CoLocatedWithRAN,
Istio-based service mesh provides mTLS,<object> Istio-based service mesh <relationship> provides <object> mTLS.,IstioBasedServiceMesh,provides,MTLS,
Logs are aggregated centrally from edge sites,<object> Logs <relationship> are aggregated centrally from <object> edge sites.,Logs,areAggregatedCentrallyFrom,EdgeSites,
Zero-touch provisioning enables on-demand scaling of 5G CNF clusters,<object> Zero-touch provisioning <relationship> enables <object> on-demand scaling of 5G CNF clusters.,ZeroTouchProvisioning,enables,OnDemandScalingOf5GCNFClusters,
ACM placement rules ensure CNFs are deployed to appropriate clusters,<object> ACM placement rules <relationship> ensure <object> CNFs are deployed to appropriate clusters.,ACMPlacementRules,ensure,CNFsAreDeployedToAppropriateClusters,
Network fabric layers include hub management,<object> Network fabric layers <relationship> include <object> hub management.,NetworkFabricLayers,include,HubManagement,
Network fabric layers include inter-cluster connectivity,<object> Network fabric layers <relationship> include <object> inter-cluster connectivity.,NetworkFabricLayers,include,InterClusterConnectivity,
Network fabric layers include RAN access paths,<object> Network fabric layers <relationship> include <object> RAN access paths.,NetworkFabricLayers,include,RANAccessPaths,
UPF selection is determined by SMF,<object> UPF selection <relationship> is determined by <object> SMF.,UPFSelection,isDeterminedBy,SMF,
Partial edge deployment supports only UPF instances,<object> Partial edge deployment <relationship> supports <object> only UPF instances.,PartialEdgeDeployment,supports,OnlyUPFInstances,
Service mesh federation allows secure cross-cluster communication,<object> Service mesh federation <relationship> allows <object> secure cross-cluster communication.,ServiceMeshFederation,allows,SecureCrossClusterCommunication,
Observability fabric leverages centralized policy enforcement,<object> Observability fabric <relationship> leverages <object> centralized policy enforcement.,ObservabilityFabric,leverages,CentralizedPolicyEnforcement,
Centralized policy enforcement applies across distributed edge clusters,<object> Centralized policy enforcement <relationship> applies across <object> distributed edge clusters.,CentralizedPolicyEnforcement,appliesAcross,DistributedEdgeClusters,
Initial 5G deployments use NSA,<object> Initial 5G deployments <relationship> use <object> NSA.,InitialFiveGDeployments,use,NSA,
NSA combines RAN on 5G and control on 4G EPC,<object> NSA <relationship> combines <object> RAN on 5G and control on 4G EPC.,NSA,combines,RANOnFiveGAndControlOn4GEPC,
Evolution to fully standalone (SA) core follows in later phases,<object> Evolution to fully standalone (SA) core <relationship> follows in <object> later phases.,EvolutionToFullyStandaloneSACore,followsIn,LaterPhases,
Stateless design externalizes NF state to UDSF-like stores,<object> Stateless design <relationship> externalizes <object> NF state to UDSF-like stores.,StatelessDesign,externalizes,NFStateToUDSFLikeStores,
Externalizing NF state to UDSF-like stores enables resilience,<object> Externalizing NF state to UDSF-like stores <relationship> enables <object> resilience.,ExternalizingNFStateToUDSFLikeStores,enables,Resilience,
"DevOps automation (CodePipeline, CloudFormation) allows NF operators to treat infrastructure as code","<object> DevOps automation (CodePipeline, CloudFormation) <relationship> allows <object> NF operators to treat infrastructure as code.",DevOpsAutomationCodePipelineCloudFormation,allows,NFOperatorsToTreatInfrastructureAsCode,
Treating infrastructure as code enables reproducible deployments at scale,<object> Treating infrastructure as code <relationship> enables <object> reproducible deployments at scale.,TreatingInfrastructureAsCode,enables,ReproducibleDeploymentsAtScale,
UPF deployment may be hardware-based,<object> UPF deployment <relationship> may be <object> hardware-based.,UPFDeployment,mayBe,HardwareBased,
UPF deployment may be virtualized,<object> UPF deployment <relationship> may be <object> virtualized.,UPFDeployment,mayBe,Virtualized,
Choice of deployment depends on SLA,<object> Choice of deployment <relationship> depends on <object> SLA.,ChoiceOfDeployment,dependsOn,SLA,
Choice of deployment depends on performance needs,<object> Choice of deployment <relationship> depends on <object> performance needs.,ChoiceOfDeployment,dependsOn,PerformanceNeeds,
Choice of deployment depends on vendor maturity,<object> Choice of deployment <relationship> depends on <object> vendor maturity.,ChoiceOfDeployment,dependsOn,VendorMaturity,
Hardware UPF suits high-performance needs,<object> Hardware UPF <relationship> suits <object> high-performance needs.,HardwareUPF,suits,HighPerformanceNeeds,
Virtualized UPF aids flexibility,<object> Virtualized UPF <relationship> aids <object> flexibility.,VirtualizedUPF,aids,Flexibility,
Virtualized UPF aids geo-distribution,<object> Virtualized UPF <relationship> aids <object> geo-distribution.,VirtualizedUPF,aids,GeoDistribution,
UPF steers traffic at edge,<object> UPF <relationship> steers <object> traffic at edge.,UPF,steers,TrafficAtEdge,
UPF uses standardized APIs,<object> UPF <relationship> uses <object> standardized APIs.,UPF,uses,StandardizedAPIs,
Edge IaaS platforms host VMs,<object> Edge IaaS platforms <relationship> host <object> VMs.,EdgeIaaSPlatforms,host,VMs,
Edge IaaS platforms host containers,<object> Edge IaaS platforms <relationship> host <object> containers.,EdgeIaaSPlatforms,host,Containers,
VMs are managed by OpenStack,<object> VMs <relationship> are managed by <object> OpenStack.,VMs,areManagedBy,OpenStack,
Edge PaaS layers provide networking services,<object> Edge PaaS layers <relationship> provide <object> networking services.,EdgePaaSLayers,provide,NetworkingServices,
Edge PaaS layers provide RNIS services,<object> Edge PaaS layers <relationship> provide <object> RNIS services.,EdgePaaSLayers,provide,RNISServices,
Edge PaaS layers provide location services,<object> Edge PaaS layers <relationship> provide <object> location services.,EdgePaaSLayers,provide,LocationServices,
Edge PaaS layers provide user identity services,<object> Edge PaaS layers <relationship> provide <object> user identity services.,EdgePaaSLayers,provide,UserIdentityServices,
Edge PaaS layers provide firewall services,<object> Edge PaaS layers <relationship> provide <object> firewall services.,EdgePaaSLayers,provide,FirewallServices,
Edge PaaS layers provide DNS services,<object> Edge PaaS layers <relationship> provide <object> DNS services.,EdgePaaSLayers,provide,DNSServices,
Edge PaaS layers provide load balancing services,<object> Edge PaaS layers <relationship> provide <object> load balancing services.,EdgePaaSLayers,provide,LoadBalancingServices,
Orchestrator deploys NFs and applications,<object> Orchestrator <relationship> deploys <object> NFs and applications.,Orchestrator,deploys,NFsAndApplications,
Deployment is based on service requirements,<object> Deployment <relationship> is based on <object> service requirements.,Deployment,isBasedOn,ServiceRequirements,
Deployment is based on policies,<object> Deployment <relationship> is based on <object> policies.,Deployment,isBasedOn,Policies,
Deployment is based on resource templates mapped to location,<object> Deployment <relationship> is based on <object> resource templates mapped to location.,Deployment,isBasedOn,ResourceTemplatesMappedToLocation,
Traffic steering APIs allow dynamic flow decisions per application context,<object> Traffic steering APIs <relationship> allow <object> dynamic flow decisions per application context.,TrafficSteeringAPIs,allow,DynamicFlowDecisionsPerApplicationContext,
Dynamic flow decisions are made per application context,<object> Dynamic flow decisions <relationship> are made per <object> application context.,DynamicFlowDecisions,areMadePer,ApplicationContext,
Application contexts include video,<object> Application contexts <relationship> include <object> video.,ApplicationContexts,include,Video,
Cisco UPF implements 1:1 Active/Standby redundancy,<object> Cisco UPF <relationship> implements <object> 1:1 Active/Standby redundancy.,CiscoUPF,implements,11ActiveStandbyRedundancy,
1:1 Active/Standby redundancy uses SRP,<object> 1:1 Active/Standby redundancy <relationship> uses <object> SRP.,11ActiveStandbyRedundancy,uses,SRP,
Standby UPF assumes the same Sx/N4 address during switchover,<object> Standby UPF <relationship> assumes <object> the same Sx/N4 address during switchover.,StandbyUPF,assumes,TheSameSxN4AddressDuringSwitchover,
Sx/N4 address reuse during switchover makes the transition transparent to SMF,<object> Sx/N4 address reuse during switchover <relationship> makes <object> the transition transparent to SMF.,SxN4AddressReuseDuringSwitchover,makes,TheTransitionTransparentToSMF,
Sx/N4 control-plane heartbeat monitoring with BFD triggers fast UPF switchover,<object> Sx/N4 control-plane heartbeat monitoring with BFD <relationship> triggers <object> fast UPF switchover.,SxN4ControlPlaneHeartbeatMonitoringWithBFD,triggers,FastUPFSwitchover,
Fast UPF switchover occurs in failure events,<object> Fast UPF switchover <relationship> occurs in <object> failure events.,FastUPFSwitchover,occursIn,FailureEvents,
Active UPF replicates IP-pool to Standby UPF,<object> Active UPF <relationship> replicates <object> IP-pool to Standby UPF.,ActiveUPF,replicates,IPPoolToStandbyUPF,
Active UPF replicates session context to Standby UPF,<object> Active UPF <relationship> replicates <object> session context to Standby UPF.,ActiveUPF,replicates,SessionContextToStandbyUPF,
Replication occurs during Sx/N4 association,<object> Replication <relationship> occurs during <object> Sx/N4 association.,Replication,occursDuring,SxN4Association,
Replication occurs during checkpoint cycles,<object> Replication <relationship> occurs during <object> checkpoint cycles.,Replication,occursDuring,CheckpointCycles,
Standby UPF starts in Pending-Active,<object> Standby UPF <relationship> starts in <object> Pending-Active.,StandbyUPF,startsIn,PendingActive,
Standby UPF transitions out of Pending-Active after SRP elections,<object> Standby UPF <relationship> transitions out of <object> Pending-Active after SRP elections.,StandbyUPF,transitionsOutOf,PendingActiveAfterSRPElections,
Standby UPF transitions out of Pending-Active after manual timeout configurations,<object> Standby UPF <relationship> transitions out of <object> Pending-Active after manual timeout configurations.,StandbyUPF,transitionsOutOf,PendingActiveAfterManualTimeoutConfigurations,
SRP elections and manual timeout configurations finalize switchover,<object> SRP elections and manual timeout configurations <relationship> finalize <object> switchover.,SRPElectionsAndManualTimeoutConfigurations,finalize,Switchover,
VPP health is integrated into SRP,<object> VPP health <relationship> is integrated into <object> SRP.,VPPHealth,isIntegratedInto,SRP,
SMF is unaware of standby UPF,<object> SMF <relationship> is unaware of <object> standby UPF.,SMF,isUnawareOf,StandbyUPF,
SRP Active/Standby redundancy is supported without dual-active scenarios,<object> SRP Active/Standby redundancy <relationship> is supported without <object> dual-active scenarios.,SRPActiveStandbyRedundancy,isSupportedWithout,DualActiveScenarios,
SMF heartbeat must be timed appropriately relative to UPF SRP timeout,<object> SMF heartbeat <relationship> must be timed appropriately relative to <object> UPF SRP timeout.,SMFHeartbeat,mustBeTimedAppropriatelyRelativeTo,UPFSRPTimeout,
Proper timing between SMF heartbeat and UPF SRP timeout is crucial to avoid false session drop detection,<object> Proper timing between SMF heartbeat and UPF SRP timeout <relationship> is crucial to avoid <object> false session drop detection.,ProperTimingBetweenSMFHeartbeatAndUPFSRPTimeout,isCrucialToAvoid,FalseSessionDropDetection,
NF Set groups interchangeable NF instances of the same type,<object> NF Set <relationship> groups <object> interchangeable NF instances of the same type.,NFSet,groups,InterchangeableNFInstancesOfTheSameType,
Interchangeable NF instances of the same type include AMF,<object> Interchangeable NF instances of the same type <relationship> include <object> AMF.,InterchangeableNFInstancesOfTheSameType,include,AMF,
Interchangeable NF instances of the same type include SMF,<object> Interchangeable NF instances of the same type <relationship> include <object> SMF.,InterchangeableNFInstancesOfTheSameType,include,SMF,
Grouping by NF Set enables shared context,<object> Grouping by NF Set <relationship> enables <object> shared context.,GroupingByNFSet,enables,SharedContext,
NF Sets support geo-redundancy,<object> NF Sets <relationship> support <object> geo-redundancy.,NFSets,support,GeoRedundancy,
Geo-redundancy is achieved via distributed instances,<object> Geo-redundancy <relationship> is achieved via <object> distributed instances.,GeoRedundancy,isAchievedVia,DistributedInstances,
Stateless NFs in an NF Set externalize state to UDSF,<object> Stateless NFs in an NF Set <relationship> externalize <object> state to UDSF.,StatelessNFsInAnNFSet,externalize,StateToUDSF,
Externalizing state to UDSF enables context retrieval by any instance,<object> Externalizing state to UDSF <relationship> enables <object> context retrieval by any instance.,ExternalizingStateToUDSF,enables,ContextRetrievalByAnyInstance,
NF instances in an NF Set can have different software versions,<object> NF instances in an NF Set <relationship> can have <object> different software versions.,NFInstancesInAnNFSet,canHave,DifferentSoftwareVersions,
Different software versions enable seamless rolling upgrades,<object> Different software versions <relationship> enable <object> seamless rolling upgrades.,DifferentSoftwareVersions,enable,SeamlessRollingUpgrades,
NF Set uses N+M redundancy,<object> NF Set <relationship> uses <object> N+M redundancy.,NFSet,uses,NPlusMRedundancy,
Context-sharing in NF Sets prevents signaling storms,<object> Context-sharing in NF Sets <relationship> prevents <object> signaling storms.,ContextSharingInNFSets,prevents,SignalingStorms,
Context-sharing in NF Sets avoids re-registration during failover,<object> Context-sharing in NF Sets <relationship> avoids <object> re-registration during failover.,ContextSharingInNFSets,avoids,ReRegistrationDuringFailover,
Avoiding re-registration during failover prevents signaling storms,<object> Avoiding re-registration during failover <relationship> prevents <object> signaling storms.,AvoidingReRegistrationDuringFailover,prevents,SignalingStorms,
"NF Set presents single virtual interface (e.g., anycast IP)","<object> NF Set <relationship> presents <object> single virtual interface (e.g., anycast IP).",NFSet,presents,SingleVirtualInterfaceEgAnycastIP,
"Single virtual interface (e.g., anycast IP) is presented to clients","<object> Single virtual interface (e.g., anycast IP) <relationship> is presented to <object> clients.",SingleVirtualInterfaceEgAnycastIP,isPresentedTo,Clients,
Disjoint UPF deployment with dual PDU sessions increases end-to-end availability,<object> Disjoint UPF deployment with dual PDU sessions <relationship> increases <object> end-to-end availability.,DisjointUPFDeploymentWithDualPDUSessions,increases,EndToEndAvailability,
End-to-end availability is increased by enabling parallel user-plane paths,<object> End-to-end availability <relationship> is increased by enabling <object> parallel user-plane paths.,EndToEndAvailability,isIncreasedBy,EnablingParallelUserPlanePaths,
Dual-connectivity occurs through two separate gNBs,<object> Dual-connectivity <relationship> occurs through <object> two separate gNBs.,DualConnectivity,occursThrough,TwoSeparateGNBs,
Dual-connectivity allows simultaneous data flows,<object> Dual-connectivity <relationship> allows <object> simultaneous data flows.,DualConnectivity,allows,SimultaneousDataFlows,
User-plane redundancy is achieved via dual UPFs,<object> User-plane redundancy <relationship> is achieved via <object> dual UPFs.,UserPlaneRedundancy,isAchievedVia,DualUPFs,
Mean Time To Repair (MTTR) is a primary enabler of achieving telecom-grade availability targets,<object> Mean Time To Repair (MTTR) <relationship> is <object> primary enabler of achieving telecom-grade availability targets.,MeanTimeToRepairMTTR,is,PrimaryEnablerOfAchievingTelecomGradeAvailabilityTargets,
Redundancy strategy leverages dual PDU sessions,<object> Redundancy strategy <relationship> leverages <object> dual PDU sessions.,RedundancyStrategy,leverages,DualPDUSessions,
Dual PDU sessions are mapped across disjoint UPFs,<object> Dual PDU sessions <relationship> are mapped across <object> disjoint UPFs.,DualPDUSessions,areMappedAcross,DisjointUPFs,
Dual PDU sessions are RAN connections,<object> Dual PDU sessions <relationship> are <object> RAN connections.,DualPDUSessions,are,RANConnections,
URLLC applications demand sub-millisecond latency,<object> URLLC applications <relationship> demand <object> sub-millisecond latency.,URLLCApplications,demand,SubMillisecondLatency,
URLLC applications demand negligible packet loss,<object> URLLC applications <relationship> demand <object> negligible packet loss.,URLLCApplications,demand,NegligiblePacketLoss,
URLLC applications require stronger resilience,<object> URLLC applications <relationship> require <object> stronger resilience.,URLLCApplications,require,StrongerResilience,
Stronger resilience exceeds standard Fast ReRoute mechanisms,<object> Stronger resilience <relationship> exceeds <object> standard Fast ReRoute mechanisms.,StrongerResilience,exceeds,StandardFastReRouteMechanisms,
Replicated packets traverse two synchronized UPFs,<object> Replicated packets <relationship> traverse <object> two synchronized UPFs.,ReplicatedPackets,traverse,TwoSynchronizedUPFs,
Replicated packets reach Protection Tunnel Egress (PTE) node,<object> Replicated packets <relationship> reach <object> Protection Tunnel Egress (PTE) node.,ReplicatedPackets,reach,ProtectionTunnelEgressPTENode,
Protection Tunnel Egress (PTE) node eliminates replicated packet,<object> Protection Tunnel Egress (PTE) node <relationship> eliminates <object> replicated packet.,ProtectionTunnelEgressPTENode,eliminates,ReplicatedPacket,
Disjoint UP paths use replicated UPFs,<object> Disjoint UP paths <relationship> use <object> replicated UPFs.,DisjointUPPaths,use,ReplicatedUPFs,
Disjoint UP paths with replicated UPFs ensure session survival,<object> Disjoint UP paths with replicated UPFs <relationship> ensure <object> session survival.,DisjointUPPathsWithReplicatedUPFs,ensure,SessionSurvival,
Session survival occurs even if one UPF or path experiences a failure,<object> Session survival <relationship> occurs even if <object> one UPF or path experiences a failure.,SessionSurvival,occursEvenIf,OneUPFOrPathExperiencesAFailure,
Static resource allocation fails in 5G,<object> Static resource allocation <relationship> fails in <object> 5G.,StaticResourceAllocation,failsIn,5G,
Dynamic models include MCM,<object> Dynamic models <relationship> include <object> MCM.,DynamicModels,include,MCM,
Dynamic models are needed for real-time adaptability,<object> Dynamic models <relationship> are needed for <object> real-time adaptability.,DynamicModels,areNeededFor,RealTimeAdaptability,
MCM integrates bandwidth allocation,<object> MCM <relationship> integrates <object> bandwidth allocation.,MCM,integrates,BandwidthAllocation,
MCM integrates traffic prioritization,<object> MCM <relationship> integrates <object> traffic prioritization.,MCM,integrates,TrafficPrioritization,
MCM integrates encryption,<object> MCM <relationship> integrates <object> encryption.,MCM,integrates,Encryption,
MCM integrates network slicing,<object> MCM <relationship> integrates <object> network slicing.,MCM,integrates,NetworkSlicing,
"Integration of bandwidth allocation, traffic prioritization, encryption, and network slicing enforces QoS","<object> Integration of bandwidth allocation, traffic prioritization, encryption, and network slicing <relationship> enforces <object> QoS.",IntegrationOfBandwidthAllocationTrafficPrioritizationEncryptionAndNetworkSlicing,enforces,QoS,
Target QoS metrics include sub-ms latency for URLLC,<object> Target QoS metrics <relationship> include <object> sub-ms latency for URLLC.,TargetQoSMetrics,include,SubMsLatencyForURLLC,
Target QoS metrics include bounded jitter for URLLC,<object> Target QoS metrics <relationship> include <object> bounded jitter for URLLC.,TargetQoSMetrics,include,BoundedJitterForURLLC,
Target QoS metrics include hundreds of Mbps throughput for eMBB,<object> Target QoS metrics <relationship> include <object> hundreds of Mbps throughput for eMBB.,TargetQoSMetrics,include,HundredsOfMbpsThroughputForEMBB,
Sub-ms latency applies to URLLC,<object> Sub-ms latency <relationship> applies to <object> URLLC.,SubMsLatency,appliesTo,URLLC,
MDP/DRL-based RAN schedulers dynamically balance URLLC performance,<object> MDP/DRL-based RAN schedulers <relationship> dynamically balance <object> URLLC performance.,MDPDRLBasedRANSchedulers,dynamicallyBalance,URLLCPerformance,
MDP/DRL-based RAN schedulers dynamically balance eMBB performance,<object> MDP/DRL-based RAN schedulers <relationship> dynamically balance <object> eMBB performance.,MDPDRLBasedRANSchedulers,dynamicallyBalance,EMBBPerformance,
Dynamic balancing of URLLC and eMBB performance occurs on slot timescales,<object> Dynamic balancing of URLLC and eMBB performance <relationship> occurs on <object> slot timescales.,DynamicBalancingOfURLLCAndEMBBPerformance,occursOn,SlotTimescales,
Dynamic balancing of URLLC and eMBB performance occurs on mini-slot timescales,<object> Dynamic balancing of URLLC and eMBB performance <relationship> occurs on <object> mini-slot timescales.,DynamicBalancingOfURLLCAndEMBBPerformance,occursOn,MiniSlotTimescales,
EDQAS/LDI schedulers schedule resource blocks,<object> EDQAS/LDI schedulers <relationship> schedule <object> resource blocks.,EDQASLDISchedulers,schedule,ResourceBlocks,
EDQAS/LDI schedulers minimize URLLC latency,<object> EDQAS/LDI schedulers <relationship> minimize <object> URLLC latency.,EDQASLDISchedulers,minimize,URLLCLatency,
EDQAS/LDI schedulers minimize eMBB rate loss,<object> EDQAS/LDI schedulers <relationship> minimize <object> eMBB rate loss.,EDQASLDISchedulers,minimize,EMBBRateLoss,
Scheduling resource blocks occurs at MAC layer,<object> Scheduling resource blocks <relationship> occurs at <object> MAC layer.,SchedulingResourceBlocks,occursAt,MACLayer,
Network slices partition resources,<object> Network slices <relationship> partition <object> resources.,NetworkSlices,partition,Resources,
Network slices provide per-slice SLA-driven enforcement,<object> Network slices <relationship> provide <object> per-slice SLA-driven enforcement.,NetworkSlices,provide,PerSliceSLADrivenEnforcement,
Per-slice SLA-driven enforcement applies across RAN domains,<object> Per-slice SLA-driven enforcement <relationship> applies across <object> RAN domains.,PerSliceSLADrivenEnforcement,appliesAcross,RANDomains,
Per-slice SLA-driven enforcement applies across core domains,<object> Per-slice SLA-driven enforcement <relationship> applies across <object> core domains.,PerSliceSLADrivenEnforcement,appliesAcross,CoreDomains,
Encryption overhead is modeled in resource allocation decisions,<object> Encryption overhead <relationship> is modeled in <object> resource allocation decisions.,EncryptionOverhead,isModeledIn,ResourceAllocationDecisions,
QoS parameters include latency,<object> QoS parameters <relationship> include <object> latency.,QoSParameters,include,Latency,
QoS parameters include jitter,<object> QoS parameters <relationship> include <object> jitter.,QoSParameters,include,Jitter,
QoS parameters include packet loss,<object> QoS parameters <relationship> include <object> packet loss.,QoSParameters,include,PacketLoss,
QoS parameters include throughput,<object> QoS parameters <relationship> include <object> throughput.,QoSParameters,include,Throughput,
QoS parameters include spectral efficiency,<object> QoS parameters <relationship> include <object> spectral efficiency.,QoSParameters,include,SpectralEfficiency,
QoS parameters include energy efficiency,<object> QoS parameters <relationship> include <object> energy efficiency.,QoSParameters,include,EnergyEfficiency,
URLLC performance improvements involve puncturing eMBB traffic in real-time,<object> URLLC performance improvements <relationship> involve <object> puncturing eMBB traffic in real-time.,URLLCPerformanceImprovements,involve,PuncturingEMBBTrafficInRealTime,
Puncturing eMBB traffic in real-time trades off throughput,<object> Puncturing eMBB traffic in real-time <relationship> trades off <object> throughput.,PuncturingEMBBTrafficInRealTime,tradesOff,Throughput,
QoS-aware slicing leverages vertical slice models,<object> QoS-aware slicing <relationship> leverages <object> vertical slice models.,QoSAwareSlicing,leverages,VerticalSliceModels,
Vertical slice models allocate bandwidth between service types,<object> Vertical slice models <relationship> allocate bandwidth between <object> service types.,VerticalSliceModels,allocateBandwidthBetween,ServiceTypes,
Dynamic resource allocation models consider fairness,<object> Dynamic resource allocation models <relationship> consider <object> fairness.,DynamicResourceAllocationModels,consider,Fairness,
Dynamic resource allocation models consider availability,<object> Dynamic resource allocation models <relationship> consider <object> availability.,DynamicResourceAllocationModels,consider,Availability,
Dynamic resource allocation models consider service resilience,<object> Dynamic resource allocation models <relationship> consider <object> service resilience.,DynamicResourceAllocationModels,consider,ServiceResilience,
"Consideration of fairness, availability, and service resilience occurs during congestion","<object> Consideration of fairness, availability, and service resilience <relationship> occurs during <object> congestion.",ConsiderationOfFairnessAvailabilityAndServiceResilience,occursDuring,Congestion,
URLLC requires ≤ 1 ms one-way latency,<object> URLLC <relationship> requires <object> ≤ 1 ms one-way latency.,URLLC,requires,Le1MsOneWayLatency,
URLLC requires ≥ 99.999 % reliability,<object> URLLC <relationship> requires <object> ≥ 99.999 % reliability.,URLLC,requires,Ge99999PercentReliability,
Stringent QoS targets are posed by URLLC,<object> Stringent QoS targets <relationship> are posed by <object> URLLC.,StringentQoSTargets,arePosedBy,URLLC,
Packet processing latency remains unpredictable due to virtual environment effects,<object> Packet processing latency <relationship> remains unpredictable due to <object> virtual environment effects.,PacketProcessingLatency,remainsUnpredictableDueTo,VirtualEnvironmentEffects,
Minimal packet inspection does not prevent unpredictable packet processing latency,<object> Minimal packet inspection <relationship> does not prevent <object> unpredictable packet processing latency.,MinimalPacketInspection,doesNotPrevent,UnpredictablePacketProcessingLatency,
Packet processing pipelines must be architected for low jitter,<object> Packet processing pipelines <relationship> must be architected for <object> low jitter.,PacketProcessingPipelines,mustBeArchitectedFor,LowJitter,
Packet processing pipelines must be architected for deterministic behavior,<object> Packet processing pipelines <relationship> must be architected for <object> deterministic behavior.,PacketProcessingPipelines,mustBeArchitectedFor,DeterministicBehavior,
Architecting packet processing pipelines for low jitter and deterministic behavior supports URLLC with inline security,<object> Architecting packet processing pipelines for low jitter and deterministic behavior <relationship> supports <object> URLLC with inline security.,ArchitectingPacketProcessingPipelinesForLowJitterAndDeterministicBehavior,supports,URLLCWithInlineSecurity,
5G URLLC targets mandate ≤ 1 ms user-plane latency,<object> 5G URLLC targets <relationship> mandate <object> ≤ 1 ms user-plane latency.,5GURLLCTargets,mandate,Le1MsUserPlaneLatency,
≤ 1 ms user-plane latency represents ≈ 4× reduction compared to LTE,<object> ≤ 1 ms user-plane latency <relationship> represents <object> ≈ 4× reduction compared to LTE.,Le1MsUserPlaneLatency,represents,Approx4xReductionComparedToLTE,
URLLC demands ultra-reliability (≥ 99.999 %),<object> URLLC <relationship> demands <object> ultra-reliability (≥ 99.999 %).,URLLC,demands,UltraReliabilityGe99999Percent,
URLLC demands block error rates down to 10⁻⁹,<object> URLLC <relationship> demands <object> block error rates down to 10⁻⁹.,URLLC,demands,BlockErrorRatesDownTo1eMinus9,
Ultra-reliability (≥ 99.999 %) corresponds to block error rates down to 10⁻⁹,<object> Ultra-reliability (≥ 99.999 %) <relationship> corresponds to <object> block error rates down to 10⁻⁹.,UltraReliabilityGe99999Percent,correspondsTo,BlockErrorRatesDownTo1eMinus9,
URLLC flows use resource reservation,<object> URLLC flows <relationship> use <object> resource reservation.,URLLCFlows,use,ResourceReservation,
URLLC flows use preemption,<object> URLLC flows <relationship> use <object> preemption.,URLLCFlows,use,Preemption,
URLLC flows use mini-slots,<object> URLLC flows <relationship> use <object> mini-slots.,URLLCFlows,use,MiniSlots,
Use of resource reservation with preemption and mini-slots enables meeting sub-ms deadlines,<object> Use of resource reservation with preemption and mini-slots <relationship> enables <object> meeting sub-ms deadlines.,UseOfResourceReservationWithPreemptionAndMiniSlots,enables,MeetingSubMsDeadlines,
Edge computing eliminates ∼100 ms transport delay,<object> Edge computing <relationship> eliminates <object> ∼100 ms transport delay.,EdgeComputing,eliminates,Approx100MsTransportDelay,
Eliminating ∼100 ms transport delay enables end-to-end latency ≤ 1 ms,<object> Eliminating ∼100 ms transport delay <relationship> enables <object> end-to-end latency ≤ 1 ms.,EliminatingApprox100MsTransportDelay,enables,EndToEndLatencyLe1Ms,
Flexible TTIs are used to reduce transmission latency,<object> Flexible TTIs <relationship> are used to reduce <object> transmission latency.,FlexibleTTIs,areUsedToReduce,TransmissionLatency,
Multiple UPFs with local breakout support disjoint user-plane paths,<object> Multiple UPFs with local breakout <relationship> support <object> disjoint user-plane paths.,MultipleUPFsWithLocalBreakout,support,DisjointUserPlanePaths,
Disjoint user-plane paths provide low-latency,<object> Disjoint user-plane paths <relationship> provide <object> low-latency.,DisjointUserPlanePaths,provide,LowLatency,
Disjoint user-plane paths provide resilience,<object> Disjoint user-plane paths <relationship> provide <object> resilience.,DisjointUserPlanePaths,provide,Resilience,
URLLC scheduling uses prioritized access,<object> URLLC scheduling <relationship> uses <object> prioritized access.,URLLCScheduling,uses,PrioritizedAccess,
Reliable URLLC transmission combines mini-slots,<object> Reliable URLLC transmission <relationship> combines <object> mini-slots.,ReliableURLLCTransmission,combines,MiniSlots,
Reliable URLLC transmission combines redundancy,<object> Reliable URLLC transmission <relationship> combines <object> redundancy.,ReliableURLLCTransmission,combines,Redundancy,
Reliable URLLC transmission combines HARQ optimization,<object> Reliable URLLC transmission <relationship> combines <object> HARQ optimization.,ReliableURLLCTransmission,combines,HARQOptimization,
Edge-deployed UPFs collaborate with MEC,<object> Edge-deployed UPFs <relationship> collaborate with <object> MEC.,EdgeDeployedUPFs,collaborateWith,MEC,
Collaboration with MEC enforces QoS,<object> Collaboration with MEC <relationship> enforces <object> QoS.,CollaborationWithMEC,enforces,QoS,
URLLC flows demand ≤ 1 ms latency,<object> URLLC flows <relationship> demand <object> ≤ 1 ms latency.,URLLCFlows,demand,Le1MsLatency,
URLLC flows demand low jitter,<object> URLLC flows <relationship> demand <object> low jitter.,URLLCFlows,demand,LowJitter,
URLLC flows demand ultra-high reliability,<object> URLLC flows <relationship> demand <object> ultra-high reliability.,URLLCFlows,demand,UltraHighReliability,
eMBB flows prioritize high throughput,<object> eMBB flows <relationship> prioritize <object> high throughput.,EMBBFlows,prioritize,HighThroughput,
eMBB flows prioritize moderate latency,<object> eMBB flows <relationship> prioritize <object> moderate latency.,EMBBFlows,prioritize,ModerateLatency,
mMTC flows support up to 1 M devices/km²,<object> mMTC flows <relationship> support <object> up to 1 M devices/km².,MMTCFlows,support,UpTo1MDevicesPerKm2,
mMTC flows support low rate requirements,<object> mMTC flows <relationship> support <object> low rate requirements.,MMTCFlows,support,LowRateRequirements,
QoS metrics include latency,<object> QoS metrics <relationship> include <object> latency.,QoSMetrics,include,Latency,
QoS metrics include jitter,<object> QoS metrics <relationship> include <object> jitter.,QoSMetrics,include,Jitter,
QoS metrics include packet loss,<object> QoS metrics <relationship> include <object> packet loss.,QoSMetrics,include,PacketLoss,
QoS metrics include throughput,<object> QoS metrics <relationship> include <object> throughput.,QoSMetrics,include,Throughput,
QoS metrics include reliability,<object> QoS metrics <relationship> include <object> reliability.,QoSMetrics,include,Reliability,
QoS metrics include fairness,<object> QoS metrics <relationship> include <object> fairness.,QoSMetrics,include,Fairness,
QoS metrics include energy efficiency,<object> QoS metrics <relationship> include <object> energy efficiency.,QoSMetrics,include,EnergyEfficiency,
QoS metrics apply across 5G slices,<object> QoS metrics <relationship> apply across <object> 5G slices.,QoSMetrics,applyAcross,5GSlices,
Traffic shaping uses DiffServ,<object> Traffic shaping <relationship> uses <object> DiffServ.,TrafficShaping,uses,DiffServ,
URLLC scheduling uses preemption/puncturing,<object> URLLC scheduling <relationship> uses <object> preemption/puncturing.,URLLCScheduling,uses,PreemptionPuncturing,
eMBB scheduling applies proportional fairness,<object> eMBB scheduling <relationship> applies <object> proportional fairness.,EMBBScheduling,applies,ProportionalFairness,
eMBB scheduling applies weighted round-robin,<object> eMBB scheduling <relationship> applies <object> weighted round-robin.,EMBBScheduling,applies,WeightedRoundRobin,
Proportional fairness balances throughput and fairness,<object> Proportional fairness <relationship> balances <object> throughput and fairness.,ProportionalFairness,balances,ThroughputAndFairness,
Weighted round-robin balances throughput and fairness,<object> Weighted round-robin <relationship> balances <object> throughput and fairness.,WeightedRoundRobin,balances,ThroughputAndFairness,
Transport-priority queuing ensures UL/DL URLLC packets are served ahead of eMBB traffic,<object> Transport-priority queuing <relationship> ensures <object> UL/DL URLLC packets are served ahead of eMBB traffic.,TransportPriorityQueuing,ensures,ULDLURLLCPacketsAreServedAheadOfEMBBTraffic,
Hard slicing uses dedicated resources per slice,<object> Hard slicing <relationship> uses <object> dedicated resources per slice.,HardSlicing,uses,DedicatedResourcesPerSlice,
Reliability and latency goals for URLLC are modeled via resource block reservation,<object> Reliability and latency goals for URLLC <relationship> are modeled via <object> resource block reservation.,ReliabilityAndLatencyGoalsForURLLC,areModeledVia,ResourceBlockReservation,
QoS enforcement spans RAN,<object> QoS enforcement <relationship> spans <object> RAN.,QoSEnforcement,spans,RAN,
QoS enforcement spans transport,<object> QoS enforcement <relationship> spans <object> transport.,QoSEnforcement,spans,Transport,
QoS enforcement spans core layers,<object> QoS enforcement <relationship> spans <object> core layers.,QoSEnforcement,spans,CoreLayers,
"Spanning RAN, transport, and core layers ensures consistent SLA adherence","<object> Spanning RAN, transport, and core layers <relationship> ensures <object> consistent SLA adherence.",SpanningRANTransportAndCoreLayers,ensures,ConsistentSLAAdherence,
QoS Flow is tagged with unique 4-bit QFI,<object> QoS Flow <relationship> is tagged with <object> unique 4-bit QFI.,QoSFlow,isTaggedWith,Unique4BitQFI,
QoS Flows are classified as GBR,<object> QoS Flows <relationship> are classified as <object> GBR.,QoSFlows,areClassifiedAs,GBR,
UPF applies Packet Detection Rules (PDRs),<object> UPF <relationship> applies <object> Packet Detection Rules (PDRs).,UPF,applies,PacketDetectionRulesPDRs,
UE applies QoS rules,<object> UE <relationship> applies <object> QoS rules.,UE,applies,QoSRules,
Applying PDRs and QoS rules maps packets to QoS flows at the NAS layer,<object> Applying PDRs and QoS rules <relationship> maps <object> packets to QoS flows at the NAS layer.,ApplyingPDRsAndQoSRules,maps,PacketsToQoSFlowsAtTheNASLayer,
Packet filters use IP addresses,<object> Packet filters <relationship> use <object> IP addresses.,PacketFilters,use,IPAddresses,
Packet filters use ports,<object> Packet filters <relationship> use <object> ports.,PacketFilters,use,Ports,
Packet filters use protocols,<object> Packet filters <relationship> use <object> protocols.,PacketFilters,use,Protocols,
Packet filters use Ethernet tags,<object> Packet filters <relationship> use <object> Ethernet tags.,PacketFilters,use,EthernetTags,
"Using IP addresses, ports, protocols, and Ethernet tags enables packet classification","<object> Using IP addresses, ports, protocols, and Ethernet tags <relationship> enables <object> packet classification.",UsingIPAddressesPortsProtocolsAndEthernetTags,enables,PacketClassification,
Kubernetes-based control plane orchestration benefits from stateless NF design,<object> Kubernetes-based control plane orchestration <relationship> benefits from <object> stateless NF design.,KubernetesBasedControlPlaneOrchestration,benefitsFrom,StatelessNFDesign,
Stateless NF design enables auto-replacement of crashed pods,<object> Stateless NF design <relationship> enables <object> auto-replacement of crashed pods.,StatelessNFDesign,enables,AutoReplacementOfCrashedPods,
Multiple QoS flows can share a DRB,<object> Multiple QoS flows <relationship> can share <object> a DRB.,MultipleQoSFlows,canShare,DRB,
Sharing a DRB requires aligned service requirements,<object> Sharing a DRB <relationship> requires <object> aligned service requirements.,SharingADRB,requires,AlignedServiceRequirements,
SMF configures QoS flows,<object> SMF <relationship> configures <object> QoS flows.,SMF,configures,QoSFlows,
SMF distributes QoS rules to UE via N1,<object> SMF <relationship> distributes QoS rules to UE via <object> N1.,SMF,distributesQoSRulesToUEVia,N1,
QoS control spans NAS classification,<object> QoS control <relationship> spans <object> NAS classification.,QoSControl,spans,NASClassification,
QoS control spans SDAP mapping,<object> QoS control <relationship> spans <object> SDAP mapping.,QoSControl,spans,SDAPMapping,
QoS control spans GTP-U marking,<object> QoS control <relationship> spans <object> GTP-U marking.,QoSControl,spans,GTPUMarking,
NAS classification enforces consistent end-to-end service quality,<object> NAS classification <relationship> enforces <object> consistent end-to-end service quality.,NASClassification,enforces,ConsistentEndToEndServiceQuality,
SDAP mapping enforces consistent end-to-end service quality,<object> SDAP mapping <relationship> enforces <object> consistent end-to-end service quality.,SDAPMapping,enforces,ConsistentEndToEndServiceQuality,
GTP-U marking enforces consistent end-to-end service quality,<object> GTP-U marking <relationship> enforces <object> consistent end-to-end service quality.,GTPUMarking,enforces,ConsistentEndToEndServiceQuality,
5G mandates support for 5G-AKA,<object> 5G <relationship> mandates support for <object> 5G-AKA.,5G,mandatesSupportFor,5GAKA,
5G mandates support for EAP-AKA′,<object> 5G <relationship> mandates support for <object> EAP-AKA′.,5G,mandatesSupportFor,EAPAKA,
5G-AKA provides unified authentication,<object> 5G-AKA <relationship> provides <object> unified authentication.,5GAKA,provides,UnifiedAuthentication,
5G-AKA provides access-agnostic authentication,<object> 5G-AKA <relationship> provides <object> access-agnostic authentication.,5GAKA,provides,AccessAgnosticAuthentication,
EAP-TLS can be used as secondary authentication method,<object> EAP-TLS <relationship> can be used as <object> secondary authentication method.,EAPTLS,canBeUsedAs,SecondaryAuthenticationMethod,
Secondary authentication method is used in private deployments,<object> Secondary authentication method <relationship> is used in <object> private deployments.,SecondaryAuthenticationMethod,isUsedIn,PrivateDeployments,
AUSF anchors security key KSEAF,<object> AUSF <relationship> anchors <object> security key KSEAF.,AUSF,anchors,SecurityKeyKSEAF,
Anchoring security key KSEAF occurs during initial authentication,<object> Anchoring security key KSEAF <relationship> occurs during <object> initial authentication.,AnchoringSecurityKeyKSEAF,occursDuring,InitialAuthentication,
AUSF supplies authentication vectors,<object> AUSF <relationship> supplies <object> authentication vectors.,AUSF,supplies,AuthenticationVectors,
UDM/ARPF stores subscriber credentials,<object> UDM/ARPF <relationship> stores <object> subscriber credentials.,UDMARPF,stores,SubscriberCredentials,
UDM/ARPF supports authentication via AKA framework,<object> UDM/ARPF <relationship> supports <object> authentication via AKA framework.,UDMARPF,supports,AuthenticationViaAKAFramework,
All SBA APIs must use mutual TLS,<object> All SBA APIs <relationship> must use <object> mutual TLS.,AllSBAAPIs,mustUse,MutualTLS,
Mutual TLS requires client certificates,<object> Mutual TLS <relationship> requires <object> client certificates.,MutualTLS,requires,ClientCertificates,
Mutual TLS requires server certificates,<object> Mutual TLS <relationship> requires <object> server certificates.,MutualTLS,requires,ServerCertificates,
All SBA APIs are often coupled with OAuth authorization,<object> All SBA APIs <relationship> are often coupled with <object> OAuth authorization.,AllSBAAPIs,areOftenCoupledWith,OAuthAuthorization,
IPsec tunnels (NWu/NWt) protect NAS signaling,<object> IPsec tunnels (NWu/NWt) <relationship> protect <object> NAS signaling.,IPsecTunnelsNWuNWt,protect,NASSignaling,
IPsec tunnels (NWu/NWt) operate over non-3GPP access,<object> IPsec tunnels (NWu/NWt) <relationship> operate over <object> non-3GPP access.,IPsecTunnelsNWuNWt,operateOver,Non3GPPAccess,
Optional NULL encryption is used for trusted networks,<object> Optional NULL encryption <relationship> is used for <object> trusted networks.,OptionalNULLEncryption,isUsedFor,TrustedNetworks,
SEPP secures inter-PLMN signaling on N32,<object> SEPP <relationship> secures <object> inter-PLMN signaling on N32.,SEPP,secures,InterPLMNSignalingOnN32,
Securing inter-PLMN uses TLS,<object> Securing inter-PLMN <relationship> uses <object> TLS.,SecuringInterPLMN,uses,TLS,
IPUPS secures N9 GTP-U traffic between UPFs,<object> IPUPS <relationship> secures <object> N9 GTP-U traffic between UPFs.,IPUPS,secures,N9GTPUTrafficBetweenUPFs,
IPUPS uses IPsec-based filtering,<object> IPUPS <relationship> uses <object> IPsec-based filtering.,IPUPS,uses,IPsecBasedFiltering,
NSSAAF enables slice-level authentication,<object> NSSAAF <relationship> enables <object> slice-level authentication.,NSSAAF,enables,SliceLevelAuthentication,
Slice-level authentication uses EAP-based credentials,<object> Slice-level authentication <relationship> uses <object> EAP-based credentials.,SliceLevelAuthentication,uses,EAPBasedCredentials,
EAP-based credentials are used for each network slice,<object> EAP-based credentials <relationship> are used for <object> each network slice.,EAPBasedCredentials,areUsedFor,EachNetworkSlice,
Zero-Trust security demands explicit flow definitions,<object> Zero-Trust security <relationship> demands <object> explicit flow definitions.,ZeroTrustSecurity,demands,ExplicitFlowDefinitions,
Zero-Trust security demands strict policies,<object> Zero-Trust security <relationship> demands <object> strict policies.,ZeroTrustSecurity,demands,StrictPolicies,
Zero-Trust security demands continuous monitoring,<object> Zero-Trust security <relationship> demands <object> continuous monitoring.,ZeroTrustSecurity,demands,ContinuousMonitoring,
Slice management interfaces leverage OAuth,<object> Slice management interfaces <relationship> leverage <object> OAuth.,SliceManagementInterfaces,leverage,OAuth,
Slice management interfaces use mTLS,<object> Slice management interfaces <relationship> use <object> mTLS.,SliceManagementInterfaces,use,MTLS,
OAuth provides access control,<object> OAuth <relationship> provides <object> access control.,OAuth,provides,AccessControl,
UE identity is encrypted as SUCI,<object> UE identity <relationship> is encrypted as <object> SUCI.,UEIdentity,isEncryptedAs,SUCI,
SIDF coordinates to authenticate UE,<object> SIDF <relationship> coordinates to authenticate <object> UE.,SIDF,coordinatesToAuthenticate,UE,
UDM/ARPF coordinates to authenticate UE,<object> UDM/ARPF <relationship> coordinates to authenticate <object> UE.,UDMARPF,coordinatesToAuthenticate,UE,
AUSF coordinates to authenticate UE,<object> AUSF <relationship> coordinates to authenticate <object> UE.,AUSF,coordinatesToAuthenticate,UE,
SEAF coordinates to authenticate UE,<object> SEAF <relationship> coordinates to authenticate <object> UE.,SEAF,coordinatesToAuthenticate,UE,
SEAF coordinates to manage key derivation,<object> SEAF <relationship> coordinates to manage <object> key derivation.,SEAF,coordinatesToManage,KeyDerivation,
UDM/ARPF coordinates to manage key derivation,<object> UDM/ARPF <relationship> coordinates to manage <object> key derivation.,UDMARPF,coordinatesToManage,KeyDerivation,
AUSF coordinates to manage key derivation,<object> AUSF <relationship> coordinates to manage <object> key derivation.,AUSF,coordinatesToManage,KeyDerivation,
SIDF coordinates to manage key derivation,<object> SIDF <relationship> coordinates to manage <object> key derivation.,SIDF,coordinatesToManage,KeyDerivation,
5G key hierarchy includes KAUSF,<object> 5G key hierarchy <relationship> includes <object> KAUSF.,5GKeyHierarchy,includes,KAUSF,
5G key hierarchy includes KSEAF,<object> 5G key hierarchy <relationship> includes <object> KSEAF.,5GKeyHierarchy,includes,KSEAF,
5G authentication session establishes multiple security contexts,<object> 5G authentication session <relationship> establishes <object> multiple security contexts.,5GAuthenticationSession,establishes,MultipleSecurityContexts,
Security contexts span different access types,<object> Security contexts <relationship> span <object> different access types.,SecurityContexts,span,DifferentAccessTypes,
EAP-AKA′ is a symmetric key-based EAP method,<object> EAP-AKA′ <relationship> is <object> symmetric key-based EAP method.,EAPAKA,is,SymmetricKeyBasedEAPMethod,
SUPI encryption enhances privacy,<object> SUPI encryption <relationship> enhances <object> privacy.,SUPIEncryption,enhances,Privacy,
5G-AKA is a mandatory primary authentication protocol across N1 interface,<object> 5G-AKA <relationship> is <object> mandatory primary authentication protocol across N1 interface.,5GAKA,is,MandatoryPrimaryAuthenticationProtocolAcrossN1Interface,
EAP enables unified authentication,<object> EAP <relationship> enables <object> unified authentication.,EAP,enables,UnifiedAuthentication,
N1 interface must be protected using IPsec over non-3GPP access,<object> N1 interface <relationship> must be protected using IPsec over <object> non-3GPP access.,N1Interface,mustBeProtectedUsing,IPsecOverNon3GPPAccess,
N12 interface requires mutual TLS,<object> N12 interface <relationship> requires <object> mutual TLS.,N12Interface,requires,MutualTLS,
Authentication exchanges can be secure,<object> Authentication exchanges <relationship> can be <object> secure.,AuthenticationExchanges,canBe,Secure,
Non-3GPP access requires IPsec tunnels,<object> Non-3GPP access <relationship> requires <object> IPsec tunnels.,Non3GPPAccess,requires,IPsecTunnels,
Wi-Fi is a form of Non-3GPP access,<object> Wi-Fi <relationship> is <object> form of Non-3GPP access.,WiFi,is,FormOfNon3GPPAccess,
UE establishes IPsec signaling SA,<object> UE <relationship> establishes <object> IPsec signaling SA.,UE,establishes,IPsecSignalingSA,
IPsec signaling SA is established with N3IWF,<object> IPsec signaling SA <relationship> is established with <object> N3IWF.,IPsecSignalingSA,isEstablishedWith,N3IWF,
User-plane over Wi-Fi uses separate IPsec child SAs,<object> User-plane over Wi-Fi <relationship> uses <object> separate IPsec child SAs.,UserPlaneOverWiFi,uses,SeparateIPsecChildSAs,
Separate IPsec child SAs are established after PDU session establishment,<object> Separate IPsec child SAs <relationship> are established after <object> PDU session establishment.,SeparateIPsecChildSAs,areEstablishedAfter,PDUSessionEstablishment,
Trusted WLAN setups use layer-2 authentication,<object> Trusted WLAN setups <relationship> use <object> layer-2 authentication.,TrustedWLANSetups,use,Layer2Authentication,
Layer-2 authentication is followed by IPsec signaling SA,<object> Layer-2 authentication <relationship> is followed by <object> IPsec signaling SA.,Layer2Authentication,isFollowedBy,IPsecSignalingSA,
Wi-Fi-only devices without USIM rely on certificate-based EAP-TLS,<object> Wi-Fi-only devices without USIM <relationship> rely on <object> certificate-based EAP-TLS.,WiFiOnlyDevicesWithoutUSIM,relyOn,CertificateBasedEAPTLS,
Wi-Fi-only devices without USIM rely on certificate-based EAP-TTLS,<object> Wi-Fi-only devices without USIM <relationship> rely on <object> certificate-based EAP-TTLS.,WiFiOnlyDevicesWithoutUSIM,relyOn,CertificateBasedEAPTTLS,
Certificate-based EAP-TLS/EAP-TTLS is used in private SNPN environments,<object> Certificate-based EAP-TLS/EAP-TTLS <relationship> is used in <object> private SNPN environments.,CertificateBasedEAPTLSEAPTTLS,isUsedIn,PrivateSNPNEnvironments,
ATSSS enables steering of traffic between 3GPP,<object> ATSSS <relationship> enables steering of traffic between <object> 3GPP.,ATSSS,enables,SteeringOfTrafficBetween,3GPP
ATSSS enables steering of traffic between Wi-Fi,<object> ATSSS <relationship> enables steering of traffic between <object> Wi-Fi.,ATSSS,enables,SteeringOfTrafficBetween,WiFi
ATSSS enables splitting of traffic between 3GPP,<object> ATSSS <relationship> enables splitting of traffic between <object> 3GPP.,ATSSS,enables,SplittingOfTrafficBetween,3GPP
ATSSS enables splitting of traffic between Wi-Fi,<object> ATSSS <relationship> enables splitting of traffic between <object> Wi-Fi.,ATSSS,enables,SplittingOfTrafficBetween,WiFi
Steering or splitting of traffic is based on central policy,<object> Steering or splitting of traffic <relationship> is based on <object> central policy.,SteeringOrSplittingOfTraffic,isBasedOn,CentralPolicy,
NAS messages over Wi-Fi rely on TCP/IP transport,<object> NAS messages over Wi-Fi <relationship> rely on <object> TCP/IP transport.,NASMessagesOverWiFi,relyOn,TCPIPTransport,
"Integration of EAP-5G, IKEv2, and IPsec ensures secure control-plane transport","<object> Integration of EAP-5G, IKEv2, and IPsec <relationship> ensures <object> secure control-plane transport.",IntegrationOfEAP5GIKEv2AndIPsec,ensures,SecureControlPlaneTransport,
Primary authentication in industrial 5G mandates use of 5G-AKA,<object> Primary authentication in industrial 5G <relationship> mandates use of <object> 5G-AKA.,PrimaryAuthenticationInIndustrial5G,mandatesUseOf,5GAKA,
Primary authentication in industrial 5G mandates use of EAP-AKA,<object> Primary authentication in industrial 5G <relationship> mandates use of <object> EAP-AKA.,PrimaryAuthenticationInIndustrial5G,mandatesUseOf,EAPAKA,
Primary authentication in industrial 5G mandates use of EAP-TLS,<object> Primary authentication in industrial 5G <relationship> mandates use of <object> EAP-TLS.,PrimaryAuthenticationInIndustrial5G,mandatesUseOf,EAPTLS,
5G-AKA verifies device identity,<object> 5G-AKA <relationship> verifies <object> device identity.,5GAKA,verifies,DeviceIdentity,
EAP-AKA verifies device identity,<object> EAP-AKA <relationship> verifies <object> device identity.,EAPAKA,verifies,DeviceIdentity,
EAP-TLS verifies device identity,<object> EAP-TLS <relationship> verifies <object> device identity.,EAPTLS,verifies,DeviceIdentity,
Secondary EAP authentication enables access to external services,<object> Secondary EAP authentication <relationship> enables <object> access to external services.,SecondaryEAPAuthentication,enables,AccessToExternalServices,
Secondary EAP authentication enables access to slice-specific networks,<object> Secondary EAP authentication <relationship> enables <object> access to slice-specific networks.,SecondaryEAPAuthentication,enables,AccessToSliceSpecificNetworks,
Access to external services uses alternate credentials,<object> Access to external services <relationship> uses <object> alternate credentials.,AccessToExternalServices,uses,AlternateCredentials,
UDM/HSS securely stores USIM credentials,<object> UDM/HSS <relationship> securely stores <object> USIM credentials.,UDMHSS,securelyStores,USIMCredentials,
UDM/HSS supports provisioning workflows for industrial devices,<object> UDM/HSS <relationship> supports <object> provisioning workflows for industrial devices.,UDMHSS,supports,ProvisioningWorkflowsForIndustrialDevices,
SIM provisioning in industrial environments requires secure lifecycle procedures,<object> SIM provisioning in industrial environments <relationship> requires <object> secure lifecycle procedures.,SIMProvisioningInIndustrialEnvironments,requires,SecureLifecycleProcedures,
Industrial RAN requires IPsec tunnels,<object> Industrial RAN <relationship> requires <object> IPsec tunnels.,IndustrialRAN,requires,IPsecTunnels,
IPsec tunnels protect NAS signaling,<object> IPsec tunnels <relationship> protect <object> NAS signaling.,IPsecTunnels,protects,NASSignaling,
IPsec tunnels protect data-plane,<object> IPsec tunnels <relationship> protect <object> data-plane.,IPsecTunnels,protects,DataPlane,
IPsec tunnels include SPI protections,<object> IPsec tunnels <relationship> include <object> SPI protections.,IPsecTunnels,include,SPIProtections,
NWu is an IPsec tunnel,<object> NWu <relationship> is <object> IPsec tunnel.,NWu,is,IPsecTunnel,
Industrial 5G prioritizes availability over confidentiality,<object> Industrial 5G <relationship> prioritizes <object> availability over confidentiality.,Industrial5G,prioritizes,AvailabilityOverConfidentiality,
Industrial 5G prioritizes deterministic latency over confidentiality,<object> Industrial 5G <relationship> prioritizes <object> deterministic latency over confidentiality.,Industrial5G,prioritizes,DeterministicLatencyOverConfidentiality,
Prioritizing availability and deterministic latency over confidentiality supports maintaining real-time control,<object> Prioritizing availability and deterministic latency over confidentiality <relationship> supports <object> maintaining real-time control.,PrioritizingAvailabilityAndDeterministicLatencyOverConfidentiality,supports,MaintainingRealTimeControl,
TSN traffic must be mapped into 5G slices,<object> TSN traffic <relationship> must be mapped into <object> 5G slices.,TSNTraffic,mustBeMappedInto,5GSlices,
TSN traffic mapping into 5G slices requires real-time scheduling,<object> TSN traffic mapping into 5G slices <relationship> requires <object> real-time scheduling.,TSNTrafficMappingInto5GSlices,requires,RealTimeScheduling,
TSN traffic mapping into 5G slices requires IPsec security,<object> TSN traffic mapping into 5G slices <relationship> requires <object> IPsec security.,TSNTrafficMappingInto5GSlices,requires,IPsecSecurity,
TSN traffic mapping into 5G slices is used for industrial applications,<object> TSN traffic mapping into 5G slices <relationship> is used for <object> industrial applications.,TSNTrafficMappingInto5GSlices,isUsedFor,IndustrialApplications,
Industrial 5G must mitigate wireless-specific threats,<object> Industrial 5G <relationship> must mitigate <object> wireless-specific threats.,Industrial5G,mustMitigate,WirelessSpecificThreats,
Wireless-specific threats include jamming,<object> Wireless-specific threats <relationship> include <object> jamming.,WirelessSpecificThreats,include,Jamming,
Wireless-specific threats include spoofing,<object> Wireless-specific threats <relationship> include <object> spoofing.,WirelessSpecificThreats,include,Spoofing,
Mitigation of wireless-specific threats is achieved via hardened SIM provisioning,<object> Mitigation of wireless-specific threats <relationship> is achieved via <object> hardened SIM provisioning.,MitigationOfWirelessSpecificThreats,isAchievedVia,HardenedSIMProvisioning,
Slice-specific EAP authentication is critical for multiple industrial operations sharing the same 5G infrastructure,<object> Slice-specific EAP authentication <relationship> is <object> critical for multiple industrial operations sharing the same 5G infrastructure.,SliceSpecificEAPAuthentication,is,CriticalForMultipleIndustrialOperationsSharingTheSame5GInfrastructure,
Network telemetry is collected via a monitoring interface,<object> Network telemetry <relationship> is collected via <object> monitoring interface.,NetworkTelemetry,isCollectedVia,MonitoringInterface,
Consumer-facing interface accepts user intent,<object> Consumer-facing interface <relationship> accepts <object> user intent.,ConsumerFacingInterface,accepts,UserIntent,
User intent is defined via 3GPP TS-28.312 intent schemas,<object> User intent <relationship> is defined via <object> 3GPP TS-28.312 intent schemas.,UserIntent,isDefinedVia,3GPPTS28312IntentSchemas,
Use cases include IoT aggregation,<object> Use cases <relationship> include <object> IoT aggregation.,UseCases,include,IoTAggregation,
Use cases include V2X QoS,<object> Use cases <relationship> include <object> V2X QoS.,UseCases,include,V2XQoS,
IoT aggregation use case demonstrates intent-driven slice creation,<object> IoT aggregation use case <relationship> demonstrates <object> intent-driven slice creation.,IoTAggregationUseCase,demonstrates,IntentDrivenSliceCreation,
V2X QoS use case demonstrates intent-driven slice creation,<object> V2X QoS use case <relationship> demonstrates <object> intent-driven slice creation.,V2XQoSUseCase,demonstrates,IntentDrivenSliceCreation,
IoT aggregation use case demonstrates intent-driven SLA enforcement end-to-end,<object> IoT aggregation use case <relationship> demonstrates <object> intent-driven SLA enforcement end-to-end.,IoTAggregationUseCase,demonstrates,IntentDrivenSLAEnforcementEndToEnd,
V2X QoS use case demonstrates intent-driven SLA enforcement end-to-end,<object> V2X QoS use case <relationship> demonstrates <object> intent-driven SLA enforcement end-to-end.,V2XQoSUseCase,demonstrates,IntentDrivenSLAEnforcementEndToEnd,
Intent drives slice creation,<object> Intent <relationship> drives <object> slice creation.,Intent,drives,SliceCreation,
Intent drives SLA enforcement end-to-end,<object> Intent <relationship> drives <object> SLA enforcement end-to-end.,Intent,drives,SLAEnforcementEndToEnd,
Intent is decoupled from execution,<object> Intent <relationship> is <object> decoupled from execution.,Intent,isDecoupledFrom,Execution,
Intent operations include create,<object> Intent operations <relationship> include <object> create.,IntentOperations,include,Create,
Intent operations include modify,<object> Intent operations <relationship> include <object> modify.,IntentOperations,include,Modify,
Intent operations include query,<object> Intent operations <relationship> include <object> query.,IntentOperations,include,Query,
Intent operations include delete,<object> Intent operations <relationship> include <object> delete.,IntentOperations,include,Delete,
Intent operations include activate,<object> Intent operations <relationship> include <object> activate.,IntentOperations,include,Activate,
Intent operations include deactivate,<object> Intent operations <relationship> include <object> deactivate.,IntentOperations,include,Deactivate,
Intent operations manage intent lifecycle states,<object> Intent operations <relationship> manage <object> intent lifecycle states.,IntentOperations,manage,IntentLifecycleStates,
Managing intent lifecycle states applies to each intent operation,<object> Managing intent lifecycle states <relationship> applies to <object> each intent operation.,ManagingIntentLifecycleStates,appliesTo,EachIntentOperation,
Intent content includes expectations,<object> Intent content <relationship> includes <object> expectations.,IntentContent,includes,Expectations,
Expectations include throughput targets,<object> Expectations <relationship> include <object> throughput targets.,Expectations,include,ThroughputTargets,
Expectations include area coverage,<object> Expectations <relationship> include <object> area coverage.,Expectations,include,AreaCoverage,
Intent content is linked to context objects,<object> Intent content <relationship> is linked to <object> context objects.,IntentContent,isLinkedTo,ContextObjects,
TR 28.912 enhances TS 28.312,<object> TR 28.912 <relationship> enhances <object> TS 28.312.,TR28912,enhances,TS28312,
TR 28.912 provides verification reports,<object> TR 28.912 <relationship> provides <object> verification reports.,TR28912,provides,VerificationReports,
Intent expectations can include energy savings targets,<object> Intent expectations <relationship> can include <object> energy savings targets.,IntentExpectations,canInclude,EnergySavingsTargets,
Intent expectations can include service performance metrics,<object> Intent expectations <relationship> can include <object> service performance metrics.,IntentExpectations,canInclude,ServicePerformanceMetrics,
Energy savings targets are balanced against service performance metrics,<object> Energy savings targets <relationship> are balanced against <object> service performance metrics.,EnergySavingsTargets,areBalancedAgainst,ServicePerformanceMetrics,
Release 19 (TR 28.914) extends intent models,<object> Release 19 (TR 28.914) <relationship> extends <object> intent models.,Release19TR28914,extends,IntentModels,
RadioNetworkExpectation includes coverageAreaPolygon,<object> RadioNetworkExpectation <relationship> includes <object> coverageAreaPolygon.,RadioNetworkExpectation,includes,CoverageAreaPolygon,
Network intents are high-level objectives,<object> Network intents <relationship> are <object> high-level objectives.,NetworkIntents,are,HighLevelObjectives,
Conflict detection mechanisms identify overlapping intents,<object> Conflict detection mechanisms <relationship> identify <object> overlapping intents.,ConflictDetectionMechanisms,identify,OverlappingIntents,
Conflict detection mechanisms identify contradictory intents,<object> Conflict detection mechanisms <relationship> identify <object> contradictory intents.,ConflictDetectionMechanisms,identify,ContradictoryIntents,
Identifying overlapping or contradictory intents requires resolution rules,<object> Identifying overlapping or contradictory intents <relationship> requires <object> resolution rules.,IdentifyingOverlappingOrContradictoryIntents,requires,ResolutionRules,
Use cases include slice provisioning,<object> Use cases <relationship> include <object> slice provisioning.,UseCases,include,SliceProvisioning,
Use cases include indoor positioning,<object> Use cases <relationship> include <object> indoor positioning.,UseCases,include,IndoorPositioning,
Use cases include service deployment,<object> Use cases <relationship> include <object> service deployment.,UseCases,include,ServiceDeployment,
Use cases were benchmarked for provisioning latency,<object> Use cases <relationship> were benchmarked for <object> provisioning latency.,UseCases,wereBenchmarkedFor,ProvisioningLatency,
Slice is a customer SLA-backed end-to-end logical network,<object> Slice <relationship> is <object> customer SLA-backed end-to-end logical network.,Slice,is,CustomerSLABackedEndToEndLogicalNetwork,
Slices comprise dedicated resources,<object> Slices <relationship> comprise <object> dedicated resources.,Slices,comprise,DedicatedResources,
Slices comprise shared resources,<object> Slices <relationship> comprise <object> shared resources.,Slices,comprise,SharedResources,
Dedicated and shared resources must be logically isolated from one another,<object> Dedicated and shared resources <relationship> must be <object> logically isolated from one another.,DedicatedAndSharedResources,mustBe,LogicallyIsolatedFromOneAnother,
Business bundles allow operators to combine multiple slice types under a unified SLA,<object> Business bundles <relationship> allow <object> operators to combine multiple slice types under a unified SLA.,BusinessBundles,allow,OperatorsToCombineMultipleSliceTypesUnderAUnifiedSLA,
Operators combine URLLC and eMBB slice types,<object> Operators <relationship> combine <object> URLLC and eMBB slice types.,Operators,combine,URLLCAndEMBBSliceTypes,
Combination of multiple slice types occurs under a unified SLA,<object> Combination of multiple slice types <relationship> occurs under <object> unified SLA.,CombinationOfMultipleSliceTypes,occursUnder,UnifiedSLA,
Generic Slice Templates define attribute domains,<object> Generic Slice Templates <relationship> define <object> attribute domains.,GenericSliceTemplates,define,AttributeDomains,
Attribute domains include latency range,<object> Attribute domains <relationship> include <object> latency range.,AttributeDomains,include,LatencyRange,
Attribute domains include reliability targets,<object> Attribute domains <relationship> include <object> reliability targets.,AttributeDomains,include,ReliabilityTargets,
Attribute domains apply to network slices,<object> Attribute domains <relationship> apply to <object> network slices.,AttributeDomains,applyTo,NetworkSlices,
Network Slice Type instantiates Generic Slice Template (GST),<object> Network Slice Type <relationship> instantiates <object> Generic Slice Template (GST).,NetworkSliceType,instantiates,GenericSliceTemplateGST,
Network Slice Type applies specific values tailored to a vertical use case’s requirements,<object> Network Slice Type <relationship> applies <object> specific values tailored to a vertical use case’s requirements.,NetworkSliceType,applies,SpecificValuesTailoredToAVerticalUseCasesRequirements,
"Slices can span RAN, Core, and Transport domains","<object> Slices <relationship> can span <object> RAN, Core, and Transport domains.",Slices,canSpan,RANDCoreAndTransportDomains,
Slices can be shared across multiple operators,<object> Slices <relationship> can be shared across <object> multiple operators.,Slices,canBeSharedAcross,MultipleOperators,
Sharing slices across multiple operators supports roaming,<object> Sharing slices across multiple operators <relationship> supports <object> roaming.,SharingSlicesAcrossMultipleOperators,supports,Roaming,
Operators publish standardized slice blueprints,<object> Operators <relationship> publish <object> standardized slice blueprints.,Operators,publish,StandardizedSliceBlueprints,
Standardized slice blueprints are published to visited PLMNs,<object> Standardized slice blueprints <relationship> are published to <object> visited PLMNs.,StandardizedSliceBlueprints,arePublishedTo,VisitedPLMNs,
Slice customization is capped by GST/NEST,<object> Slice customization <relationship> is capped by <object> GST/NEST.,SliceCustomization,isCappedBy,GSTNEST,
Use cases like V2X and industrial IoT require elasticity,<object> V2X and industrial IoT use cases <relationship> require <object> elasticity.,V2XAndIndustrialIoTUseCases,require,Elasticity,
Use cases like V2X and industrial IoT require strict traffic isolation from slices,<object> V2X and industrial IoT use cases <relationship> require <object> strict traffic isolation from slices.,V2XAndIndustrialIoTUseCases,require,StrictTrafficIsolationFromSlices,
Regulatory models must handle neutrality,<object> Regulatory models <relationship> must handle <object> neutrality.,RegulatoryModels,mustHandle,Neutrality,
Regulatory models must handle data sovereignty,<object> Regulatory models <relationship> must handle <object> data sovereignty.,RegulatoryModels,mustHandle,DataSovereignty,
Regulatory models must handle cross-border slicing SLAs,<object> Regulatory models <relationship> must handle <object> cross-border slicing SLAs.,RegulatoryModels,mustHandle,CrossBorderSlicingSLAs,
Slice descriptors are central to operator interoperability,<object> Slice descriptors <relationship> are <object> central to operator interoperability.,SliceDescriptors,are,CentralToOperatorInteroperability,
5G slicing enables dynamic per-slice traffic treatment,<object> 5G slicing <relationship> enables <object> dynamic per-slice traffic treatment.,5GSlicing,enables,DynamicPerSliceTrafficTreatment,
NWDAF exposes per-slice KPIs,<object> NWDAF <relationship> exposes <object> per-slice KPIs.,NWDAF,exposes,PerSliceKPIs,
NWDAF employs a consumer–producer model,<object> NWDAF <relationship> employs <object> consumer–producer model.,NWDAF,employs,ConsumerProducerModel,
Consumer–producer model uses standardized interfaces,<object> Consumer–producer model <relationship> uses <object> standardized interfaces.,ConsumerProducerModel,uses,StandardizedInterfaces,
Analytics functions include historical trend analysis,<object> Analytics functions <relationship> include <object> historical trend analysis.,AnalyticsFunctions,include,HistoricalTrendAnalysis,
Analytics functions include predictive modeling,<object> Analytics functions <relationship> include <object> predictive modeling.,AnalyticsFunctions,include,PredictiveModeling,
Analytics functions include anomaly detection,<object> Analytics functions <relationship> include <object> anomaly detection.,AnalyticsFunctions,include,AnomalyDetection,
Analytics functions include QoS sustainability reports,<object> Analytics functions <relationship> include <object> QoS sustainability reports.,AnalyticsFunctions,include,QoSSustainabilityReports,
NWDAF enables real-time regulatory monitoring of net neutrality compliance,<object> NWDAF <relationship> enables <object> real-time regulatory monitoring of net neutrality compliance.,NWDAF,enables,RealTimeRegulatoryMonitoringOfNetNeutralityCompliance,
Real-time regulatory monitoring of net neutrality compliance is based on slice-level transparency,<object> Real-time regulatory monitoring of net neutrality compliance <relationship> is based on <object> slice-level transparency.,RealTimeRegulatoryMonitoringOfNetNeutralityCompliance,isBasedOn,SliceLevelTransparency,
Deployment options include SNPN,<object> Deployment options <relationship> include <object> SNPN.,DeploymentOptions,include,SNPN,
Deployment options include PNI-NPN,<object> Deployment options <relationship> include <object> PNI-NPN.,DeploymentOptions,include,PNINPN,
Deployment options include hybrid models,<object> Deployment options <relationship> include <object> hybrid models.,DeploymentOptions,include,HybridModels,
Hybrid models use shared RAN,<object> Hybrid models <relationship> use <object> shared RAN.,HybridModels,use,SharedRAN,
Hybrid models use TSN integration,<object> Hybrid models <relationship> use <object> TSN integration.,HybridModels,use,TSNIntegration,
Security zones enable dynamic isolation of traffic within slices,<object> Security zones <relationship> enable <object> dynamic isolation of traffic within slices.,SecurityZones,enable,DynamicIsolationOfTrafficWithinSlices,
VLAN-based segmentation enables dynamic isolation of traffic within slices,<object> VLAN-based segmentation <relationship> enables <object> dynamic isolation of traffic within slices.,VLANBasedSegmentation,enables,DynamicIsolationOfTrafficWithinSlices,
Operator policy defines tenant-customizable parameters,<object> Operator policy <relationship> defines <object> tenant-customizable parameters.,OperatorPolicy,defines,TenantCustomizableParameters,
Use-case requirements include latency,<object> Use-case requirements <relationship> include <object> latency.,UseCaseRequirements,include,Latency,
Use-case requirements include reliability,<object> Use-case requirements <relationship> include <object> reliability.,UseCaseRequirements,include,Reliability,
Use-case requirements are qualitatively mapped to NPN architecture types,<object> Use-case requirements <relationship> are qualitatively mapped to <object> NPN architecture types.,UseCaseRequirements,areQualitativelyMappedTo,NPNArchitectureTypes,
Slice access can be geographically constrained using TAC,<object> Slice access <relationship> can be geographically constrained using <object> TAC.,SliceAccess,canBeGeographicallyConstrainedUsing,TAC,
Slice access can be geographically constrained using other location identifiers,<object> Slice access <relationship> can be geographically constrained using <object> other location identifiers.,SliceAccess,canBeGeographicallyConstrainedUsing,OtherLocationIdentifiers,
Edge cloud and TSN functions are co-located based on geo-proximity,<object> Edge cloud and TSN functions <relationship> are co-located based on <object> geo-proximity.,EdgeCloudAndTSNFunctions,areCoLocatedBasedOn,GeoProximity,
Dynamic traffic-driven forwarding rules support adaptive slice isolation,<object> Dynamic traffic-driven forwarding rules <relationship> support <object> adaptive slice isolation.,DynamicTrafficDrivenForwardingRules,support,AdaptiveSliceIsolation,
Dynamic traffic-driven forwarding rules support performance optimization,<object> Dynamic traffic-driven forwarding rules <relationship> support <object> performance optimization.,DynamicTrafficDrivenForwardingRules,support,PerformanceOptimization,
PCF enforces Maximum Slice Data Rate,<object> PCF <relationship> enforces <object> Maximum Slice Data Rate.,PCF,enforces,MaximumSliceDataRate,
PCF rejects SM Policy establishment,<object> PCF <relationship> rejects <object> SM Policy establishment.,PCF,rejects,SMPolicyEstablishment,
PCF rejects PDU session establishment,<object> PCF <relationship> rejects <object> PDU session establishment.,PCF,rejects,PDUSessionEstablishment,
Rejection occurs if slice budget is exceeded,<object> Rejection of SM Policy or PDU session establishment <relationship> occurs if <object> slice budget is exceeded.,RejectionOfSMPolicyOrPDUSessionEstablishment,occursIf,SliceBudgetIsExceeded,
PCF uses slice usage data,<object> PCF <relationship> uses <object> slice usage data.,PCF,uses,SliceUsageData,
Usage data is defined by volume,<object> Usage data <relationship> is defined by <object> volume.,UsageData,isDefinedBy,Volume,
Usage data is defined by duration,<object> Usage data <relationship> is defined by <object> duration.,UsageData,isDefinedBy,Duration,
Slice usage data is provided by NWDAF integration,<object> Slice usage data <relationship> is provided by <object> NWDAF integration.,SliceUsageData,isProvidedBy,NWDAFIntegration,
PCF deducts used capacity from UDR via Session-AMBR,<object> PCF <relationship> deducts used capacity from <object> UDR via Session-AMBR.,PCF,deductsUsedCapacityFrom,UDRViaSessionAMBR,
PCF rejects flow setup due to exceeded data rate,<object> PCF <relationship> rejects <object> flow setup due to exceeded data rate.,PCF,rejects,FlowSetupDueToExceededDataRate,
"SMF returns HTTP 403 ""EXCEEDED_SLICE_DATA_RATE"" to UE","<object> SMF <relationship> returns <object> HTTP 403 ""EXCEEDED_SLICE_DATA_RATE"" to UE.",SMF,returns,HTTP403EXCEEDEDSLICEDATARATEToUE,
Slice capacity is restored to UDR,<object> Slice capacity <relationship> is restored to <object> UDR.,SliceCapacity,isRestoredTo,UDR,
Restoration of slice capacity occurs when sessions terminate,<object> Restoration of slice capacity <relationship> occurs when <object> sessions terminate.,RestorationOfSliceCapacity,occursWhen,SessionsTerminate,
Restoration of slice capacity occurs when GBR rules are modified downward,<object> Restoration of slice capacity <relationship> occurs when <object> GBR rules are modified downward.,RestorationOfSliceCapacity,occursWhen,GBRRulesAreModifiedDownward,
Multiple PCFs can synchronously enforce slice caps,<object> Multiple PCFs <relationship> can synchronously enforce <object> slice caps.,MultiplePCFs,canSynchronouslyEnforce,SliceCaps,
Slice cap enforcement uses conditional UDR updates with etags,<object> Slice cap enforcement <relationship> uses <object> conditional UDR updates with etags.,SliceCapEnforcement,uses,ConditionalUDRUpdatesWithEtags,
Maximum Group Data Rate control is extended to VN groups,<object> Maximum Group Data Rate control <relationship> is extended to <object> VN groups.,MaximumGroupDataRateControl,isExtendedTo,VNGroups,
Emergency services can bypass slice data rate limits,<object> Emergency services <relationship> can bypass <object> slice data rate limits.,EmergencyServices,canBypass,SliceDataRateLimits,
Prioritized services can bypass slice data rate limits,<object> Prioritized services <relationship> can bypass <object> slice data rate limits.,PrioritizedServices,canBypass,SliceDataRateLimits,
Bypassing slice data rate limits is based on operator policy,<object> Bypassing slice data rate limits <relationship> is based on <object> operator policy.,BypassingSliceDataRateLimits,isBasedOn,OperatorPolicy,
Slice caps apply across non-GBR flows,<object> Slice caps <relationship> apply across <object> non-GBR flows.,SliceCaps,applyAcross,NonGBRFlows,
Slice caps apply across GBR flows,<object> Slice caps <relationship> apply across <object> GBR flows.,SliceCaps,applyAcross,GBRFlows,
Non-GBR flows are enforced via Session-AMBR,<object> Non-GBR flows <relationship> are enforced via <object> Session-AMBR.,NonGBRFlows,areEnforcedVia,SessionAMBR,
Control-plane functions are architecturally isolated from user-plane,<object> Control-plane functions <relationship> are <object> architecturally isolated from user-plane.,ControlPlaneFunctions,are,ArchitecturallyIsolatedFromUserPlane,
MANO is a critical CP asset,<object> MANO <relationship> is <object> critical CP asset.,MANO,is,CriticalCPAsset,
NFVO is a critical CP asset,<object> NFVO <relationship> is <object> critical CP asset.,NFVO,is,CriticalCPAsset,
VNF orchestrators are critical CP assets,<object> VNF orchestrators <relationship> are <object> critical CP assets.,VNFOrchestrators,are,CriticalCPAssets,
UPF serves as primary User-Plane NF in 5GC,<object> UPF <relationship> serves as <object> primary User-Plane NF in 5GC.,UPF,servesAs,PrimaryUserPlaneNFIn5GC,
UPF handles packet forwarding,<object> UPF <relationship> handles <object> packet forwarding.,UPF,handles,PacketForwarding,
UPF handles QoS,<object> UPF <relationship> handles <object> QoS.,UPF,handles,QoS,
UPF handles buffering,<object> UPF <relationship> handles <object> buffering.,UPF,handles,Buffering,
UPF handles usage reporting,<object> UPF <relationship> handles <object> usage reporting.,UPF,handles,UsageReporting,
UPF handles mobility anchoring,<object> UPF <relationship> handles <object> mobility anchoring.,UPF,handles,MobilityAnchoring,
UPF interconnects RAN and Data Networks,<object> UPF <relationship> interconnects <object> RAN and Data Networks.,UPF,interconnects,RANAndDataNetworks,
UPF performs reflective QoS marking,<object> UPF <relationship> performs <object> reflective QoS marking.,UPF,performs,ReflectiveQoSMarking,
UPF performs application-specific flow detection,<object> UPF <relationship> performs <object> application-specific flow detection.,UPF,performs,ApplicationSpecificFlowDetection,
UPF uses N3 reference point,<object> UPF <relationship> uses <object> N3 reference point.,UPF,uses,N3ReferencePoint,
PFCP over N4 installs forwarding rules,<object> PFCP <relationship> over <object> N4 installs forwarding rules.,PFCPOverN4,installs,ForwardingRules,
GTP-U encapsulated traffic traverses N3 interface,<object> GTP-U encapsulated traffic <relationship> traverses <object> N3 interface.,GTPUEncapsulatedTraffic,traverses,N3Interface,
GTP-U encapsulated traffic traverses N9 interface,<object> GTP-U encapsulated traffic <relationship> traverses <object> N9 interface.,GTPUEncapsulatedTraffic,traverses,N9Interface,
Traversal of N3 and N9 facilitates user-plane data exchange,<object> Traversal of N3 and N9 <relationship> facilitates <object> user-plane data exchange.,TraversalOfN3AndN9,facilitates,UserPlaneDataExchange,
User-plane data exchange occurs between RAN,<object> User-plane data exchange <relationship> occurs between <object> RAN.,UserPlaneDataExchange,occursBetween,RAN,
User-plane data exchange occurs between UPF instances,<object> User-plane data exchange <relationship> occurs between <object> UPF instances.,UserPlaneDataExchange,occursBetween,UPFInstances,
UPF fulfills Control and User Plane Separation (CUPS) model,<object> UPF <relationship> fulfills <object> Control and User Plane Separation (CUPS) model.,UPF,fulfills,ControlAndUserPlaneSeparationCUPSModel,
CUPS model decouples data-plane processing from control-plane SMF logic,<object> CUPS model <relationship> decouples <object> data-plane processing from control-plane SMF logic.,CUPSModel,decouples,DataPlaneProcessingFromControlPlaneSMFLogic,
Decoupling enables edge deployment,<object> Decoupling of data-plane processing from control-plane SMF logic <relationship> enables <object> edge deployment.,DecouplingOfDataPlaneProcessingFromControlPlaneSMFLogic,enables,EdgeDeployment,
Cloud-native UPF architectures use microservices,<object> Cloud-native UPF architectures <relationship> use <object> microservices.,CloudNativeUPFArchitectures,use,Microservices,
Cloud-native UPF architectures use Kubernetes,<object> Cloud-native UPF architectures <relationship> use <object> Kubernetes.,CloudNativeUPFArchitectures,use,Kubernetes,
Use of microservices and Kubernetes enables elastic scaling,<object> Use of microservices and Kubernetes <relationship> enables <object> elastic scaling.,UseOfMicroservicesAndKubernetes,enables,ElasticScaling,
Elastic scaling supports diverse throughput demands,<object> Elastic scaling <relationship> supports <object> diverse throughput demands.,ElasticScaling,supports,DiverseThroughputDemands,
Branching via N9 allows UPF to split or redirect traffic flows intelligently,<object> Branching via N9 <relationship> allows <object> UPF to split or redirect traffic flows intelligently.,BranchingViaN9,allows,UPFToSplitOrRedirectTrafficFlowsIntelligently,
UPF supports IPv4,<object> UPF <relationship> supports <object> IPv4.,UPF,supports,IPv4,
UPF is the CUPS-based user-plane NF in 5GC,<object> UPF <relationship> is <object> CUPS-based user-plane NF in 5GC.,UPF,is,CUPSBasedUserPlaneNFIn5GC,
CUPS allows UPF to evolve independently,<object> CUPS <relationship> allows <object> UPF to evolve independently.,CUPS,allows,UPFToEvolveIndependently,
CUPS allows UPF to scale independently,<object> CUPS <relationship> allows <object> UPF to scale independently.,CUPS,allows,UPFToScaleIndependently,
Independent evolution and scaling of UPF enables edge deployment,<object> Independent evolution and scaling of UPF <relationship> enables <object> edge deployment.,IndependentEvolutionAndScalingOfUPF,enables,EdgeDeployment,
Edge deployment supports low-latency use cases,<object> Edge deployment <relationship> supports <object> low-latency use cases.,EdgeDeployment,supports,LowLatencyUseCases,
UPF handles IP allocation,<object> UPF <relationship> handles <object> IP allocation.,UPF,handles,IPAllocation,
UPF handles routing,<object> UPF <relationship> handles <object> routing.,UPF,handles,Routing,
UPF handles classification,<object> UPF <relationship> handles <object> classification.,UPF,handles,Classification,
UPF handles branching,<object> UPF <relationship> handles <object> branching.,UPF,handles,Branching,
UPF handles buffering,<object> UPF <relationship> handles <object> buffering.,UPF,handles,Buffering,
UPF handles PFD-based application detection,<object> UPF <relationship> handles <object> PFD-based application detection.,UPF,handles,PFDBasedApplicationDetection,
Packet-level policy enforcement in UPF includes gating,<object> Packet-level policy enforcement in UPF <relationship> includes <object> gating.,PacketLevelPolicyEnforcementInUPF,includes,Gating,
N3 interface uses GTP-U,<object> N3 interface <relationship> uses <object> GTP-U.,N3Interface,uses,GTPU,
N4 interface is used for PFCP rule installation,<object> N4 interface <relationship> is used for <object> PFCP rule installation.,N4Interface,isUsedFor,PFCPRuleInstallation,
PFCP enables rule installation,<object> PFCP <relationship> enables <object> rule installation.,PFCP,enables,RuleInstallation,
Rule installation is enabled for UPF,<object> Rule installation <relationship> is enabled for <object> UPF.,RuleInstallation,isEnabledFor,UPF,
Rule installation occurs via N4,<object> Rule installation <relationship> occurs via <object> N4.,RuleInstallation,occursVia,N4,
Rule installation occurs under SMF control,<object> Rule installation <relationship> occurs under <object> SMF control.,RuleInstallation,occursUnder,SMFControl,
Rule installation includes PDR,<object> Rule installation <relationship> includes <object> PDR.,RuleInstallation,includes,PDR,
N9 chaining supports branching,<object> N9 chaining <relationship> supports <object> branching.,N9Chaining,supports,Branching,
Edge-deployed UPFs support elastic scaling,<object> Edge-deployed UPFs <relationship> support <object> elastic scaling.,EdgeDeployedUPFs,support,ElasticScaling,
Cloud-native architecture supports elastic scaling,<object> Cloud-native architecture <relationship> supports <object> elastic scaling.,CloudNativeArchitecture,supports,ElasticScaling,
Elastic scaling is managed via orchestration platforms,<object> Elastic scaling <relationship> is managed via <object> orchestration platforms.,ElasticScaling,isManagedVia,OrchestrationPlatforms,
UPF supports GTP-U-level packet duplication,<object> UPF <relationship> supports <object> GTP-U-level packet duplication.,UPF,supports,GTPULevelPacketDuplication,
UPF supports GTP-U-level packet elimination,<object> UPF <relationship> supports <object> GTP-U-level packet elimination.,UPF,supports,GTPULevelPacketElimination,
Packet duplication and elimination are used for handover,<object> Packet duplication and elimination <relationship> are used for <object> handover.,PacketDuplicationAndElimination,areUsedFor,Handover,
GTP octet counters on N3 include GTP.InDataOctetsN3,<object> GTP octet counters on N3 <relationship> include <object> GTP.InDataOctetsN3.,GTPOctetCountersOnN3,include,GTP.InDataOctetsN3,
GTP octet counters on N3 include GTP.OutDataOctetsN3,<object> GTP octet counters on N3 <relationship> include <object> GTP.OutDataOctetsN3.,GTPOctetCountersOnN3,include,GTP.OutDataOctetsN3,
GTP.In/OutDataOctetsN3 monitor transport bandwidth usage,<object> GTP.In/OutDataOctetsN3 <relationship> monitor <object> transport bandwidth usage.,GTP.In/OutDataOctetsN3,monitor,TransportBandwidthUsage,
Transport bandwidth usage is tracked per QoS class,<object> Transport bandwidth usage <relationship> is tracked per <object> QoS class.,TransportBandwidthUsage,isTrackedPer,QoSClass,
Packet loss on N3 is tracked via GTP.InDataPktLossN3QoS,<object> Packet loss on N3 <relationship> is tracked via <object> GTP.InDataPktLossN3QoS.,PacketLossOnN3,isTrackedVia,GTP.InDataPktLossN3QoS,
Average and distribution of N3 round-trip delay per DSCP are measured using GTP.RttDelayN3DlPsaUpfMean.DSCP,<object> Average and distribution of N3 round-trip delay per DSCP <relationship> are measured using <object> GTP.RttDelayN3DlPsaUpfMean.DSCP.,AverageAndDistributionOfN3RoundTripDelayPerDSCP,areMeasuredUsing,GTP.RttDelayN3DlPsaUpfMean.DSCP,
N4 PFCP session metrics measure N4SessionEstabReq,<object> N4 PFCP session metrics <relationship> measure <object> N4SessionEstabReq.,N4PFCPSessionMetrics,measure,N4SessionEstabReq,
N4 PFCP session metrics measure N4SessionEstabFail,<object> N4 PFCP session metrics <relationship> measure <object> N4SessionEstabFail.,N4PFCPSessionMetrics,measure,N4SessionEstabFail,
N4 PFCP session metrics measure N4SessionReport,<object> N4 PFCP session metrics <relationship> measure <object> N4SessionReport.,N4PFCPSessionMetrics,measure,N4SessionReport,
N4 PFCP session metrics measure N4SessionReportSucc,<object> N4 PFCP session metrics <relationship> measure <object> N4SessionReportSucc.,N4PFCPSessionMetrics,measure,N4SessionReportSucc,
These metrics assess control-plane signaling performance,<object> These metrics <relationship> assess <object> control-plane signaling performance.,TheseMetrics,assess,ControlPlaneSignalingPerformance,
N6 interface metrics include IP.N6IncLinkUsage,<object> N6 interface metrics <relationship> include <object> IP.N6IncLinkUsage.,N6InterfaceMetrics,include,IP.N6IncLinkUsage,
N6 interface metrics include IP.N6OutLinkUsage,<object> N6 interface metrics <relationship> include <object> IP.N6OutLinkUsage.,N6InterfaceMetrics,include,IP.N6OutLinkUsage,
IP.N6IncLinkUsage and IP.N6OutLinkUsage record IP-layer data volume,<object> IP.N6IncLinkUsage and IP.N6OutLinkUsage <relationship> record <object> IP-layer data volume.,IPN6IncLinkUsageAndIPN6OutLinkUsage,record,IPLayerDataVolume,
These metrics are consistent with RFC 5136 counters,<object> These metrics <relationship> are consistent with <object> RFC 5136 counters.,TheseMetrics,areConsistentWith,RFC5136Counters,
Per-QoS-class measurements enable slice-specific SLA validation,<object> Per-QoS-class measurements <relationship> enable <object> slice-specific SLA validation.,PerQoSClassMeasurements,enable,SliceSpecificSLAValidation,
Per-slice measurements enable slice-specific SLA validation,<object> Per-slice measurements <relationship> enable <object> slice-specific SLA validation.,PerSliceMeasurements,enable,SliceSpecificSLAValidation,
Slice-specific SLA validation occurs across UPF interfaces,<object> Slice-specific SLA validation <relationship> occurs across <object> UPF interfaces.,SliceSpecificSLAValidation,occursAcross,UPFInterfaces,
N3 measurement data provides key inputs to dynamic QoS and scaling actions,<object> N3 measurement data <relationship> provides <object> key inputs to dynamic QoS and scaling actions.,N3MeasurementData,provides,KeyInputsToDynamicQoSAndScalingActions,
N4 measurement data provides key inputs to dynamic QoS and scaling actions,<object> N4 measurement data <relationship> provides <object> key inputs to dynamic QoS and scaling actions.,N4MeasurementData,provides,KeyInputsToDynamicQoSAndScalingActions,
N6 measurement data provides key inputs to dynamic QoS and scaling actions,<object> N6 measurement data <relationship> provides <object> key inputs to dynamic QoS and scaling actions.,N6MeasurementData,provides,KeyInputsToDynamicQoSAndScalingActions,
Dynamic QoS and scaling actions are used in intent-driven orchestration,<object> Dynamic QoS and scaling actions <relationship> are used in <object> intent-driven orchestration.,DynamicQoSAndScalingActions,areUsedIn,IntentDrivenOrchestration,
Monitoring of GTP RTT informs real-time traffic steering,<object> Monitoring of GTP RTT <relationship> informs <object> real-time traffic steering.,MonitoringOfGTPRTT,informs,RealTimeTrafficSteering,
Monitoring of GTP RTT informs re-orchestration decisions,<object> Monitoring of GTP RTT <relationship> informs <object> re-orchestration decisions.,MonitoringOfGTPRTT,informs,ReOrchestrationDecisions,
Monitoring of packet loss informs real-time traffic steering,<object> Monitoring of packet loss <relationship> informs <object> real-time traffic steering.,MonitoringOfPacketLoss,informs,RealTimeTrafficSteering,
Monitoring of packet loss informs re-orchestration decisions,<object> Monitoring of packet loss <relationship> informs <object> re-orchestration decisions.,MonitoringOfPacketLoss,informs,ReOrchestrationDecisions,
UPCR addresses UPF placement in MEC environments,<object> UPCR (UPF placement and chaining reconfiguration) <relationship> addresses <object> UPF placement in MEC environments.,UPCRUPFPlacementAndChainingReconfiguration,addresses,UPFPlacementInMECEnvironments,
UPCR handles user mobility through UPF placement and chaining,<object> UPCR (UPF placement and chaining reconfiguration) <relationship> handles <object> user mobility through UPF placement and chaining.,UPCRUPFPlacementAndChainingReconfiguration,handles,UserMobilityThroughUPFPlacementAndChaining,
DPC-UPCR outperforms baseline schedulers,<object> DPC-UPCR <relationship> outperforms <object> baseline schedulers.,DPCUPCR,outperforms,BaselineSchedulers,
DPC-UPCR reduces reconfiguration event count,<object> DPC-UPCR <relationship> reduces <object> reconfiguration event count.,DPCUPCR,reduces,ReconfigurationEventCount,
DPC-UPCR reduces QoS violations,<object> DPC-UPCR <relationship> reduces <object> QoS violations.,DPCUPCR,reduces,QoSViolations,
UPF repositioning supports proximity anchoring,<object> UPF repositioning <relationship> supports <object> proximity anchoring.,UPFRepositioning,supports,ProximityAnchoring,
Cost–QoS trade-offs are balanced via dynamic UPF chaining,<object> Cost–QoS trade-offs <relationship> are balanced via <object> dynamic UPF chaining.,CostQoSTradeOffs,areBalancedVia,DynamicUPFChaining,
User mobility patterns drive dynamic reconfiguration decisions,<object> User mobility patterns <relationship> drive <object> dynamic reconfiguration decisions.,UserMobilityPatterns,drive,DynamicReconfigurationDecisions,
Dynamic reconfiguration is preferred over purely periodic adjustments,<object> Dynamic reconfiguration <relationship> is preferred over <object> purely periodic adjustments.,DynamicReconfiguration,isPreferredOver,PurelyPeriodicAdjustments,
Scheduling parameters include latency violation rate,<object> Scheduling parameters <relationship> include <object> latency violation rate.,SchedulingParameters,include,LatencyViolationRate,
Scheduling parameters include QoS thresholds,<object> Scheduling parameters <relationship> include <object> QoS thresholds.,SchedulingParameters,include,QoSThresholds,
Latency violation rate and QoS thresholds govern when to deploy UPF migrations,<object> Latency violation rate and QoS thresholds <relationship> govern <object> when to deploy UPF migrations.,LatencyViolationRateAndQoSThresholds,govern,WhenToDeployUPFMigrations,
5G-PPP architecture integrates multi-domain orchestration,<object> 5G-PPP architecture <relationship> integrates <object> multi-domain orchestration.,5GPPPArchitecture,integrates,MultiDomainOrchestration,
Multi-domain orchestration is enabled through ETSI NFV-MANO,<object> Multi-domain orchestration <relationship> is enabled through <object> ETSI NFV-MANO.,MultiDomainOrchestration,isEnabledThrough,ETSINFVMANO,
RAN functions are split,<object> RAN functions <relationship> are <object> split.,RANFunctions,are,Split,
Core network topology includes NFVI in core,<object> Core network topology <relationship> includes <object> NFVI in core.,CoreNetworkTopology,includes,NFVIInCore,
CUPS architecture enables independent scaling,<object> CUPS architecture <relationship> enables <object> independent scaling.,CUPSArchitecture,enables,IndependentScaling,
CUPS architecture separates CU-CP from CU-UP,<object> CUPS architecture <relationship> separates <object> CU-CP from CU-UP.,CUPSArchitecture,separates,CUCPFromCUUP,
CUPS architecture uses SMF–UPF control-plane splits,<object> CUPS architecture <relationship> uses <object> SMF–UPF control-plane splits.,CUPSArchitecture,uses,SMFUPFControlPlaneSplits,
Edge deployment of DU ensures low-latency data handling,<object> Edge deployment of DU <relationship> ensures <object> low-latency data handling.,EdgeDeploymentOfDU,ensures,LowLatencyDataHandling,
SDN agents co-locate with domain NFs,<object> SDN agents <relationship> co-locate with <object> domain NFs.,SDNAgents,coLocateWith,DomainNFs,
SDN agents are managed via NFVO/VNFM,<object> SDN agents <relationship> are managed via <object> NFVO/VNFM.,SDNAgents,areManagedVia,NFVOVNFM,
PHY and MAC layers benefit from hardware acceleration at the DU,<object> PHY and MAC layers <relationship> benefit from <object> hardware acceleration at the DU.,PHYAndMACLayers,benefitFrom,HardwareAccelerationAtTheDU,
PDCP/RRC layers benefit from centralized programmability,<object> PDCP/RRC layers <relationship> benefit from <object> centralized programmability.,PDCPRRCLayers,benefitFrom,CentralizedProgrammability,
Application-aware orchestration includes plug-in service managers,<object> Application-aware orchestration <relationship> includes <object> plug-in service managers.,ApplicationAwareOrchestration,includes,PlugInServiceManagers,
Application-aware orchestration includes plug-in function managers,<object> Application-aware orchestration <relationship> includes <object> plug-in function managers.,ApplicationAwareOrchestration,includes,PlugInFunctionManagers,
Plug-in service and function managers are integrated into MANO,<object> Plug-in service and function managers <relationship> are integrated into <object> MANO.,PlugInServiceAndFunctionManagers,areIntegratedInto,MANO,
Kubernetes is used for edge orchestration,<object> Kubernetes <relationship> is used for <object> edge orchestration.,Kubernetes,isUsedFor,EdgeOrchestration,
Native Kubernetes lacks network-aware scheduling,<object> Native Kubernetes <relationship> lacks <object> network-aware scheduling.,NativeKubernetes,lacks,NetworkAwareScheduling,
Native Kubernetes lacks topology-based placement,<object> Native Kubernetes <relationship> lacks <object> topology-based placement.,NativeKubernetes,lacks,TopologyBasedPlacement,
Network-aware scheduling and topology-based placement are essential for edge scenarios,<object> Network-aware scheduling and topology-based placement <relationship> are essential for <object> edge scenarios.,NetworkAwareSchedulingAndTopologyBasedPlacement,areEssentialFor,EdgeScenarios,
Custom edge Kubernetes deployments use virtual kubelets,<object> Custom edge Kubernetes deployments <relationship> use <object> virtual kubelets.,CustomEdgeKubernetesDeployments,use,VirtualKubelets,
Custom edge Kubernetes deployments use multi-cluster federation,<object> Custom edge Kubernetes deployments <relationship> use <object> multi-cluster federation.,CustomEdgeKubernetesDeployments,use,MultiClusterFederation,
Custom edge Kubernetes deployments use custom schedulers,<object> Custom edge Kubernetes deployments <relationship> use <object> custom schedulers.,CustomEdgeKubernetesDeployments,use,CustomSchedulers,
Edge Kubernetes implementations struggle with real-time metric processing,<object> Edge Kubernetes implementations <relationship> struggle with <object> real-time metric processing.,EdgeKubernetesImplementations,struggleWith,RealTimeMetricProcessing,
Edge Kubernetes implementations struggle with fault-tolerance,<object> Edge Kubernetes implementations <relationship> struggle with <object> fault-tolerance.,EdgeKubernetesImplementations,struggleWith,FaultTolerance,
Edge Kubernetes implementations struggle with container registry placement,<object> Edge Kubernetes implementations <relationship> struggle with <object> container registry placement.,EdgeKubernetesImplementations,struggleWith,ContainerRegistryPlacement,
Edge-focused improvements include installing local metrics servers,<object> Edge-focused improvements <relationship> include <object> installing local metrics servers.,EdgeFocusedImprovements,include,InstallingLocalMetricsServers,
Edge-focused improvements include topology-aware custom schedulers,<object> Edge-focused improvements <relationship> include <object> topology-aware custom schedulers.,EdgeFocusedImprovements,include,TopologyAwareCustomSchedulers,
Edge-focused improvements include edge-located container registries,<object> Edge-focused improvements <relationship> include <object> edge-located container registries.,EdgeFocusedImprovements,include,EdgeLocatedContainerRegistries,
Edge orchestration requires decisions based on real-time network measurements,<object> Edge orchestration <relationship> requires <object> decisions based on real-time network measurements.,EdgeOrchestration,requires,DecisionsBasedOnRealTimeNetworkMeasurements,
Placing container registries on edge nodes reduces network usage,<object> Placing container registries on edge nodes <relationship> reduces <object> network usage.,PlacingContainerRegistriesOnEdgeNodes,reduces,NetworkUsage,
Placing container registries on edge nodes speeds up workload deployment,<object> Placing container registries on edge nodes <relationship> speeds up <object> workload deployment.,PlacingContainerRegistriesOnEdgeNodes,speedsUp,WorkloadDeployment,
Virtual kubelets enable edge nodes to publish as Kubernetes nodes,<object> Virtual kubelets <relationship> enable <object> edge nodes to publish as Kubernetes nodes.,VirtualKubelets,enable,EdgeNodesToPublishAsKubernetesNodes,
Virtual kubelets operate without running full control plane components,<object> Virtual kubelets <relationship> operate without <object> running full control plane components.,VirtualKubelets,operateWithout,RunningFullControlPlaneComponents,
Topology-aware scheduling uses knowledge of node network connectivity,<object> Topology-aware scheduling <relationship> uses <object> knowledge of node network connectivity.,TopologyAwareScheduling,uses,KnowledgeOfNodeNetworkConnectivity,
Knowledge of node network connectivity is used to prioritize workload placement,<object> Knowledge of node network connectivity <relationship> is used to prioritize <object> workload placement.,KnowledgeOfNodeNetworkConnectivity,isUsedToPrioritize,WorkloadPlacement,
Container placement spans cloud domain,<object> Container placement <relationship> spans <object> cloud domain.,ContainerPlacement,spans,CloudDomain,
Container placement spans fog domain,<object> Container placement <relationship> spans <object> fog domain.,ContainerPlacement,spans,FogDomain,
Container placement spans edge domain,<object> Container placement <relationship> spans <object> edge domain.,ContainerPlacement,spans,EdgeDomain,
Container placement optimizes resource use,<object> Container placement <relationship> optimizes <object> resource use.,ContainerPlacement,optimizes,ResourceUse,
Container placement optimizes energy consumption,<object> Container placement <relationship> optimizes <object> energy consumption.,ContainerPlacement,optimizes,EnergyConsumption,
Container placement optimizes fault tolerance,<object> Container placement <relationship> optimizes <object> fault tolerance.,ContainerPlacement,optimizes,FaultTolerance,
Migration techniques include cold migration,<object> Migration techniques <relationship> include <object> cold migration.,MigrationTechniques,include,ColdMigration,
Migration techniques include pre-copy migration,<object> Migration techniques <relationship> include <object> pre-copy migration.,MigrationTechniques,include,PreCopyMigration,
Migration techniques include post-copy migration,<object> Migration techniques <relationship> include <object> post-copy migration.,MigrationTechniques,include,PostCopyMigration,
Migration techniques include hybrid migration,<object> Migration techniques <relationship> include <object> hybrid migration.,MigrationTechniques,include,HybridMigration,
Each migration method has different downtime and resource overhead profiles,<object> Each migration method <relationship> has <object> different downtime and resource overhead profiles.,EachMigrationMethod,has,DifferentDowntimeAndResourceOverheadProfiles,
Edge/fog placements consider latency constraints,<object> Edge/fog placements <relationship> consider <object> latency constraints.,EdgeFogPlacements,consider,LatencyConstraints,
Edge/fog placements consider energy constraints,<object> Edge/fog placements <relationship> consider <object> energy constraints.,EdgeFogPlacements,consider,EnergyConstraints,
Edge/fog placements consider resource constraints,<object> Edge/fog placements <relationship> consider <object> resource constraints.,EdgeFogPlacements,consider,ResourceConstraints,
"Latency, energy, and resource constraints are balanced in trade-off-aware optimization","<object> Latency, energy, and resource constraints <relationship> are balanced in <object> trade-off-aware optimization.",LatencyEnergyAndResourceConstraints,areBalancedIn,TradeOffAwareOptimization,
Fault tolerance in edge setups is supported via proactive migrations,<object> Fault tolerance in edge setups <relationship> is supported via <object> proactive migrations.,FaultToleranceInEdgeSetups,isSupportedVia,ProactiveMigrations,
Energy-aware placement utilizes bin-packing,<object> Energy-aware placement <relationship> utilizes <object> bin-packing.,EnergyAwarePlacement,utilizes,BinPacking,
Bin-packing minimizes number of active fog nodes,<object> Bin-packing <relationship> minimizes <object> number of active fog nodes.,BinPacking,minimizes,NumberOfActiveFogNodes,
Minimizing active fog nodes saves power,<object> Minimizing active fog nodes <relationship> saves <object> power.,MinimizingActiveFogNodes,saves,Power,
Placement models often include QoS constraints,<object> Placement models <relationship> often include <object> QoS constraints.,PlacementModels,oftenInclude,QoSConstraints,
QoS constraints are formulated using Mixed Integer Linear Programming (MILP),<object> QoS constraints <relationship> are formulated using <object> Mixed Integer Linear Programming (MILP).,QoSConstraints,areFormulatedUsing,MixedIntegerLinearProgrammingMILP,
"VNF and container placement across cloud, fog, and edge is NP-hard","<object> VNF and container placement across cloud, fog, and edge <relationship> is <object> NP-hard.",VNFAndContainerPlacementAcrossCloudFogAndEdge,is,NPHard,
Edge placements prioritize low latency,<object> Edge placements <relationship> prioritize <object> low latency.,EdgePlacements,prioritize,LowLatency,
Edge placements prioritize energy efficiency,<object> Edge placements <relationship> prioritize <object> energy efficiency.,EdgePlacements,prioritize,EnergyEfficiency,
Edge placements prioritize resource constraints,<object> Edge placements <relationship> prioritize <object> resource constraints.,EdgePlacements,prioritize,ResourceConstraints,
Edge placements prioritize intermittent connectivity,<object> Edge placements <relationship> prioritize <object> intermittent connectivity.,EdgePlacements,prioritize,IntermittentConnectivity,
Multi-objective placement models balance latency,<object> Multi-objective placement models <relationship> balance <object> latency.,MultiObjectivePlacementModels,balance,Latency,
Multi-objective placement models balance energy,<object> Multi-objective placement models <relationship> balance <object> energy.,MultiObjectivePlacementModels,balance,Energy,
Multi-objective placement models balance cost,<object> Multi-objective placement models <relationship> balance <object> cost.,MultiObjectivePlacementModels,balance,Cost,
Multi-objective placement models balance resource use,<object> Multi-objective placement models <relationship> balance <object> resource use.,MultiObjectivePlacementModels,balance,ResourceUse,
Multi-objective placement models balance fault tolerance,<object> Multi-objective placement models <relationship> balance <object> fault tolerance.,MultiObjectivePlacementModels,balance,FaultTolerance,
Multi-objective placement models balance QoS,<object> Multi-objective placement models <relationship> balance <object> QoS.,MultiObjectivePlacementModels,balance,QoS,
Balanced objectives apply to VNFs and containers,<object> Balanced objectives <relationship> apply to <object> VNFs and containers.,BalancedObjectives,applyTo,VNFsAndContainers,
Optimization models include MIQCP (Mixed-Integer Quadratically Constrained Programming),<object> Optimization models <relationship> include <object> MIQCP (Mixed-Integer Quadratically Constrained Programming).,OptimizationModels,include,MIQCPMixedIntegerQuadraticallyConstrainedProgramming,
Optimization models include bin-packing,<object> Optimization models <relationship> include <object> bin-packing.,OptimizationModels,include,BinPacking,
MIQCP and bin-packing address latency constraints,<object> MIQCP and bin-packing <relationship> address <object> latency constraints.,MIQCPAndBinPacking,address,LatencyConstraints,
MIQCP and bin-packing address energy constraints,<object> MIQCP and bin-packing <relationship> address <object> energy constraints.,MIQCPAndBinPacking,address,EnergyConstraints,
Latency and energy constraints are especially relevant in URLLC scenarios,<object> Latency and energy constraints <relationship> are especially relevant in <object> URLLC scenarios.,LatencyAndEnergyConstraints,areEspeciallyRelevantIn,URLLCScenarios,
Dynamic placement systems migrate VNFs/containers proactively,<object> Dynamic placement systems <relationship> migrate <object> VNFs/containers proactively.,DynamicPlacementSystems,migrate,VNFsContainersProactively,
Proactive migration maintains SLAs,<object> Proactive migration <relationship> maintains <object> SLAs.,ProactiveMigration,maintains,SLAs,
Proactive migration responds to changing network states,<object> Proactive migration <relationship> responds to <object> changing network states.,ProactiveMigration,respondsTo,ChangingNetworkStates,
Container placement extends beyond VNFs,<object> Container placement <relationship> extends beyond <object> VNFs.,ContainerPlacement,extendsBeyond,VNFs,
Container placement includes microservices,<object> Container placement <relationship> includes <object> microservices.,ContainerPlacement,includes,Microservices,
Microservices are placed in MEC environments,<object> Microservices <relationship> are placed in <object> MEC environments.,Microservices,arePlacedIn,MECEnvironments,
Kubernetes StatefulSets provide pod identity guarantees,<object> Kubernetes StatefulSets <relationship> provide <object> pod identity guarantees.,KubernetesStatefulSets,provide,PodIdentityGuarantees,
Kubernetes StatefulSets provide pod ordering guarantees,<object> Kubernetes StatefulSets <relationship> provide <object> pod ordering guarantees.,KubernetesStatefulSets,provide,PodOrderingGuarantees,
Pod identity and ordering guarantees support RAN component scaling,<object> Pod identity and ordering guarantees <relationship> support <object> RAN component scaling.,PodIdentityAndOrderingGuarantees,support,RANComponentScaling,
etcd acts as a distributed key-value store,<object> etcd <relationship> acts as <object> distributed key-value store.,etcd,actsAs,DistributedKeyValueStore,
etcd supports dynamic runtime configuration,<object> etcd <relationship> supports <object> dynamic runtime configuration.,etcd,supports,DynamicRuntimeConfiguration,
Doubling the number of BBU–RRH pods linearly increases fronthaul data throughput,<object> Doubling the number of BBU–RRH pods <relationship> linearly increases <object> fronthaul data throughput.,DoublingTheNumberOfBBURRHPods,linearlyIncreases,FronthaulDataThroughput,
Linear increase in fronthaul data throughput is observed in a containerized RAN testbed,<object> Linear increase in fronthaul data throughput <relationship> is observed in <object> containerized RAN testbed.,LinearIncreaseInFronthaulDataThroughput,isObservedIn,ContainerizedRANTestbed,
Container orchestration enables dynamic resource-driven scaling,<object> Container orchestration <relationship> enables <object> dynamic resource-driven scaling.,ContainerOrchestration,enables,DynamicResourceDrivenScaling,
"Resource metrics (CPU, memory) from Kubernetes can trigger scaling actions","<object> Resource metrics (CPU, memory) from Kubernetes <relationship> can trigger <object> scaling actions.",ResourceMetricsCPUMemoryFromKubernetes,canTrigger,ScalingActions,
Scaling actions are based on observed load patterns,<object> Scaling actions <relationship> are based on <object> observed load patterns.,ScalingActions,areBasedOn,ObservedLoadPatterns,
Container-based virtualization (Docker/LXC) in real-time industrial systems incurs latency jitter (≈37–102 ms),<object> Container-based virtualization (Docker/LXC) in real-time industrial systems <relationship> incurs <object> latency jitter (≈37–102 ms).,ContainerBasedVirtualizationDockerLXCInRealTimeIndustrialSystems,incurs,LatencyJitter≈37–102Ms,
Latency jitter poses challenges for hard real-time constraints,<object> Latency jitter <relationship> poses challenges for <object> hard real-time constraints.,LatencyJitter,posesChallengesFor,HardRealTimeConstraints,
Soft real-time deadlines (50–100 ms) are feasible with containers,<object> Soft real-time deadlines (50–100 ms) <relationship> are feasible with <object> containers.,SoftRealTimeDeadlines50–100Ms,areFeasibleWith,Containers,
"Current orchestration platforms (e.g., Kubernetes) lack real-time awareness","<object> Current orchestration platforms (e.g., Kubernetes) <relationship> lack <object> real-time awareness.",CurrentOrchestrationPlatformsEGKubernetes,lack,RealTimeAwareness,
Lack of real-time awareness includes missing scheduling priorities,<object> Lack of real-time awareness <relationship> includes <object> missing scheduling priorities.,LackOfRealTimeAwareness,includes,MissingSchedulingPriorities,
Industrial-grade container platforms need integration of real-time metrics in orchestration controllers,<object> Industrial-grade container platforms <relationship> need <object> integration of real-time metrics in orchestration controllers.,IndustrialGradeContainerPlatforms,need,IntegrationOfRealTimeMetricsInOrchestrationControllers,
Integration of real-time metrics is required to meet strict latency SLAs,<object> Integration of real-time metrics <relationship> is required to meet <object> strict latency SLAs.,IntegrationOfRealTimeMetrics,isRequiredToMeet,StrictLatencySLAs,
Real-time container maturity is still limited,<object> Real-time container maturity <relationship> is <object> still limited.,RealTimeContainerMaturity,is,StillLimited,
Future solution directions include real-time scheduling extensions,<object> Future solution directions <relationship> include <object> real-time scheduling extensions.,FutureSolutionDirections,include,RealTimeSchedulingExtensions,
Future solution directions include metrics-driven orchestration,<object> Future solution directions <relationship> include <object> metrics-driven orchestration.,FutureSolutionDirections,include,MetricsDrivenOrchestration,
Future solution directions include explicit task-level prioritization,<object> Future solution directions <relationship> include <object> explicit task-level prioritization.,FutureSolutionDirections,include,ExplicitTaskLevelPrioritization,
Time-sensitive container requirements demand enhancements,<object> Time-sensitive container requirements <relationship> demand <object> enhancements.,TimeSensitiveContainerRequirements,demand,Enhancements,
Enhancements can be set up at runtime layer,<object> Enhancements <relationship> can be set up at <object> runtime layer.,Enhancements,canBeSetUpAt,RuntimeLayer,
Enhancements can be set up at orchestration layer,<object> Enhancements <relationship> can be set up at <object> orchestration layer.,Enhancements,canBeSetUpAt,OrchestrationLayer,
Runtime layer enhancements include cgroups and RT kernel,<object> Runtime layer enhancements <relationship> include <object> cgroups and RT kernel.,RuntimeLayerEnhancements,include,CGroupsAndRTKernel,
Orchestration layer enhancements include placement,<object> Orchestration layer enhancements <relationship> include <object> placement.,OrchestrationLayerEnhancements,include,Placement,
Control-plane traffic requires a separate IP subnet,<object> Control-plane traffic <relationship> requires <object> separate IP subnet.,ControlPlaneTraffic,requires,SeparateIPSubnet,
User-plane traffic requires a separate IP subnet,<object> User-plane traffic <relationship> requires <object> separate IP subnet.,UserPlaneTraffic,requires,SeparateIPSubnet,
User-plane traffic goes through N3,<object> User-plane traffic <relationship> goes through <object> N3.,UserPlaneTraffic,goesThrough,N3,
Control-plane traffic goes through N2,<object> Control-plane traffic <relationship> goes through <object> N2.,ControlPlaneTraffic,goesThrough,N2,
Separate IP subnets are not required if VLAN is the same,<object> Separate IP subnets <relationship> are not required if <object> VLAN is the same.,SeparateIPSubnets,areNotRequiredIf,VLANIsTheSame,
Edge deployments use dedicated subnets,<object> Edge deployments <relationship> use <object> dedicated subnets.,EdgeDeployments,use,DedicatedSubnets,
Edge deployments use UE IP pools,<object> Edge deployments <relationship> use <object> UE IP pools.,EdgeDeployments,use,UEIPPools,
Dedicated subnets and UE IP pools are allocated via N6 interfaces,<object> Dedicated subnets and UE IP pools <relationship> are allocated via <object> N6 interfaces.,DedicatedSubnetsAndUEIPPools,areAllocatedVia,N6Interfaces,
Firewalls must allow routes between corporate networks and UE subnets,<object> Firewalls <relationship> must allow <object> routes between corporate networks and UE subnets.,Firewalls,mustAllow,RoutesBetweenCorporateNetworksAndUESubnets,
Firewalls must allow port access between corporate networks and UE subnets,<object> Firewalls <relationship> must allow <object> port access between corporate networks and UE subnets.,Firewalls,mustAllow,PortAccessBetweenCorporateNetworksAndUESubnets,
UE subnets are connected via N6 interface,<object> UE subnets <relationship> are connected via <object> N6 interface.,UESubnets,areConnectedVia,N6Interface,
Gateway routers require single static routes per network,<object> Gateway routers <relationship> require <object> single static routes per network.,GatewayRouters,require,SingleStaticRoutesPerNetwork,
Virtual IPs are managed across redundant ASE devices,<object> Virtual IPs <relationship> are managed across <object> redundant ASE devices.,VirtualIPs,areManagedAcross,RedundantASEDevices,
Separate IP pools are needed for access traffic,<object> Separate IP pools <relationship> are needed for <object> access traffic.,SeparateIPPools,areNeededFor,AccessTraffic,
Proper segmentation supports network isolation,<object> Proper segmentation <relationship> supports <object> network isolation.,ProperSegmentation,supports,NetworkIsolation,
IPv6 is preferred in private 5G deployments,<object> IPv6 <relationship> is preferred in <object> private 5G deployments.,IPv6,isPreferredIn,Private5GDeployments,
DHCP is used for dynamic IP assignment,<object> DHCP <relationship> is used for <object> dynamic IP assignment.,DHCP,isUsedFor,DynamicIPAssignment,
RFC 1918 private IPv4 ranges are used to isolate network slices,<object> RFC 1918 private IPv4 ranges <relationship> are used to isolate <object> network slices.,RFC1918PrivateIPv4Ranges,areUsedToIsolate,NetworkSlices,
NAT segmentation across slices enhances isolation,<object> NAT segmentation across slices <relationship> enhances <object> isolation.,NATSegmentationAcrossSlices,enhances,Isolation,
Automated IPAM systems with monitoring are critical for conflict detection,<object> Automated IPAM systems with monitoring <relationship> are <object> critical for conflict detection.,AutomatedIPAMSystemsWithMonitoring,are,CriticalForConflictDetection,
Real-time IPAM alerts aid rogue device detection,<object> Real-time IPAM alerts <relationship> aid <object> rogue device detection.,RealTimeIPAMAlerts,aid,RogueDeviceDetection,
Real-time IPAM alerts prevent IP conflicts,<object> Real-time IPAM alerts <relationship> prevent <object> IP conflicts.,RealTimeIPAMAlerts,prevent,IPConflicts,
Rogue device detection and IP conflict prevention are essential in private 5G,<object> Rogue device detection and IP conflict prevention <relationship> are <object> essential in private 5G environments.,RogueDeviceDetectionAndIPConflictPrevention,are,EssentialInPrivate5GEnvironments,
SMF dynamically assigns IP chunks,<object> SMF <relationship> dynamically assigns <object> IP chunks.,SMF,dynamicallyAssigns,IPChunks,
IP chunks are assigned to UPFs,<object> IP chunks <relationship> are assigned to <object> UPFs.,IPChunks,areAssignedTo,UPFs,
UPFs allocate individual IPs,<object> UPFs <relationship> allocate <object> individual IPs.,UPFs,allocate,IndividualIPs,
Individual IPs are allocated per UE,<object> Individual IPs <relationship> are allocated per <object> UE.,IndividualIPs,areAllocatedPer,UE,
UPFs report IP usage,<object> UPFs <relationship> report <object> IP usage.,UPFs,report,IPUsage,
IP usage is reported to SMF,<object> IP usage <relationship> is reported to <object> SMF.,IPUsage,isReportedTo,SMF,
Optimal chunk size balances even load distribution,<object> Optimal chunk size <relationship> balances <object> even load distribution.,OptimalChunkSize,balances,EvenLoadDistribution,
Optimal chunk size balances IP exhaustion,<object> Optimal chunk size <relationship> balances <object> IP exhaustion.,OptimalChunkSize,balances,IPExhaustion,
Optimal chunk size balances provisioning overhead,<object> Optimal chunk size <relationship> balances <object> provisioning overhead.,OptimalChunkSize,balances,ProvisioningOverhead,
SMF triggers new IP chunk allocations,<object> SMF <relationship> triggers <object> new IP chunk allocations.,SMF,triggers,NewIPChunkAllocations,
New IP chunk allocations are triggered when UPF usage exceeds 70%,<object> New IP chunk allocations <relationship> are triggered when <object> UPF usage exceeds 70%.,NewIPChunkAllocations,areTriggeredWhen,UPFUsageExceeds70%,
SMF reclaims underutilized IP chunks,<object> SMF <relationship> reclaims <object> underutilized IP chunks.,SMF,reclaims,UnderutilizedIPChunks,
Maximum UPFs per chunk-limited pool are determined by pool size ÷ chunk size,<object> Maximum UPFs per chunk-limited pool <relationship> are determined by <object> pool size divided by chunk size.,MaximumUPFsPerChunkLimitedPool,areDeterminedBy,PoolSizeDividedByChunkSize,
DNS-based UPF selection uses TAC,<object> DNS-based UPF selection <relationship> uses <object> TAC.,DNSBasedUPFSelection,uses,TAC,
SMF enforces chunk throttling,<object> SMF <relationship> enforces <object> chunk throttling.,SMF,enforces,ChunkThrottling,
Chunk throttling is based on UPF’s advertised max session capacity,<object> Chunk throttling <relationship> is based on <object> UPF’s advertised maximum session capacity.,ChunkThrottling,isBasedOn,UPFsAdvertisedMaximumSessionCapacity,
Static IP pools are split,<object> Static IP pools <relationship> are <object> split.,StaticIPPools,are,Split,
Static IP pools are distributed to multiple UPFs,<object> Static IP pools <relationship> are distributed to <object> multiple UPFs.,StaticIPPools,areDistributedTo,MultipleUPFs,
DHCP-based IP allocation via UPF requires PFCP N4 integration,<object> DHCP-based IP allocation via UPF <relationship> requires <object> PFCP N4 integration.,DHCPBasedIPAllocationViaUPF,requires,PFCPN4Integration,
Cisco best practice suggests hierarchical subnet design,<object> Cisco best practice <relationship> suggests <object> hierarchical subnet design.,CiscoBestPractice,suggests,HierarchicalSubnetDesign,
Hierarchical subnet design includes Access layer,<object> Hierarchical subnet design <relationship> includes <object> Access layer.,HierarchicalSubnetDesign,includes,AccessLayer,
Subnetting divides IP space into network and host portions,<object> Subnetting <relationship> divides <object> IP space into network and host portions.,Subnetting,divides,IPSpaceIntoNetworkAndHostPortions,
Subnetting ensures address uniqueness,<object> Subnetting <relationship> ensures <object> address uniqueness.,Subnetting,ensures,AddressUniqueness,
Subnetting enables route summarization,<object> Subnetting <relationship> enables <object> route summarization.,Subnetting,enables,RouteSummarization,
VLSM allows subnets of varying sizes within a block,<object> VLSM <relationship> allows <object> subnets of varying sizes within a block.,VLSM,allows,SubnetsOfVaryingSizesWithinABlock,
VLSM is key for allocating optimal address ranges per NF/service,<object> VLSM <relationship> is key for <object> allocating optimal address ranges per NF/service.,VLSM,isKeyFor,AllocatingOptimalAddressRangesPerNFService,
Hierarchical design localizes network changes,<object> Hierarchical design <relationship> localizes <object> network changes.,HierarchicalDesign,localizes,NetworkChanges,
Hierarchical design improves fault isolation,<object> Hierarchical design <relationship> improves <object> fault isolation.,HierarchicalDesign,improves,FaultIsolation,
Hierarchical design reduces routing table size,<object> Hierarchical design <relationship> reduces <object> routing table size.,HierarchicalDesign,reduces,RoutingTableSize,
Typical /28 subnet is used for NF instances,<object> Typical /28 subnet <relationship> is used for <object> NF instances.,Typical28Subnet,isUsedFor,NFInstances,
Hierarchical subnetting enhances scalability,<object> Hierarchical subnetting <relationship> enhances <object> scalability.,HierarchicalSubnetting,enhances,Scalability,
Separated subnets per network plane aid traffic isolation,<object> Separated subnets per network plane <relationship> aid <object> traffic isolation.,SeparatedSubnetsPerNetworkPlane,aid,TrafficIsolation,
Separated subnets per network plane aid QoS policy enforcement,<object> Separated subnets per network plane <relationship> aid <object> QoS policy enforcement.,SeparatedSubnetsPerNetworkPlane,aid,QoSPolicyEnforcement,
Network plane consists of control plane,<object> Network plane <relationship> consists_of <object> control plane.,NetworkPlane,consistsOf,ControlPlane,
Subnet planning for UPFs defines separate IP ranges per interface,<object> Subnet planning for UPFs <relationship> defines <object> separate IP ranges per interface.,SubnetPlanningForUPFs,defines,SeparateIPRangesPerInterface,
Separate IP ranges are assigned for N3 interface,<object> Separate IP ranges <relationship> are assigned for <object> N3 interface.,SeparateIPRanges,areAssignedFor,N3Interface,
UPFs apply DNN-based policy steering,<object> UPFs <relationship> apply <object> DNN-based policy steering.,UPFs,apply,DNNBasedPolicySteering,
UPFs apply slice-based policy steering,<object> UPFs <relationship> apply <object> slice-based policy steering.,UPFs,apply,SliceBasedPolicySteering,
DNN or slice-based steering allows flexible access control across user flows,<object> DNN or slice-based policy steering <relationship> allows <object> flexible access control across user data flows.,DNNOrSliceBasedPolicySteering,allows,FlexibleAccessControlAcrossUserDataFlows,
N3 octet counters (GTP.In/OutDataOctetsN3UPF) measure data volume,<object> N3 octet counters (GTP.In/OutDataOctetsN3UPF) <relationship> measure <object> data volume.,N3OctetCountersGTPInOutDataOctetsN3UPF,measure,DataVolume,
Data volume is measured on the gNB link,<object> Data volume <relationship> is measured on <object> gNB link.,DataVolume,isMeasuredOn,GNBLink,
Packet loss on N3 is captured as GTP.In/OutDataPktLossN3UPF,<object> Packet loss on N3 <relationship> is captured as <object> GTP.In/OutDataPktLossN3UPF.,PacketLossOnN3,isCapturedAs,GTPInOutDataPktLossN3UPF,
Average RTT per DSCP on N3 is measured using GTP.RttDelayN3DlPsaUpfMean.DSCP,<object> Average RTT per DSCP on N3 <relationship> is measured using <object> GTP.RttDelayN3DlPsaUpfMean.DSCP.,AverageRttPerDSCPOnN3,isMeasuredUsing,GTPRttDelayN3DlPsaUpfMeanDSCP,
GTP.RttDelayN3DlPsaUpfMean.DSCP provides microsecond-level latency metrics,<object> GTP.RttDelayN3DlPsaUpfMean.DSCP <relationship> provides <object> microsecond-level latency metrics.,GTPRttDelayN3DlPsaUpfMeanDSCP,provides,MicrosecondLevelLatencyMetrics,
Microsecond-level latency metrics are provided for QoS classes,<object> Microsecond-level latency metrics <relationship> are provided for <object> QoS classes.,MicrosecondLevelLatencyMetrics,areProvidedFor,QoSClasses,
Out-of-order GTP packet counts help detect sequence issues on N3,<object> Out-of-order GTP packet counts (GTP.InDataPktOutOfOrderN3UPF) <relationship> help detect <object> sequence issues on N3.,OutOfOrderGTPPacketCountsGTPInDataPktOutOfOrderN3UPF,helpDetect,SequenceIssuesOnN3,
Out-of-order GTP packet counts help detect jitter issues on N3,<object> Out-of-order GTP packet counts (GTP.InDataPktOutOfOrderN3UPF) <relationship> help detect <object> jitter issues on N3.,OutOfOrderGTPPacketCountsGTPInDataPktOutOfOrderN3UPF,helpDetect,JitterIssuesOnN3,
N4 PFCP session metrics include SessionEstab,<object> N4 PFCP session metrics <relationship> include <object> SessionEstab.,N4PFCPSessionMetrics,include,SessionEstab,
N4 PFCP session metrics include ReportSucc,<object> N4 PFCP session metrics <relationship> include <object> ReportSucc.,N4PFCPSessionMetrics,include,ReportSucc,
SMF signals UPF in control plane,<object> SMF <relationship> signals <object> UPF.,SMF,signals,UPF,
SMF participates in control-plane signalling,<object> SMF <relationship> participates in <object> control-plane signalling.,SMF,participatesIn,ControlPlaneSignalling,
UPF participates in control-plane signalling,<object> UPF <relationship> participates in <object> control-plane signalling.,UPF,participatesIn,ControlPlaneSignalling,
SessionEstab reflects control-plane signaling health,<object> SessionEstab metric <relationship> reflects <object> control-plane signaling health.,SessionEstabMetric,reflects,ControlPlaneSignalingHealth,
ReportSucc reflects control-plane signaling health,<object> ReportSucc metric <relationship> reflects <object> control-plane signaling health.,ReportSuccMetric,reflects,ControlPlaneSignalingHealth,
N6 link usage counters include IP.N6IncLinkUsage,<object> N6 link usage counters <relationship> include <object> IP.N6IncLinkUsage.,N6LinkUsageCounters,include,IPN6IncLinkUsage,
N6 link usage counters include IP.N6OutLinkUsage,<object> N6 link usage counters <relationship> include <object> IP.N6OutLinkUsage.,N6LinkUsageCounters,include,IPN6OutLinkUsage,
IP.N6IncLinkUsage and IP.N6OutLinkUsage aggregate user-plane bandwidth toward external networks,<object> IP.N6IncLinkUsage and IP.N6OutLinkUsage <relationship> aggregate <object> user-plane bandwidth toward external networks.,IPN6IncLinkUsageAndIPN6OutLinkUsage,aggregate,UserPlaneBandwidthTowardExternalNetworks,
N9 RTT metrics (GTP.RttDelayN9*) quantify latency across chained UPFs,<object> N9 RTT metrics (GTP.RttDelayN9*) <relationship> quantify <object> latency across chained UPFs.,N9RTTMetricsGTPRttDelayN9,quantify,LatencyAcrossChainedUPFs,
N9 RTT metrics support multi-hop performance assessment,<object> N9 RTT metrics <relationship> support <object> multi-hop performance assessment.,N9RTTMetrics,support,MultiHopPerformanceAssessment,
N9 GTP packet counters support slice-level throughput insights,<object> N9 GTP packet counters <relationship> support <object> slice-level throughput insights.,N9GTPPacketCounters,support,SliceLevelThroughputInsights,
N9 GTP byte counters support slice-level throughput insights,<object> N9 GTP byte counters <relationship> support <object> slice-level throughput insights.,N9GTPByteCounters,support,SliceLevelThroughputInsights,
N9 GTP packet/byte counters support control-plane scaling insights,<object> N9 GTP packet/byte counters <relationship> support <object> control-plane scaling insights.,N9GTPPacketByteCounters,support,ControlPlaneScalingInsights,
Measurement split enables slice-specific SLA monitoring,<object> Measurement split <relationship> enables <object> slice-specific SLA monitoring.,MeasurementSplit,enables,SliceSpecificSLAMonitoring,
Interface-level metrics feed QoS enforcement modules,<object> Interface-level metrics <relationship> feed <object> QoS enforcement modules.,InterfaceLevelMetrics,feed,QoSEnforcementModules,
Interface-level metrics feed auto-scaling modules,<object> Interface-level metrics <relationship> feed <object> auto-scaling modules.,InterfaceLevelMetrics,feed,AutoScalingModules,
Interface-level metrics feed anomaly detection modules,<object> Interface-level metrics <relationship> feed <object> anomaly detection modules.,InterfaceLevelMetrics,feed,AnomalyDetectionModules,
These modules operate within intent-driven orchestration,<object> These modules <relationship> operate within <object> intent-driven orchestration.,TheseModules,operateWithin,IntentDrivenOrchestration,
Throughput/latency separation in UPF enables multi-tier traffic handling,<object> Throughput/latency separation in UPF <relationship> enables <object> multi-tier traffic handling.,ThroughputLatencySeparationInUPF,enables,MultiTierTrafficHandling,
Multi-tier traffic handling supports eMBB traffic,<object> Multi-tier traffic handling <relationship> supports <object> eMBB traffic.,MultiTierTrafficHandling,supports,EMBBTraffic,
Throughput is a key QoS metric,<object> Throughput <relationship> is <object> key QoS metric.,Throughput,is,KeyQoSMetric,
Voice services rely on low latency and minimal packet loss,<object> Voice services <relationship> rely on <object> low latency and minimal packet loss.,VoiceServices,relyOn,LowLatencyAndMinimalPacketLoss,
Autonomous vehicles rely on low latency and minimal packet loss,<object> Autonomous vehicles <relationship> rely on <object> low latency and minimal packet loss.,AutonomousVehicles,relyOn,LowLatencyAndMinimalPacketLoss,
Remote medical services rely on low latency and minimal packet loss,<object> Remote medical services <relationship> rely on <object> low latency and minimal packet loss.,RemoteMedicalServices,relyOn,LowLatencyAndMinimalPacketLoss,
AUSF is part of the cohesive 5GC suite,<object> AUSF <relationship> is <object> part of cohesive 5GC suite.,AUSF,is,PartOfCohesive5GCSuite,
Scalability supports high traffic load,<object> Scalability <relationship> supports <object> high traffic load.,Scalability,supports,HighTrafficLoad,
Logical slicing partitions 5G infrastructure,<object> Logical slicing architecture <relationship> partitions <object> 5G infrastructure.,LogicalSlicingArchitecture,partitions,5GInfrastructure,
Partitioning creates QoS-aligned logical networks,<object> Partitioning <relationship> creates <object> QoS-aligned logical networks.,Partitioning,creates,QoSAlignedLogicalNetworks,
QoS-aligned logical networks enable tailored service delivery,<object> QoS-aligned logical networks <relationship> enable <object> tailored service delivery.,QoSAlignedLogicalNetworks,enable,TailoredServiceDelivery,
Slice-aware mobility mechanisms are required to support seamless handover,<object> Slice-aware mobility mechanisms <relationship> are required to support <object> seamless handover.,SliceAwareMobilityMechanisms,areRequiredToSupport,SeamlessHandover,
Dynamic resource allocation among slices supports flexible QoS,<object> Dynamic resource allocation among slices <relationship> supports <object> flexible QoS fulfillment.,DynamicResourceAllocationAmongSlices,supports,FlexibleQoSFulfillment,
"Network slicing introduces challenges (orchestration, mobility, SDN/NFV, reconfiguration)","<object> Network slicing <relationship> introduces <object> challenges in orchestration, mobility coordination, SDN/NFV integration, and infrastructure reconfiguration.",NetworkSlicing,introduces,ChallengesInOrchestrationMobilityCoordinationSDNNFVIntegrationAndInfrastructureReconfiguration,
5G target is ≤ 1 ms end-to-end latency,<object> 5G target <relationship> is <object> ≤ 1 ms end-to-end latency.,5GTarget,is,≤1MsEndToEndLatency,
RAN delays comprise tmpt,<object> RAN delays <relationship> comprise <object> tmpt.,RANDelays,comprise,Tmpt,
RAN delays comprise tbsp,<object> RAN delays <relationship> comprise <object> tbsp.,RANDelays,comprise,Tbsp,
LTE’s 1 ms TTI must be reduced to ≤ 0.25 ms,<object> LTE 1 ms TTI <relationship> must be reduced to <object> ≤ 0.25 ms.,LTE1MsTTI,mustBeReducedTo,≤0.25Ms,
Sub-ms TTI (0.25 ms) lowers latency,<object> Sub-ms TTI (0.25 ms) <relationship> lowers <object> latency.,SubMsTTI0.25Ms,lowers,Latency,
Sub-ms TTI (0.25 ms) increases control overhead,<object> Sub-ms TTI (0.25 ms) <relationship> increases <object> control overhead.,SubMsTTI0.25Ms,increases,ControlOverhead,
SDN/NFV is part of core/backhaul,<object> SDN/NFV <relationship> is <object> part of core/backhaul.,SDNNFV,is,PartOfCoreBackhaul,
Edge caching of popular content shortens backhaul dependencies,<object> Edge caching of popular content <relationship> shortens <object> backhaul dependencies.,EdgeCachingOfPopularContent,shortens,BackhaulDependencies,
Edge caching of popular content shortens content retrieval latency,<object> Edge caching of popular content <relationship> shortens <object> content retrieval latency.,EdgeCachingOfPopularContent,shortens,ContentRetrievalLatency,
NF low-latency requirements include fast CPU,<object> NF low-latency requirements <relationship> include <object> fast CPU.,NFLowLatencyRequirements,include,FastCPU,
NF low-latency requirements include low-latency I/O,<object> NF low-latency requirements <relationship> include <object> low-latency I/O.,NFLowLatencyRequirements,include,LowLatencyIO,
NF low-latency requirements include real-time orchestration responsiveness,<object> NF low-latency requirements <relationship> include <object> real-time orchestration responsiveness.,NFLowLatencyRequirements,include,RealTimeOrchestrationResponsiveness,
RAN + transport + caching enable sub-ms latency,<object> RAN optimization combined with transport and caching <relationship> enables <object> sub-ms latency.,RANOptimizationCombinedWithTransportAndCaching,enables,SubMsLatency,
Reliable ultra-low latency requires core co-design,<object> Reliable ultra-low latency <relationship> requires <object> core co-design.,ReliableUltraLowLatency,requires,CoreCoDesign,
Reliable ultra-low latency requires transport co-design,<object> Reliable ultra-low latency <relationship> requires <object> transport co-design.,ReliableUltraLowLatency,requires,TransportCoDesign,
Intent ‘7 Mbps uplink / ≤ 50 ms latency’ specifies AR/VR requirements,<object> Intent ‘7 Mbps uplink / ≤ 50 ms latency’ <relationship> specifies <object> AR/VR service requirements.,Intent7MbpsUplink≤50MsLatency,specifies,ARVRServiceRequirements,
Intent specification does not detail implementation specifics,<object> Intent specification <relationship> does not detail <object> implementation specifics.,IntentSpecification,doesNotDetail,ImplementationSpecifics,
Impacted layers parse intents using RAN identifiers,<object> Impacted layers <relationship> parse intents using <object> RAN identifiers.,ImpactedLayers,parseIntentsUsing,RANIdentifiers,
RAN identifiers include 5QI and S-NSSAI,<object> RAN identifiers <relationship> include <object> 5QI and S-NSSAI.,RANIdentifiers,include,5QIAndSNSSAI,
5QI and S-NSSAI are used to scope service intents,<object> 5QI and S-NSSAI <relationship> are used to scope <object> service intents.,5QIAndSNSSAI,areUsedToScope,ServiceIntents,
Utility functions in intents guide decision trade-offs,<object> Utility functions in intents <relationship> guide <object> decision-making trade-offs.,UtilityFunctionsInIntents,guide,DecisionMakingTradeOffs,
Decision trade-offs include latency vs energy,<object> Decision-making trade-offs <relationship> include <object> latency vs energy.,DecisionMakingTradeOffs,include,LatencyVsEnergy,
E2E intent latency targets are decomposed into domain contributions,<object> End-to-end intent latency targets <relationship> are decomposed into <object> domain-specific contributions.,EndToEndIntentLatencyTargets,areDecomposedInto,DomainSpecificContributions,
MEF uses controlled natural-language DSLs,<object> MEF <relationship> uses <object> controlled natural-language DSLs.,MEF,uses,ControlledNaturalLanguageDSLs,
Controlled natural-language DSLs express business-level intents,<object> Controlled natural-language DSLs <relationship> express <object> business-level intents.,ControlledNaturalLanguageDSLs,express,BusinessLevelIntents,
Business-level intents include “Skype for Business → mission-critical SLA”,<object> Business-level intents <relationship> include <object> “Skype for Business → mission-critical SLA”.,BusinessLevelIntents,include,SkypeForBusinessMissionCriticalSLA,
Intent-to-policy mapping translates DSL intent into LSO API calls,<object> Intent-to-policy mapping <relationship> translates <object> DSL intent into LSO API calls.,IntentToPolicyMapping,translates,DSLIntentIntoLSOAPICalls,
"LSO API calls include Legato, Adagio, Presto","<object> LSO API calls <relationship> include <object> Legato, Adagio, Presto.",LSOAPICalls,include,LegatoAdagioPresto,
LSO API calls are used for network enforcement,<object> LSO API calls <relationship> are used for <object> network enforcement.,LSOAPICalls,areUsedFor,NetworkEnforcement,
Intent-based automation addresses scaling limitations,<object> Intent-based automation <relationship> addresses <object> scaling limitations.,IntentBasedAutomation,addresses,ScalingLimitations,
Intent-based automation addresses policy complexity,<object> Intent-based automation <relationship> addresses <object> policy complexity.,IntentBasedAutomation,addresses,PolicyComplexity,
Intent-based automation abstracts implementation details,<object> Intent-based automation <relationship> abstracts <object> intent from implementation details.,IntentBasedAutomation,abstracts,IntentFromImplementationDetails,
The system issues SDN flow-rule updates,<object> The system <relationship> issues <object> SDN flow-rule updates.,TheSystem,issues,SDNFlowRuleUpdates,
SDN flow-rule updates steer traffic along the best path,<object> SDN flow-rule updates <relationship> steer <object> traffic along the best path.,SDNFlowRuleUpdates,steer,TrafficAlongTheBestPath,
Best path matches user intent and current metrics,<object> Best path <relationship> matches <object> user intent and current metrics.,BestPath,matches,UserIntentAndCurrentMetrics,
Intent mapping rules map recognized user intent to adaptation policies,<object> Intent mapping rules <relationship> map_to <object> network adaptation policies.,IntentMappingRules,mapTo,NetworkAdaptationPolicies,
QoE is maintained through network reconfiguration,<object> QoE <relationship> is maintained through <object> network reconfiguration.,QoE,isMaintainedThrough,NetworkReconfiguration,
SDN-controlled path adaptation executes intent translation,<object> SDN-controlled path adaptation <relationship> acts as <object> execution layer for intent translation.,SDNControlledPathAdaptation,actsAs,ExecutionLayerForIntentTranslation,
SDN-controlled path adaptation is used in real-time streaming,<object> SDN-controlled path adaptation <relationship> is used in <object> real-time streaming scenarios.,SDNControlledPathAdaptation,isUsedIn,RealTimeStreamingScenarios,
5G networks can support IPv6-only user-plane,<object> 5G networks <relationship> can support <object> IPv6-only user-plane.,5GNetworks,canSupport,IPv6OnlyUserPlane,
IPv6-only user-plane support uses 464XLAT,<object> IPv6-only user-plane support <relationship> uses <object> 464XLAT.,IPv6OnlyUserPlaneSupport,uses,464XLAT,
IPv4-only UEs receive their address via CLAT,<object> IPv4-only UEs <relationship> receive their address via <object> CLAT.,IPv4OnlyUEs,receiveTheirAddressVia,CLAT,
IPv6-only UEs are fully native on the user-plane,<object> IPv6-only UEs <relationship> are <object> fully native on the user-plane.,IPv6OnlyUEs,are,FullyNativeOnTheUserPlane,
Policy configurations include static IP assignment,<object> Policy configurations <relationship> include <object> static IP assignment.,PolicyConfigurations,include,StaticIPAssignment,
Policy configurations include per-UE translation behavior,<object> Policy configurations <relationship> include <object> network translation behavior per UE capability.,PolicyConfigurations,include,NetworkTranslationBehaviorPerUECapability,
IPv6 firewalls should use stateful implicit-deny policies,<object> IPv6 firewalls <relationship> should use <object> stateful implicit-deny policies.,IPv6Firewalls,shouldUse,StatefulImplicitDenyPolicies,
IPv6 firewalls should not use NAT for security,<object> IPv6 firewalls <relationship> should not use <object> NAT for security.,IPv6Firewalls,shouldNotUse,NATForSecurity,
IPSec is recommended to secure IPv6 channels,<object> IPSec <relationship> is recommended to secure <object> IPv6 communication channels.,IPSec,isRecommendedToSecure,IPv6CommunicationChannels,
Firewalls must limit IPv6 multicast scope,<object> Firewalls <relationship> must limit <object> IPv6 multicast scope.,Firewalls,mustLimit,IPv6MulticastScope,
Firewalls must monitor IPv6 transition tunnels,<object> Firewalls <relationship> must monitor <object> IPv6 transition tunnels.,Firewalls,mustMonitor,IPv6TransitionTunnels,
Micro-segmentation implements zero-trust control,<object> Micro-segmentation <relationship> implements <object> zero-trust control.,MicroSegmentation,implements,ZeroTrustControl,
Software-defined perimeters implement zero-trust control,<object> Software-defined perimeters <relationship> implement <object> zero-trust control.,SoftwareDefinedPerimeters,implement,ZeroTrustControl,
Zero-trust limits lateral traffic flow,<object> Zero-trust control <relationship> limits <object> lateral traffic flow.,ZeroTrustControl,limits,LateralTrafficFlow,
5G private network IPAM requires dynamic automation,<object> 5G private network IPAM <relationship> requires <object> dynamic automation.,5GPrivateNetworkIPAM,requires,DynamicAutomation,
5G private network IPAM requires conflict resolution,<object> 5G private network IPAM <relationship> requires <object> conflict resolution.,5GPrivateNetworkIPAM,requires,ConflictResolution,
Dynamic automation and conflict resolution support millions of UE/IoT devices,<object> Dynamic automation and conflict resolution <relationship> support <object> millions of UE and IoT devices.,DynamicAutomationAndConflictResolution,support,MillionsOfUEAndIoTDevices,
IPv4 addressing is restricted to external-facing slices,<object> IPv4 addressing <relationship> is restricted to <object> external-facing slices.,IPv4Addressing,isRestrictedTo,ExternalFacingSlices,
IPAM subnets are isolated per slice,<object> IPAM subnets <relationship> are isolated per <object> slice.,IPAMSubnets,areIsolatedPer,Slice,
IPAM subnets are isolated per NF zone,<object> IPAM subnets <relationship> are isolated per <object> NF zone.,IPAMSubnets,areIsolatedPer,NFZone,
Real-time IPAM monitoring should alert managers,<object> Real-time IPAM monitoring <relationship> should alert <object> network managers.,RealTimeIPAMMonitoring,shouldAlert,NetworkManagers,
IPAM alerts indicate conflicts,<object> IPAM alerts <relationship> indicate <object> conflicts.,IPAMAlerts,indicate,Conflicts,
IPAM alerts indicate rogue addresses,<object> IPAM alerts <relationship> indicate <object> rogue addresses.,IPAMAlerts,indicate,RogueAddresses,
Conflicts and rogue addresses are common in dense deployments,<object> Conflicts and rogue addresses <relationship> are <object> common in dense deployments.,ConflictsAndRogueAddresses,are,CommonInDenseDeployments,
"IPAM must support IPv6-only, dual-stack, and IPv4-translation modes","<object> IPAM <relationship> must support <object> IPv6-only, dual-stack, and IPv4-translation modes.",IPAM,mustSupport,IPv6OnlyDualStackAndIPv4TranslationModes,
Support for these modes enables flexible slice support,<object> Support for these modes <relationship> enables <object> flexible slice support.,SupportForTheseModes,enables,FlexibleSliceSupport,
IPv6 control-plane networks simplify policy strategies,<object> IPv6 control-plane networks <relationship> simplify <object> policy strategies.,IPv6ControlPlaneNetworks,simplify,PolicyStrategies,
IPv6 control-plane networks simplify isolation strategies,<object> IPv6 control-plane networks <relationship> simplify <object> isolation strategies.,IPv6ControlPlaneNetworks,simplify,IsolationStrategies,
Simplified strategies improve compliance with operator frameworks,<object> Simplified policy/isolation strategies <relationship> improve <object> compliance with operator frameworks.,SimplifiedPolicyIsolationStrategies,improve,ComplianceWithOperatorFrameworks,
Operator policies mandate no public IPv4 on CP,<object> Operator policies <relationship> mandate <object> no public IPv4 on control plane.,OperatorPolicies,mandate,NoPublicIPv4OnControlPlane,
Operator policies allow IPv4 for UPF-based NAT translation,<object> Operator policies <relationship> allow <object> IPv4 for UPF-based NAT translation.,OperatorPolicies,allow,IPv4ForUPFBasedNATTranslation,
Slice-specific addressing enhances enforcement of slice policies,<object> Slice-specific addressing <relationship> enhances <object> enforcement of slice-level policies.,SliceSpecificAddressing,enhances,EnforcementOfSliceLevelPolicies,
Time sync in O-RAN requires PPS,<object> Time synchronization in O-RAN <relationship> requires <object> PPS.,TimeSynchronizationInORAN,requires,PPS,
Time sync in O-RAN requires 10 MHz distribution,<object> Time synchronization in O-RAN <relationship> requires <object> 10 MHz frequency distribution.,TimeSynchronizationInORAN,requires,10MHzFrequencyDistribution,
PPS and 10 MHz signals are distributed to USRPs,<object> PPS and 10 MHz signals <relationship> are distributed to <object> USRPs.,PPSAnd10MHzSignals,areDistributedTo,USRPs,
Testbed servers use Ubuntu 20.04/22.04,<object> Testbed servers <relationship> use <object> Ubuntu (20.04/22.04).,TestbedServers,use,Ubuntu20042204,
Testbed servers use low-latency kernels,<object> Testbed servers <relationship> use <object> low-latency kernels.,TestbedServers,use,LowLatencyKernels,
BIOS tuning includes disabling C-states,<object> BIOS tuning <relationship> includes <object> disabling C-states.,BIOSTuning,includes,DisablingCStates,
Modular orchestration supports multiple RIC,<object> Modular orchestration <relationship> supports <object> multiple RIC.,ModularOrchestration,supports,MultipleRIC,
Modular orchestration supports RAN stacks,<object> Modular orchestration <relationship> supports <object> RAN stacks.,ModularOrchestration,supports,RANStacks,
Hardware tuning ensures low latency,<object> Hardware tuning <relationship> ensures <object> low latency.,HardwareTuning,ensures,LowLatency,
Hardware tuning ensures deterministic scheduling,<object> Hardware tuning <relationship> ensures <object> deterministic scheduling.,HardwareTuning,ensures,DeterministicScheduling,
Low latency and deterministic scheduling suit RF O-RAN operations,<object> Low latency and deterministic scheduling <relationship> are <object> suitable for RF-based O-RAN operations.,LowLatencyAndDeterministicScheduling,are,SuitableForRFBasedORANOperations,
Testbed uses srsRAN,<object> Testbed <relationship> uses <object> srsRAN.,Testbed,uses,SrsRAN,
Backhaul uses gigabit Ethernet,<object> Backhaul <relationship> uses <object> gigabit Ethernet.,Backhaul,uses,GigabitEthernet,
Upgrade to 10 Gbps is recommended for high-throughput experiments,<object> Upgrade to 10 Gbps <relationship> is recommended for <object> high-throughput experiments.,UpgradeTo10Gbps,isRecommendedFor,HighThroughputExperiments,
Time sync via NTP is essential for control-plane protocols,<object> Time sync via NTP <relationship> is <object> essential for control-plane protocols.,TimeSyncViaNTP,is,EssentialForControlPlaneProtocols,
RF planning requires configuring USRP gains,<object> RF planning <relationship> requires <object> configuring USRP gains.,RFPlanning,requires,ConfiguringUSRPGains,
Some consumer UEs must be rooted,<object> Some consumer UEs <relationship> must be <object> rooted.,SomeConsumerUEs,mustBe,Rooted,
Some consumer UEs must be APN-modified,<object> Some consumer UEs <relationship> must be <object> APN-modified.,SomeConsumerUEs,mustBe,APNModified,
Rooting and APN modification ensure reliable function in 5G SA testbeds,<object> Rooting and APN modification <relationship> ensure <object> reliable function in 5G SA testbeds.,RootingAndAPNModification,ensure,ReliableFunctionIn5GSATestbeds,
Open5GS logs are critical for NGAP debugging,<object> Open5GS logs <relationship> are <object> critical for NGAP debugging.,Open5GSLogs,are,CriticalForNGAPDebugging,
Basic network slicing uses NSSAI (SST/SD),<object> Basic network slicing <relationship> uses <object> NSSAI (SST/SD).,BasicNetworkSlicing,uses,NSSAISstSd,
NSSAI (SST/SD) is validated in RAN domain,<object> NSSAI (SST/SD) <relationship> is <object> validated in RAN domain.,NSSAISstSd,isValidatedIn,RANDomain,
Consistent slice enforcement is observable in PFCP session setups,<object> Consistent slice enforcement <relationship> is <object> observable in PFCP session setups.,ConsistentSliceEnforcement,isObservableIn,PFCPSessionSetups,
Consumer-grade UE variability necessitates RF tuning/root/APN configs,"<object> Consumer-grade UE variability <relationship> necessitates <object> RF tuning, root access, and APN configurations.",ConsumerGradeUEVariability,necessitates,RFTuningRootAccessAndAPNConfigurations,
These configurations ensure SA connectivity,"<object> RF tuning, root access, and APN configurations <relationship> ensure <object> SA connectivity.",RFTuningRootAccessAndAPNConfigurations,ensure,SAConnectivity,
open5gs-k8s provides microservice Kubernetes manifests for Open5GS,<object> open5gs-k8s <relationship> provides <object> microservice Kubernetes manifests for Open5GS.,Open5gsK8s,provides,MicroserviceKubernetesManifestsForOpen5GS,
Multus enables distinct network attachments,<object> Multus <relationship> enables <object> distinct network attachments.,Multus,enables,DistinctNetworkAttachments,
MongoDB StatefulSets with PVCs store subscriber data externally,<object> MongoDB StatefulSets with PVCs <relationship> store <object> subscriber data externally.,MongoDBStatefulSetsWithPVCs,store,SubscriberDataExternally,
MongoDB StatefulSets with PVCs store NF profile data externally,<object> MongoDB StatefulSets with PVCs <relationship> store <object> NF profile data externally.,MongoDBStatefulSetsWithPVCs,store,NFProfileDataExternally,
CLI/Python scripts automate slice & subscriber provisioning via MongoDB,<object> CLI and Python scripts <relationship> automate <object> slice and subscriber provisioning via MongoDB.,CLIAndPythonScripts,automate,SliceAndSubscriberProvisioningViaMongoDB,
Slice/subscriber automation supports multi-slice deployments,<object> Slice and subscriber provisioning <relationship> supports <object> multi-slice deployments.,SliceAndSubscriberProvisioning,supports,MultiSliceDeployments,
Init containers orchestrate proper startup ordering,<object> Init containers <relationship> orchestrate <object> proper startup ordering.,InitContainers,orchestrate,ProperStartupOrdering,
Proper startup ordering ensures dependency readiness before NF launch,<object> Proper startup ordering <relationship> ensures <object> dependency readiness before NF launch.,ProperStartupOrdering,ensures,DependencyReadinessBeforeNFLaunch,
HPA-based autoscaling is used for 5G CNFs,<object> HPA-based autoscaling <relationship> is used for <object> 5G CNFs.,HPABasedAutoscaling,isUsedFor,5GCNFs,
Scale-down fuse protects critical CNFs,<object> Scale-down fuse <relationship> protects <object> critical CNFs.,ScaleDownFuse,protects,CriticalCNFs,
AMF is a critical CNF,<object> AMF <relationship> is <object> critical CNF.,AMF,is,CriticalCNF,
SCTP protocol (132) must be permitted at network level,<object> SCTP protocol (132) <relationship> must be permitted at <object> network level.,SCTPProtocol132,mustBePermittedAt,NetworkLevel,
SCTP protocol (132) must be permitted at OS level,<object> SCTP protocol (132) <relationship> must be permitted at <object> OS level.,SCTPProtocol132,mustBePermittedAt,OSLevel,
Permitting SCTP supports 5G CNF control-plane communication,<object> Permitting SCTP protocol (132) <relationship> supports <object> 5G CNF control-plane communication.,PermittingSCTPProtocol132,supports,5GCNFControlPlaneCommunication,
Cluster/workload configuration consistency is essential for reliable autoscaling,<object> Cluster and workload configuration consistency <relationship> is <object> essential for reliable auto-scaling.,ClusterAndWorkloadConfigurationConsistency,is,EssentialForReliableAutoScaling,
External DNS is mandatory for realistic end-to-end testbed operation,<object> External DNS <relationship> is <object> mandatory for realistic end-to-end testbed operation.,ExternalDNS,is,MandatoryForRealisticEndToEndTestbedOperation,
Automated deployment uses open-source toolchains,<object> Automated deployment <relationship> uses <object> open-source toolchains.,AutomatedDeployment,uses,OpenSourceToolchains,
"KPI measurement includes latency, throughput, reliability, cross-domain sync","<object> KPI measurement <relationship> includes <object> latency, throughput, reliability, and cross-domain sync.",KPIMeasurement,includes,LatencyThroughputReliabilityAndCrossDomainSync,
KPI data are collected via telemetry,<object> KPI data <relationship> are collected via <object> telemetry.,KPIData,areCollectedVia,Telemetry,
Neutral-host frameworks allow dynamic infrastructure sharing,<object> Neutral-host frameworks <relationship> allow <object> dynamic infrastructure sharing.,NeutralHostFrameworks,allow,DynamicInfrastructureSharing,
Infrastructure sharing is done by operators,<object> Infrastructure sharing <relationship> is done by <object> operators.,InfrastructureSharing,isDoneBy,Operators,
5G-RANGE combines fixed RAN with UAVs,<object> 5G-RANGE <relationship> combines <object> fixed RAN with UAVs.,5GRange,combines,FixedRANWithUAVs,
5G-RANGE is supported by NFV,<object> 5G-RANGE <relationship> is supported by <object> NFV.,5GRange,isSupportedBy,NFV,
End-to-end KPI validation must consider NFV stack maturity,<object> End-to-end KPI validation <relationship> must consider <object> NFV stack maturity.,EndToEndKPIValidation,mustConsider,NFVStackMaturity,
End-to-end KPI validation must consider telemetry quality,<object> End-to-end KPI validation <relationship> must consider <object> telemetry quality.,EndToEndKPIValidation,mustConsider,TelemetryQuality,
End-to-end KPI validation must consider orchestration toolchain alignment,<object> End-to-end KPI validation <relationship> must consider <object> orchestration toolchain alignment.,EndToEndKPIValidation,mustConsider,OrchestrationToolchainAlignment,
Lab-to-production deployment is facilitated by standardized virtualization patterns,<object> Lab-to-production deployment <relationship> is facilitated by <object> standardized virtualization patterns.,LabToProductionDeployment,isFacilitatedBy,StandardizedVirtualizationPatterns,